{
	"id": "b44df8530047463bd4dfe5ad7f5b2f73",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contract-4b98807483_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts@5.0.1/utils/Nonces.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Nonces.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides tracking nonces for addresses. Nonces will only increment.\n */\nabstract contract Nonces {\n    /**\n     * @dev The nonce used for an `account` is not the expected current nonce.\n     */\n    error InvalidAccountNonce(address account, uint256 currentNonce);\n\n    mapping(address account => uint256) private _nonces;\n\n    /**\n     * @dev Returns the next unused nonce for an address.\n     */\n    function nonces(address owner) public view virtual returns (uint256) {\n        return _nonces[owner];\n    }\n\n    /**\n     * @dev Consumes a nonce.\n     *\n     * Returns the current value and increments nonce.\n     */\n    function _useNonce(address owner) internal virtual returns (uint256) {\n        // For each account, the nonce has an initial value of 0, can only be incremented by one, and cannot be\n        // decremented or reset. This guarantees that the nonce never overflows.\n        unchecked {\n            // It is important to do x++ and not ++x here.\n            return _nonces[owner]++;\n        }\n    }\n\n    /**\n     * @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`.\n     */\n    function _useCheckedNonce(address owner, uint256 nonce) internal virtual {\n        uint256 current = _useNonce(owner);\n        if (nonce != current) {\n            revert InvalidAccountNonce(owner, current);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/interfaces/IERC5267.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/ShortStrings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/cryptography/MessageHashUtils.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/cryptography/EIP712.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts@5.0.1/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts@5.0.1/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts@5.0.1/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts@5.0.1/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts@5.0.1/token/ERC20/extensions/ERC20Permit.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712, Nonces {\n    bytes32 private constant PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Permit deadline has expired.\n     */\n    error ERC2612ExpiredSignature(uint256 deadline);\n\n    /**\n     * @dev Mismatched signature.\n     */\n    error ERC2612InvalidSigner(address signer, address owner);\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual {\n        if (block.timestamp > deadline) {\n            revert ERC2612ExpiredSignature(deadline);\n        }\n\n        bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        if (signer != owner) {\n            revert ERC2612InvalidSigner(signer, owner);\n        }\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {\n        return super.nonces(owner);\n    }\n\n    /**\n     * @inheritdoc IERC20Permit\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n}\n\n// File: contract-4b98807483.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\ncontract Pigment is ERC20, ERC20Permit, Ownable {\n    constructor(address initialOwner)\n        ERC20(\"Pigment\", \"PGMT\")\n        ERC20Permit(\"Pigment\")\n        Ownable(initialOwner)\n    {\n        _mint(msg.sender, 6200000000000 * 10 ** decimals());\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contract-4b98807483_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-4b98807483_flattened.sol\":40663:48049  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-4b98807483_flattened.sol\":40663:48049  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220375fd38293b7535540c7e131a57c370029cf16c1deb221b5b02a83adb890d0e664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220375fd38293b7535540c7e131a57c370029cf16c1deb221b5b02a83adb890d0e664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY PUSH0 0xD3 DUP3 SWAP4 0xB7 MSTORE8 SSTORE BLOCKHASH 0xC7 0xE1 BALANCE 0xA5 PUSH29 0x370029CF16C1DEB221B5B02A83ADB890D0E664736F6C63430008160033 ",
							"sourceMap": "40663:7386:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220375fd38293b7535540c7e131a57c370029cf16c1deb221b5b02a83adb890d0e664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATACOPY PUSH0 0xD3 DUP3 SWAP4 0xB7 MSTORE8 SSTORE BLOCKHASH 0xC7 0xE1 BALANCE 0xA5 PUSH29 0x370029CF16C1DEB221B5B02A83ADB890D0E664736F6C63430008160033 ",
							"sourceMap": "40663:7386:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40663,
									"end": 48049,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220375fd38293b7535540c7e131a57c370029cf16c1deb221b5b02a83adb890d0e664736f6c63430008160033",
									".code": [
										{
											"begin": 40663,
											"end": 48049,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 40663,
											"end": 48049,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 40663,
											"end": 48049,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40663,
											"end": 48049,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40663,
											"end": 48049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40663,
											"end": 48049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40663,
											"end": 48049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40663,
											"end": 48049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40663,
											"end": 48049,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-4b98807483_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"ECDSA\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EIP712": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "state-variable-immutable",
						"details": "https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.",
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade]."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"EIP712\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1921,
								"contract": "contract-4b98807483_flattened.sol:EIP712",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contract-4b98807483_flattened.sol:EIP712",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2917,
								"contract": "contract-4b98807483_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2923,
								"contract": "contract-4b98807483_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2925,
								"contract": "contract-4b98807483_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contract-4b98807483_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2929,
								"contract": "contract-4b98807483_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"ERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2917,
								"contract": "contract-4b98807483_flattened.sol:ERC20Permit",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2923,
								"contract": "contract-4b98807483_flattened.sol:ERC20Permit",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2925,
								"contract": "contract-4b98807483_flattened.sol:ERC20Permit",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contract-4b98807483_flattened.sol:ERC20Permit",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2929,
								"contract": "contract-4b98807483_flattened.sol:ERC20Permit",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1921,
								"contract": "contract-4b98807483_flattened.sol:ERC20Permit",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contract-4b98807483_flattened.sol:ERC20Permit",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 13,
								"contract": "contract-4b98807483_flattened.sol:ERC20Permit",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC5267": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							}
						},
						"kind": "dev",
						"methods": {
							"eip712Domain()": {
								"details": "returns the fields and values that describe the domain separator used by this contract for EIP-712 signature."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"eip712Domain()": "84b0196e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"IERC5267\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-4b98807483_flattened.sol\":12081:26995  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-4b98807483_flattened.sol\":12081:26995  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202979399575d9bbc6cb477faba0a429509bec2540a76d3c368a554c04bf49869e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202979399575d9bbc6cb477faba0a429509bec2540a76d3c368a554c04bf49869e64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH26 0x399575D9BBC6CB477FABA0A429509BEC2540A76D3C368A554C04 0xBF 0x49 DUP7 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "12081:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212202979399575d9bbc6cb477faba0a429509bec2540a76d3c368a554c04bf49869e64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 PUSH26 0x399575D9BBC6CB477FABA0A429509BEC2540A76D3C368A554C04 0xBF 0x49 DUP7 SWAP15 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "12081:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12081,
									"end": 26995,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202979399575d9bbc6cb477faba0a429509bec2540a76d3c368a554c04bf49869e64736f6c63430008160033",
									".code": [
										{
											"begin": 12081,
											"end": 26995,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 12081,
											"end": 26995,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12081,
											"end": 26995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12081,
											"end": 26995,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 12081,
											"end": 26995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12081,
											"end": 26995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12081,
											"end": 26995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12081,
											"end": 26995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12081,
											"end": 26995,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-4b98807483_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MessageHashUtils": {
					"abi": [],
					"devdoc": {
						"details": "Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-4b98807483_flattened.sol\":30567:33802  library MessageHashUtils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-4b98807483_flattened.sol\":30567:33802  library MessageHashUtils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208a24f476a5f87036e084fdc7840649bf58a8656203faf9b9643505135784be9f64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208a24f476a5f87036e084fdc7840649bf58a8656203faf9b9643505135784be9f64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x24 DELEGATECALL PUSH23 0xA5F87036E084FDC7840649BF58A8656203FAF9B9643505 SGT JUMPI DUP5 0xBE SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "30567:3235:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208a24f476a5f87036e084fdc7840649bf58a8656203faf9b9643505135784be9f64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0x24 DELEGATECALL PUSH23 0xA5F87036E084FDC7840649BF58A8656203FAF9B9643505 SGT JUMPI DUP5 0xBE SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "30567:3235:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toDataWithIntendedValidatorHash(address,bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30567,
									"end": 33802,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208a24f476a5f87036e084fdc7840649bf58a8656203faf9b9643505135784be9f64736f6c63430008160033",
									".code": [
										{
											"begin": 30567,
											"end": 33802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30567,
											"end": 33802,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30567,
											"end": 33802,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30567,
											"end": 33802,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30567,
											"end": 33802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30567,
											"end": 33802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30567,
											"end": 33802,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30567,
											"end": 33802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30567,
											"end": 33802,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-4b98807483_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"MessageHashUtils\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Nonces": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Provides tracking nonces for addresses. Nonces will only increment.",
						"errors": {
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"nonces(address)": {
								"details": "Returns the next unused nonce for an address."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"nonces(address)": "7ecebe00"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provides tracking nonces for addresses. Nonces will only increment.\",\"errors\":{\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"kind\":\"dev\",\"methods\":{\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"Nonces\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "contract-4b98807483_flattened.sol:Nonces",
								"label": "_nonces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2664,
								"contract": "contract-4b98807483_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pigment": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "ERC2612ExpiredSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC2612InvalidSigner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentNonce",
									"type": "uint256"
								}
							],
							"name": "InvalidAccountNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "EIP712DomainChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "eip712Domain",
							"outputs": [
								{
									"internalType": "bytes1",
									"name": "fields",
									"type": "bytes1"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "version",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "chainId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "verifyingContract",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "extensions",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC2612ExpiredSignature(uint256)": [
								{
									"details": "Permit deadline has expired."
								}
							],
							"ERC2612InvalidSigner(address,address)": [
								{
									"details": "Mismatched signature."
								}
							],
							"InvalidAccountNonce(address,uint256)": [
								{
									"details": "The nonce used for an `account` is not the expected current nonce."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"EIP712DomainChanged()": {
								"details": "MAY be emitted to signal that the domain could have changed."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"eip712Domain()": {
								"details": "See {IERC-5267}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-4b98807483_flattened.sol\":79652:79908  contract Pigment is ERC20, ERC20Permit, Ownable {... */\n  mstore(0x40, 0x0160)\n    /* \"contract-4b98807483_flattened.sol\":79706:79906  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contract-4b98807483_flattened.sol\":79820:79832  initialOwner */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":78390:78442  constructor(string memory name) EIP712(name, \"1\") {} */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x5069676d656e7400000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contract-4b98807483_flattened.sol\":78429:78433  name */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":36997:37428  constructor(string memory name, string memory version) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x01\n  dup2\n  mstore\n  0x20\n  add\n  0x3100000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contract-4b98807483_flattened.sol\":67775:67888  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x07\n  dup2\n  mstore\n  0x20\n  add\n  0x5069676d656e7400000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x50474d5400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contract-4b98807483_flattened.sol\":67849:67854  name_ */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":67841:67846  _name */\n  0x03\n    /* \"contract-4b98807483_flattened.sol\":67841:67854  _name = name_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contract-4b98807483_flattened.sol\":67874:67881  symbol_ */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":67864:67871  _symbol */\n  0x04\n    /* \"contract-4b98807483_flattened.sol\":67864:67881  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"contract-4b98807483_flattened.sol\":67775:67888  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":37070:37115  name.toShortStringWithFallback(_nameFallback) */\n  tag_14\n    /* \"contract-4b98807483_flattened.sol\":37101:37114  _nameFallback */\n  0x05\n    /* \"contract-4b98807483_flattened.sol\":37070:37074  name */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":37070:37100  name.toShortStringWithFallback */\n  shl(0x20, tag_15)\n  swap1\n    /* \"contract-4b98807483_flattened.sol\":37070:37115  name.toShortStringWithFallback(_nameFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"contract-4b98807483_flattened.sol\":37062:37115  _name = name.toShortStringWithFallback(_nameFallback) */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":37136:37187  version.toShortStringWithFallback(_versionFallback) */\n  tag_16\n    /* \"contract-4b98807483_flattened.sol\":37170:37186  _versionFallback */\n  0x06\n    /* \"contract-4b98807483_flattened.sol\":37136:37143  version */\n  dup3\n    /* \"contract-4b98807483_flattened.sol\":37136:37169  version.toShortStringWithFallback */\n  shl(0x20, tag_15)\n  swap1\n    /* \"contract-4b98807483_flattened.sol\":37136:37187  version.toShortStringWithFallback(_versionFallback) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_16:\n    /* \"contract-4b98807483_flattened.sol\":37125:37187  _version = version.toShortStringWithFallback(_versionFallback) */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":37227:37231  name */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":37211:37233  keccak256(bytes(name)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contract-4b98807483_flattened.sol\":37197:37233  _hashedName = keccak256(bytes(name)) */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":37276:37283  version */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":37260:37285  keccak256(bytes(version)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contract-4b98807483_flattened.sol\":37243:37285  _hashedVersion = keccak256(bytes(version)) */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":37313:37326  block.chainid */\n  chainid\n    /* \"contract-4b98807483_flattened.sol\":37296:37326  _cachedChainId = block.chainid */\n  0xa0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":37361:37384  _buildDomainSeparator() */\n  tag_17\n    /* \"contract-4b98807483_flattened.sol\":37361:37382  _buildDomainSeparator */\n  shl(0x20, tag_18)\n    /* \"contract-4b98807483_flattened.sol\":37361:37384  _buildDomainSeparator() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contract-4b98807483_flattened.sol\":37336:37384  _cachedDomainSeparator = _buildDomainSeparator() */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":37416:37420  this */\n  address\n    /* \"contract-4b98807483_flattened.sol\":37394:37421  _cachedThis = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":36997:37428  constructor(string memory name, string memory version) {... */\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":78390:78442  constructor(string memory name) EIP712(name, \"1\") {} */\n  pop\n    /* \"contract-4b98807483_flattened.sol\":60746:60747  0 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":60722:60748  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-4b98807483_flattened.sol\":60722:60734  initialOwner */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":60722:60748  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contract-4b98807483_flattened.sol\":60718:60813  if (initialOwner == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"contract-4b98807483_flattened.sol\":60799:60800  0 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":60771:60802  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract-4b98807483_flattened.sol\":60718:60813  if (initialOwner == address(0)) {... */\ntag_21:\n    /* \"contract-4b98807483_flattened.sol\":60822:60854  _transferOwnership(initialOwner) */\n  tag_24\n    /* \"contract-4b98807483_flattened.sol\":60841:60853  initialOwner */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":60822:60840  _transferOwnership */\n  shl(0x20, tag_25)\n    /* \"contract-4b98807483_flattened.sol\":60822:60854  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contract-4b98807483_flattened.sol\":60674:60861  constructor(address initialOwner) {... */\n  pop\n    /* \"contract-4b98807483_flattened.sol\":79848:79899  _mint(msg.sender, 6200000000000 * 10 ** decimals()) */\n  tag_27\n    /* \"contract-4b98807483_flattened.sol\":79854:79864  msg.sender */\n  caller\n    /* \"contract-4b98807483_flattened.sol\":79888:79898  decimals() */\n  tag_28\n    /* \"contract-4b98807483_flattened.sol\":79888:79896  decimals */\n  shl(0x20, tag_29)\n    /* \"contract-4b98807483_flattened.sol\":79888:79898  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"contract-4b98807483_flattened.sol\":79882:79884  10 */\n  0x0a\n    /* \"contract-4b98807483_flattened.sol\":79882:79898  10 ** decimals() */\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n    /* \"contract-4b98807483_flattened.sol\":79866:79879  6200000000000 */\n  0x05a38ccc3000\n    /* \"contract-4b98807483_flattened.sol\":79866:79898  6200000000000 * 10 ** decimals() */\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n    /* \"contract-4b98807483_flattened.sol\":79848:79853  _mint */\n  shl(0x20, tag_34)\n    /* \"contract-4b98807483_flattened.sol\":79848:79899  _mint(msg.sender, 6200000000000 * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contract-4b98807483_flattened.sol\":79706:79906  constructor(address initialOwner)... */\n  pop\n    /* \"contract-4b98807483_flattened.sol\":79652:79908  contract Pigment is ERC20, ERC20Permit, Ownable {... */\n  jump(tag_35)\n    /* \"contract-4b98807483_flattened.sol\":9153:9493  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_15:\n    /* \"contract-4b98807483_flattened.sol\":9249:9260  ShortString */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":9298:9300  32 */\n  0x20\n    /* \"contract-4b98807483_flattened.sol\":9282:9287  value */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":9276:9295  bytes(value).length */\n  mload\n    /* \"contract-4b98807483_flattened.sol\":9276:9300  bytes(value).length < 32 */\n  lt\n    /* \"contract-4b98807483_flattened.sol\":9272:9487  if (bytes(value).length < 32) {... */\n  iszero\n  tag_37\n  jumpi\n    /* \"contract-4b98807483_flattened.sol\":9323:9343  toShortString(value) */\n  tag_38\n    /* \"contract-4b98807483_flattened.sol\":9337:9342  value */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":9323:9336  toShortString */\n  shl(0x20, tag_39)\n    /* \"contract-4b98807483_flattened.sol\":9323:9343  toShortString(value) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"contract-4b98807483_flattened.sol\":9316:9343  return toShortString(value) */\n  swap1\n  pop\n  jump(tag_36)\n    /* \"contract-4b98807483_flattened.sol\":9272:9487  if (bytes(value).length < 32) {... */\ntag_37:\n    /* \"contract-4b98807483_flattened.sol\":9415:9420  value */\n  dup3\n    /* \"contract-4b98807483_flattened.sol\":9374:9406  StorageSlot.getStringSlot(store) */\n  tag_41\n    /* \"contract-4b98807483_flattened.sol\":9400:9405  store */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":9374:9399  StorageSlot.getStringSlot */\n  shl(0x20, tag_42)\n    /* \"contract-4b98807483_flattened.sol\":9374:9406  StorageSlot.getStringSlot(store) */\n  0x20\n  shr\n  jump\t// in\ntag_41:\n    /* \"contract-4b98807483_flattened.sol\":9374:9412  StorageSlot.getStringSlot(store).value */\n  0x00\n  add\n    /* \"contract-4b98807483_flattened.sol\":9374:9420  StorageSlot.getStringSlot(store).value = value */\n  swap1\n  dup2\n  tag_43\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_43:\n  pop\n    /* \"contract-4b98807483_flattened.sol\":7629:7695  0x00000000000000000000000000000000000000000000000000000000000000FF */\n  0xff\n    /* \"contract-4b98807483_flattened.sol\":9458:9475  FALLBACK_SENTINEL */\n  0x00\n  shl\n    /* \"contract-4b98807483_flattened.sol\":9434:9476  return ShortString.wrap(FALLBACK_SENTINEL) */\n  swap1\n  pop\n    /* \"contract-4b98807483_flattened.sol\":9153:9493  function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {... */\ntag_36:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract-4b98807483_flattened.sol\":37782:37961  function _buildDomainSeparator() private view returns (bytes32) {... */\ntag_18:\n    /* \"contract-4b98807483_flattened.sol\":37837:37844  bytes32 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":35748:35843  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n  0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n    /* \"contract-4b98807483_flattened.sol\":37895:37906  _hashedName */\n  mload(0xe0)\n    /* \"contract-4b98807483_flattened.sol\":37908:37922  _hashedVersion */\n  mload(0x0100)\n    /* \"contract-4b98807483_flattened.sol\":37924:37937  block.chainid */\n  chainid\n    /* \"contract-4b98807483_flattened.sol\":37947:37951  this */\n  address\n    /* \"contract-4b98807483_flattened.sol\":37873:37953  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n  add(0x20, mload(0x40))\n  tag_45\n  swap6\n  swap5\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_46\n  jump\t// in\ntag_45:\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n    /* \"contract-4b98807483_flattened.sol\":37863:37954  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"contract-4b98807483_flattened.sol\":37856:37954  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n  swap1\n  pop\n    /* \"contract-4b98807483_flattened.sol\":37782:37961  function _buildDomainSeparator() private view returns (bytes32) {... */\n  swap1\n  jump\t// out\n    /* \"contract-4b98807483_flattened.sol\":62361:62548  function _transferOwnership(address newOwner) internal virtual {... */\ntag_25:\n    /* \"contract-4b98807483_flattened.sol\":62434:62450  address oldOwner */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":62453:62459  _owner */\n  0x08\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-4b98807483_flattened.sol\":62434:62459  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contract-4b98807483_flattened.sol\":62478:62486  newOwner */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":62469:62475  _owner */\n  0x08\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":62469:62486  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contract-4b98807483_flattened.sol\":62532:62540  newOwner */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":62501:62541  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-4b98807483_flattened.sol\":62522:62530  oldOwner */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":62501:62541  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contract-4b98807483_flattened.sol\":62424:62548  {... */\n  pop\n    /* \"contract-4b98807483_flattened.sol\":62361:62548  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contract-4b98807483_flattened.sol\":68881:68963  function decimals() public view virtual returns (uint8) {... */\ntag_29:\n    /* \"contract-4b98807483_flattened.sol\":68930:68935  uint8 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":68954:68956  18 */\n  0x12\n    /* \"contract-4b98807483_flattened.sol\":68947:68956  return 18 */\n  swap1\n  pop\n    /* \"contract-4b98807483_flattened.sol\":68881:68963  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"contract-4b98807483_flattened.sol\":73600:73808  function _mint(address account, uint256 value) internal {... */\ntag_34:\n    /* \"contract-4b98807483_flattened.sol\":73689:73690  0 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":73670:73691  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-4b98807483_flattened.sol\":73670:73677  account */\n  dup3\n    /* \"contract-4b98807483_flattened.sol\":73670:73691  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contract-4b98807483_flattened.sol\":73666:73757  if (account == address(0)) {... */\n  tag_50\n  jumpi\n    /* \"contract-4b98807483_flattened.sol\":73743:73744  0 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":73714:73746  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_51\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract-4b98807483_flattened.sol\":73666:73757  if (account == address(0)) {... */\ntag_50:\n    /* \"contract-4b98807483_flattened.sol\":73766:73801  _update(address(0), account, value) */\n  tag_52\n    /* \"contract-4b98807483_flattened.sol\":73782:73783  0 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":73786:73793  account */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":73795:73800  value */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":73766:73773  _update */\n  shl(0x20, tag_53)\n    /* \"contract-4b98807483_flattened.sol\":73766:73801  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_52:\n    /* \"contract-4b98807483_flattened.sol\":73600:73808  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contract-4b98807483_flattened.sol\":7947:8233  function toShortString(string memory str) internal pure returns (ShortString) {... */\ntag_39:\n    /* \"contract-4b98807483_flattened.sol\":8012:8023  ShortString */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":8035:8052  bytes memory bstr */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":8061:8064  str */\n  dup3\n    /* \"contract-4b98807483_flattened.sol\":8035:8065  bytes memory bstr = bytes(str) */\n  swap1\n  pop\n    /* \"contract-4b98807483_flattened.sol\":8093:8095  31 */\n  0x1f\n    /* \"contract-4b98807483_flattened.sol\":8079:8083  bstr */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":8079:8090  bstr.length */\n  mload\n    /* \"contract-4b98807483_flattened.sol\":8079:8095  bstr.length > 31 */\n  gt\n    /* \"contract-4b98807483_flattened.sol\":8075:8147  if (bstr.length > 31) {... */\n  iszero\n  tag_55\n  jumpi\n    /* \"contract-4b98807483_flattened.sol\":8132:8135  str */\n  dup3\n    /* \"contract-4b98807483_flattened.sol\":8118:8136  StringTooLong(str) */\n  mload(0x40)\n  0x305a27a900000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_56\n  swap2\n  swap1\n  tag_57\n  jump\t// in\ntag_56:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract-4b98807483_flattened.sol\":8075:8147  if (bstr.length > 31) {... */\ntag_55:\n    /* \"contract-4b98807483_flattened.sol\":8213:8217  bstr */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":8213:8224  bstr.length */\n  mload\n    /* \"contract-4b98807483_flattened.sol\":8204:8208  bstr */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":8196:8209  bytes32(bstr) */\n  tag_58\n  swap1\n  tag_59\n  jump\t// in\ntag_58:\n    /* \"contract-4b98807483_flattened.sol\":8188:8210  uint256(bytes32(bstr)) */\n  0x00\n  shr\n    /* \"contract-4b98807483_flattened.sol\":8188:8224  uint256(bytes32(bstr)) | bstr.length */\n  or\n    /* \"contract-4b98807483_flattened.sol\":8180:8225  bytes32(uint256(bytes32(bstr)) | bstr.length) */\n  0x00\n  shl\n    /* \"contract-4b98807483_flattened.sol\":8156:8226  return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length)) */\n  swap2\n  pop\n  pop\n    /* \"contract-4b98807483_flattened.sol\":7947:8233  function toShortString(string memory str) internal pure returns (ShortString) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contract-4b98807483_flattened.sol\":5457:5659  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\ntag_42:\n    /* \"contract-4b98807483_flattened.sol\":5525:5545  StringSlot storage r */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":5633:5643  store.slot */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":5623:5643  r.slot := store.slot */\n  swap1\n  pop\n    /* \"contract-4b98807483_flattened.sol\":5457:5659  function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contract-4b98807483_flattened.sol\":72150:73257  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_53:\n    /* \"contract-4b98807483_flattened.sol\":72255:72256  0 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":72239:72257  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-4b98807483_flattened.sol\":72239:72243  from */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":72239:72257  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contract-4b98807483_flattened.sol\":72235:72775  if (from == address(0)) {... */\n  tag_62\n  jumpi\n    /* \"contract-4b98807483_flattened.sol\":72391:72396  value */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":72375:72387  _totalSupply */\n  0x02\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":72375:72396  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_63\n  swap2\n  swap1\n  tag_64\n  jump\t// in\ntag_63:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract-4b98807483_flattened.sol\":72235:72775  if (from == address(0)) {... */\n  jump(tag_65)\ntag_62:\n    /* \"contract-4b98807483_flattened.sol\":72427:72446  uint256 fromBalance */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":72449:72458  _balances */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":72449:72464  _balances[from] */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":72459:72463  from */\n  dup6\n    /* \"contract-4b98807483_flattened.sol\":72449:72464  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contract-4b98807483_flattened.sol\":72427:72464  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contract-4b98807483_flattened.sol\":72496:72501  value */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":72482:72493  fromBalance */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":72482:72501  fromBalance < value */\n  lt\n    /* \"contract-4b98807483_flattened.sol\":72478:72593  if (fromBalance < value) {... */\n  iszero\n  tag_66\n  jumpi\n    /* \"contract-4b98807483_flattened.sol\":72553:72557  from */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":72559:72570  fromBalance */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":72572:72577  value */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":72528:72578  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_67\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_68\n  jump\t// in\ntag_67:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contract-4b98807483_flattened.sol\":72478:72593  if (fromBalance < value) {... */\ntag_66:\n    /* \"contract-4b98807483_flattened.sol\":72745:72750  value */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":72731:72742  fromBalance */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":72731:72750  fromBalance - value */\n  sub\n    /* \"contract-4b98807483_flattened.sol\":72713:72722  _balances */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":72713:72728  _balances[from] */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":72723:72727  from */\n  dup7\n    /* \"contract-4b98807483_flattened.sol\":72713:72728  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contract-4b98807483_flattened.sol\":72713:72750  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract-4b98807483_flattened.sol\":72413:72775  {... */\n  pop\n    /* \"contract-4b98807483_flattened.sol\":72235:72775  if (from == address(0)) {... */\ntag_65:\n    /* \"contract-4b98807483_flattened.sol\":72803:72804  0 */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":72789:72805  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-4b98807483_flattened.sol\":72789:72791  to */\n  dup3\n    /* \"contract-4b98807483_flattened.sol\":72789:72805  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contract-4b98807483_flattened.sol\":72785:73210  if (to == address(0)) {... */\n  tag_69\n  jumpi\n    /* \"contract-4b98807483_flattened.sol\":72968:72973  value */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":72952:72964  _totalSupply */\n  0x02\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":72952:72973  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract-4b98807483_flattened.sol\":72785:73210  if (to == address(0)) {... */\n  jump(tag_70)\ntag_69:\n    /* \"contract-4b98807483_flattened.sol\":73180:73185  value */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":73163:73172  _balances */\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":73163:73176  _balances[to] */\n  dup1\n    /* \"contract-4b98807483_flattened.sol\":73173:73175  to */\n  dup5\n    /* \"contract-4b98807483_flattened.sol\":73163:73176  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contract-4b98807483_flattened.sol\":73163:73185  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contract-4b98807483_flattened.sol\":72785:73210  if (to == address(0)) {... */\ntag_70:\n    /* \"contract-4b98807483_flattened.sol\":73240:73242  to */\n  dup2\n    /* \"contract-4b98807483_flattened.sol\":73225:73250  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contract-4b98807483_flattened.sol\":73234:73238  from */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":73225:73250  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contract-4b98807483_flattened.sol\":73244:73249  value */\n  dup4\n    /* \"contract-4b98807483_flattened.sol\":73225:73250  Transfer(from, to, value) */\n  mload(0x40)\n  tag_71\n  swap2\n  swap1\n  tag_72\n  jump\t// in\ntag_71:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contract-4b98807483_flattened.sol\":72150:73257  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_74:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_76:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_77:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_122\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_76\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_78:\n    /* \"#utility.yul\":641:665   */\n  tag_124\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_77\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_125\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_125:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_79:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_127\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_78\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_130\n  tag_74\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":932:1051   */\ntag_129:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_131\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_79\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_80:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_81:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_82:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_83:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_136:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_137\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_138\n  tag_82\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":1909:1993   */\ntag_137:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_84:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_85:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_86:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_87:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_143\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_86\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":2624:2663   */\n  tag_144\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_86\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_88:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_89:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_90:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_148\n    /* \"#utility.yul\":3013:3047   */\n  tag_149\n    /* \"#utility.yul\":3022:3046   */\n  tag_150\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_88\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3013:3047   */\n  tag_89\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":2995:3048   */\n  tag_88\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_91:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_92:\n    /* \"#utility.yul\":3251:3290   */\n  tag_153\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_90\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":3312:3403   */\n  tag_154\n    /* \"#utility.yul\":3361:3402   */\n  tag_155\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_91\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_87\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_93:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_94:\n    /* \"#utility.yul\":3572:3604   */\n  tag_158\n  tag_93\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":3613:3678   */\n  tag_159\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_92\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_95:\n    /* \"#utility.yul\":3750:3870   */\ntag_161:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_164\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_94\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_161)\ntag_163:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_96:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_167\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_84\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":4101:4130   */\n  tag_168\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_85\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_169:\n    /* \"#utility.yul\":4328:4408   */\n  tag_170\n    /* \"#utility.yul\":4384:4406   */\n  tag_171\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_85\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_95\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_166:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_97:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_98:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_174\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_97\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_99:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_176\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_98\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_11:\n    /* \"#utility.yul\":5145:5182   */\n  tag_178\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_80\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_180\n  tag_81\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":5233:5289   */\ntag_179:\n    /* \"#utility.yul\":5313:5351   */\n  tag_181\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_83\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":5398:5465   */\n  tag_182\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_96\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_184\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_185:\n    /* \"#utility.yul\":6339:6406   */\n  tag_186\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_99\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_183)\n    /* \"#utility.yul\":5560:6178   */\ntag_184:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_187\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_84\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_188:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_190\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_188)\ntag_190:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_192\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_98\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_191:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_183:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_100:\n    /* \"#utility.yul\":6516:6540   */\n  tag_194\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_77\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_23:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_196\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_100\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_101:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7069   */\ntag_102:\n    /* \"#utility.yul\":7009:7017   */\n  0x00\n    /* \"#utility.yul\":7056:7061   */\n  dup2\n    /* \"#utility.yul\":7053:7054   */\n  0x01\n    /* \"#utility.yul\":7049:7062   */\n  shr\n    /* \"#utility.yul\":7028:7062   */\n  swap1\n  pop\n    /* \"#utility.yul\":6967:7069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7075:7923   */\ntag_103:\n    /* \"#utility.yul\":7136:7141   */\n  0x00\n    /* \"#utility.yul\":7143:7147   */\n  dup1\n    /* \"#utility.yul\":7167:7173   */\n  dup3\n    /* \"#utility.yul\":7158:7173   */\n  swap2\n  pop\n    /* \"#utility.yul\":7191:7196   */\n  dup4\n    /* \"#utility.yul\":7182:7196   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7917   */\ntag_200:\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7216:7224   */\n  dup6\n    /* \"#utility.yul\":7213:7228   */\n  gt\n    /* \"#utility.yul\":7205:7917   */\n  iszero\n  tag_202\n  jumpi\n    /* \"#utility.yul\":7321:7325   */\n  dup1\n    /* \"#utility.yul\":7316:7319   */\n  dup7\n    /* \"#utility.yul\":7312:7326   */\n  div\n    /* \"#utility.yul\":7306:7310   */\n  dup2\n    /* \"#utility.yul\":7303:7327   */\n  gt\n    /* \"#utility.yul\":7300:7350   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":7330:7348   */\n  tag_204\n  tag_101\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":7300:7350   */\ntag_203:\n    /* \"#utility.yul\":7380:7381   */\n  0x01\n    /* \"#utility.yul\":7370:7378   */\n  dup6\n    /* \"#utility.yul\":7366:7382   */\n  and\n    /* \"#utility.yul\":7363:7814   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":7795:7799   */\n  dup1\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7800   */\n  mul\n    /* \"#utility.yul\":7775:7800   */\n  swap2\n  pop\n    /* \"#utility.yul\":7363:7814   */\ntag_205:\n    /* \"#utility.yul\":7845:7849   */\n  dup1\n    /* \"#utility.yul\":7839:7843   */\n  dup2\n    /* \"#utility.yul\":7835:7850   */\n  mul\n    /* \"#utility.yul\":7827:7850   */\n  swap1\n  pop\n    /* \"#utility.yul\":7875:7907   */\n  tag_206\n    /* \"#utility.yul\":7898:7906   */\n  dup6\n    /* \"#utility.yul\":7875:7907   */\n  tag_102\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":7863:7907   */\n  swap5\n  pop\n    /* \"#utility.yul\":7205:7917   */\n  jump(tag_200)\ntag_202:\n    /* \"#utility.yul\":7075:7923   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9002   */\ntag_104:\n    /* \"#utility.yul\":7983:7988   */\n  0x00\n    /* \"#utility.yul\":8174:8182   */\n  dup3\n    /* \"#utility.yul\":8164:8204   */\n  tag_208\n  jumpi\n    /* \"#utility.yul\":8195:8196   */\n  0x01\n    /* \"#utility.yul\":8186:8196   */\n  swap1\n  pop\n    /* \"#utility.yul\":8197:8202   */\n  jump(tag_207)\n    /* \"#utility.yul\":8164:8204   */\ntag_208:\n    /* \"#utility.yul\":8223:8227   */\n  dup2\n    /* \"#utility.yul\":8213:8249   */\n  tag_209\n  jumpi\n    /* \"#utility.yul\":8240:8241   */\n  0x00\n    /* \"#utility.yul\":8231:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8242:8247   */\n  jump(tag_207)\n    /* \"#utility.yul\":8213:8249   */\ntag_209:\n    /* \"#utility.yul\":8309:8313   */\n  dup2\n    /* \"#utility.yul\":8357:8358   */\n  0x01\n    /* \"#utility.yul\":8352:8379   */\n  dup2\n  eq\n  tag_211\n  jumpi\n    /* \"#utility.yul\":8393:8394   */\n  0x02\n    /* \"#utility.yul\":8388:8579   */\n  dup2\n  eq\n  tag_212\n  jumpi\n    /* \"#utility.yul\":8302:8579   */\n  jump(tag_210)\n    /* \"#utility.yul\":8352:8379   */\ntag_211:\n    /* \"#utility.yul\":8370:8371   */\n  0x01\n    /* \"#utility.yul\":8361:8371   */\n  swap2\n  pop\n    /* \"#utility.yul\":8372:8377   */\n  pop\n  jump(tag_207)\n    /* \"#utility.yul\":8388:8579   */\ntag_212:\n    /* \"#utility.yul\":8433:8436   */\n  0xff\n    /* \"#utility.yul\":8423:8431   */\n  dup5\n    /* \"#utility.yul\":8420:8437   */\n  gt\n    /* \"#utility.yul\":8417:8460   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":8440:8458   */\n  tag_214\n  tag_101\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":8417:8460   */\ntag_213:\n    /* \"#utility.yul\":8489:8497   */\n  dup4\n    /* \"#utility.yul\":8486:8487   */\n  0x02\n    /* \"#utility.yul\":8482:8498   */\n  exp\n    /* \"#utility.yul\":8473:8498   */\n  swap2\n  pop\n    /* \"#utility.yul\":8524:8527   */\n  dup5\n    /* \"#utility.yul\":8517:8522   */\n  dup3\n    /* \"#utility.yul\":8514:8528   */\n  gt\n    /* \"#utility.yul\":8511:8551   */\n  iszero\n  tag_215\n  jumpi\n    /* \"#utility.yul\":8531:8549   */\n  tag_216\n  tag_101\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":8511:8551   */\ntag_215:\n    /* \"#utility.yul\":8564:8569   */\n  pop\n  jump(tag_207)\n    /* \"#utility.yul\":8302:8579   */\ntag_210:\n  pop\n    /* \"#utility.yul\":8688:8690   */\n  0x20\n    /* \"#utility.yul\":8678:8686   */\n  dup4\n    /* \"#utility.yul\":8675:8691   */\n  lt\n    /* \"#utility.yul\":8669:8672   */\n  0x0133\n    /* \"#utility.yul\":8663:8667   */\n  dup4\n    /* \"#utility.yul\":8660:8673   */\n  lt\n    /* \"#utility.yul\":8656:8692   */\n  and\n    /* \"#utility.yul\":8638:8640   */\n  0x4e\n    /* \"#utility.yul\":8628:8636   */\n  dup5\n    /* \"#utility.yul\":8625:8641   */\n  lt\n    /* \"#utility.yul\":8620:8622   */\n  0x0b\n    /* \"#utility.yul\":8614:8618   */\n  dup5\n    /* \"#utility.yul\":8611:8623   */\n  lt\n    /* \"#utility.yul\":8607:8642   */\n  and\n    /* \"#utility.yul\":8591:8702   */\n  or\n    /* \"#utility.yul\":8588:8834   */\n  iszero\n  tag_217\n  jumpi\n    /* \"#utility.yul\":8744:8752   */\n  dup3\n    /* \"#utility.yul\":8738:8742   */\n  dup3\n    /* \"#utility.yul\":8734:8753   */\n  exp\n    /* \"#utility.yul\":8725:8753   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8782   */\n  dup4\n    /* \"#utility.yul\":8772:8777   */\n  dup2\n    /* \"#utility.yul\":8769:8783   */\n  gt\n    /* \"#utility.yul\":8766:8806   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":8786:8804   */\n  tag_219\n  tag_101\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":8766:8806   */\ntag_218:\n    /* \"#utility.yul\":8819:8824   */\n  jump(tag_207)\n    /* \"#utility.yul\":8588:8834   */\ntag_217:\n    /* \"#utility.yul\":8859:8901   */\n  tag_220\n    /* \"#utility.yul\":8897:8900   */\n  dup5\n    /* \"#utility.yul\":8887:8895   */\n  dup5\n    /* \"#utility.yul\":8881:8885   */\n  dup5\n    /* \"#utility.yul\":8878:8879   */\n  0x01\n    /* \"#utility.yul\":8859:8901   */\n  tag_103\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":8844:8901   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8928:8931   */\n  dup5\n    /* \"#utility.yul\":8924:8938   */\n  div\n    /* \"#utility.yul\":8917:8922   */\n  dup2\n    /* \"#utility.yul\":8914:8939   */\n  gt\n    /* \"#utility.yul\":8911:8962   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_222\n  tag_101\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":8911:8962   */\ntag_221:\n    /* \"#utility.yul\":8991:8995   */\n  dup2\n    /* \"#utility.yul\":8984:8989   */\n  dup2\n    /* \"#utility.yul\":8980:8996   */\n  mul\n    /* \"#utility.yul\":8971:8996   */\n  swap1\n  pop\n    /* \"#utility.yul\":7929:9002   */\ntag_207:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9008:9094   */\ntag_105:\n    /* \"#utility.yul\":9043:9050   */\n  0x00\n    /* \"#utility.yul\":9083:9087   */\n  0xff\n    /* \"#utility.yul\":9076:9081   */\n  dup3\n    /* \"#utility.yul\":9072:9088   */\n  and\n    /* \"#utility.yul\":9061:9088   */\n  swap1\n  pop\n    /* \"#utility.yul\":9008:9094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9100:9381   */\ntag_31:\n    /* \"#utility.yul\":9158:9163   */\n  0x00\n    /* \"#utility.yul\":9182:9205   */\n  tag_225\n    /* \"#utility.yul\":9200:9204   */\n  dup3\n    /* \"#utility.yul\":9182:9205   */\n  tag_88\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":9174:9205   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9251   */\n  tag_226\n    /* \"#utility.yul\":9242:9250   */\n  dup4\n    /* \"#utility.yul\":9226:9251   */\n  tag_105\n  jump\t// in\ntag_226:\n    /* \"#utility.yul\":9214:9251   */\n  swap3\n  pop\n    /* \"#utility.yul\":9270:9374   */\n  tag_227\n    /* \"#utility.yul\":9307:9373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9297:9305   */\n  dup5\n    /* \"#utility.yul\":9291:9295   */\n  dup5\n    /* \"#utility.yul\":9270:9374   */\n  tag_104\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":9261:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9100:9381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9387:9797   */\ntag_33:\n    /* \"#utility.yul\":9427:9434   */\n  0x00\n    /* \"#utility.yul\":9450:9470   */\n  tag_229\n    /* \"#utility.yul\":9468:9469   */\n  dup3\n    /* \"#utility.yul\":9450:9470   */\n  tag_88\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":9445:9470   */\n  swap2\n  pop\n    /* \"#utility.yul\":9484:9504   */\n  tag_230\n    /* \"#utility.yul\":9502:9503   */\n  dup4\n    /* \"#utility.yul\":9484:9504   */\n  tag_88\n  jump\t// in\ntag_230:\n    /* \"#utility.yul\":9479:9504   */\n  swap3\n  pop\n    /* \"#utility.yul\":9539:9540   */\n  dup3\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9532:9541   */\n  mul\n    /* \"#utility.yul\":9561:9591   */\n  tag_231\n    /* \"#utility.yul\":9579:9590   */\n  dup2\n    /* \"#utility.yul\":9561:9591   */\n  tag_88\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":9550:9591   */\n  swap2\n  pop\n    /* \"#utility.yul\":9740:9741   */\n  dup3\n    /* \"#utility.yul\":9731:9738   */\n  dup3\n    /* \"#utility.yul\":9727:9742   */\n  div\n    /* \"#utility.yul\":9724:9725   */\n  dup5\n    /* \"#utility.yul\":9721:9743   */\n  eq\n    /* \"#utility.yul\":9701:9702   */\n  dup4\n    /* \"#utility.yul\":9694:9703   */\n  iszero\n    /* \"#utility.yul\":9674:9757   */\n  or\n    /* \"#utility.yul\":9651:9790   */\n  tag_232\n  jumpi\n    /* \"#utility.yul\":9770:9788   */\n  tag_233\n  tag_101\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":9651:9790   */\ntag_232:\n    /* \"#utility.yul\":9435:9797   */\n  pop\n    /* \"#utility.yul\":9387:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9880   */\ntag_106:\n    /* \"#utility.yul\":9840:9847   */\n  0x00\n    /* \"#utility.yul\":9869:9874   */\n  dup2\n    /* \"#utility.yul\":9858:9874   */\n  swap1\n  pop\n    /* \"#utility.yul\":9803:9880   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9886:10004   */\ntag_107:\n    /* \"#utility.yul\":9973:9997   */\n  tag_236\n    /* \"#utility.yul\":9991:9996   */\n  dup2\n    /* \"#utility.yul\":9973:9997   */\n  tag_106\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":9968:9971   */\n  dup3\n    /* \"#utility.yul\":9961:9998   */\n  mstore\n    /* \"#utility.yul\":9886:10004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10010:10128   */\ntag_108:\n    /* \"#utility.yul\":10097:10121   */\n  tag_238\n    /* \"#utility.yul\":10115:10120   */\n  dup2\n    /* \"#utility.yul\":10097:10121   */\n  tag_88\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":10092:10095   */\n  dup3\n    /* \"#utility.yul\":10085:10122   */\n  mstore\n    /* \"#utility.yul\":10010:10128   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10134:10798   */\ntag_46:\n    /* \"#utility.yul\":10339:10343   */\n  0x00\n    /* \"#utility.yul\":10377:10380   */\n  0xa0\n    /* \"#utility.yul\":10366:10375   */\n  dup3\n    /* \"#utility.yul\":10362:10381   */\n  add\n    /* \"#utility.yul\":10354:10381   */\n  swap1\n  pop\n    /* \"#utility.yul\":10391:10462   */\n  tag_240\n    /* \"#utility.yul\":10459:10460   */\n  0x00\n    /* \"#utility.yul\":10448:10457   */\n  dup4\n    /* \"#utility.yul\":10444:10461   */\n  add\n    /* \"#utility.yul\":10435:10441   */\n  dup9\n    /* \"#utility.yul\":10391:10462   */\n  tag_107\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":10472:10544   */\n  tag_241\n    /* \"#utility.yul\":10540:10542   */\n  0x20\n    /* \"#utility.yul\":10529:10538   */\n  dup4\n    /* \"#utility.yul\":10525:10543   */\n  add\n    /* \"#utility.yul\":10516:10522   */\n  dup8\n    /* \"#utility.yul\":10472:10544   */\n  tag_107\n  jump\t// in\ntag_241:\n    /* \"#utility.yul\":10554:10626   */\n  tag_242\n    /* \"#utility.yul\":10622:10624   */\n  0x40\n    /* \"#utility.yul\":10611:10620   */\n  dup4\n    /* \"#utility.yul\":10607:10625   */\n  add\n    /* \"#utility.yul\":10598:10604   */\n  dup7\n    /* \"#utility.yul\":10554:10626   */\n  tag_107\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":10636:10708   */\n  tag_243\n    /* \"#utility.yul\":10704:10706   */\n  0x60\n    /* \"#utility.yul\":10693:10702   */\n  dup4\n    /* \"#utility.yul\":10689:10707   */\n  add\n    /* \"#utility.yul\":10680:10686   */\n  dup6\n    /* \"#utility.yul\":10636:10708   */\n  tag_108\n  jump\t// in\ntag_243:\n    /* \"#utility.yul\":10718:10791   */\n  tag_244\n    /* \"#utility.yul\":10786:10789   */\n  0x80\n    /* \"#utility.yul\":10775:10784   */\n  dup4\n    /* \"#utility.yul\":10771:10790   */\n  add\n    /* \"#utility.yul\":10762:10768   */\n  dup5\n    /* \"#utility.yul\":10718:10791   */\n  tag_100\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":10134:10798   */\n  swap7\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10804:10973   */\ntag_109:\n    /* \"#utility.yul\":10888:10899   */\n  0x00\n    /* \"#utility.yul\":10922:10928   */\n  dup3\n    /* \"#utility.yul\":10917:10920   */\n  dup3\n    /* \"#utility.yul\":10910:10929   */\n  mstore\n    /* \"#utility.yul\":10962:10966   */\n  0x20\n    /* \"#utility.yul\":10957:10960   */\n  dup3\n    /* \"#utility.yul\":10953:10967   */\n  add\n    /* \"#utility.yul\":10938:10967   */\n  swap1\n  pop\n    /* \"#utility.yul\":10804:10973   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10979:11225   */\ntag_110:\n    /* \"#utility.yul\":11060:11061   */\n  0x00\n    /* \"#utility.yul\":11070:11183   */\ntag_247:\n    /* \"#utility.yul\":11084:11090   */\n  dup4\n    /* \"#utility.yul\":11081:11082   */\n  dup2\n    /* \"#utility.yul\":11078:11091   */\n  lt\n    /* \"#utility.yul\":11070:11183   */\n  iszero\n  tag_249\n  jumpi\n    /* \"#utility.yul\":11169:11170   */\n  dup1\n    /* \"#utility.yul\":11164:11167   */\n  dup3\n    /* \"#utility.yul\":11160:11171   */\n  add\n    /* \"#utility.yul\":11154:11172   */\n  mload\n    /* \"#utility.yul\":11150:11151   */\n  dup2\n    /* \"#utility.yul\":11145:11148   */\n  dup5\n    /* \"#utility.yul\":11141:11152   */\n  add\n    /* \"#utility.yul\":11134:11173   */\n  mstore\n    /* \"#utility.yul\":11106:11108   */\n  0x20\n    /* \"#utility.yul\":11103:11104   */\n  dup2\n    /* \"#utility.yul\":11099:11109   */\n  add\n    /* \"#utility.yul\":11094:11109   */\n  swap1\n  pop\n    /* \"#utility.yul\":11070:11183   */\n  jump(tag_247)\ntag_249:\n    /* \"#utility.yul\":11217:11218   */\n  0x00\n    /* \"#utility.yul\":11208:11214   */\n  dup5\n    /* \"#utility.yul\":11203:11206   */\n  dup5\n    /* \"#utility.yul\":11199:11215   */\n  add\n    /* \"#utility.yul\":11192:11219   */\n  mstore\n    /* \"#utility.yul\":11041:11225   */\n  pop\n    /* \"#utility.yul\":10979:11225   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11231:11333   */\ntag_111:\n    /* \"#utility.yul\":11272:11278   */\n  0x00\n    /* \"#utility.yul\":11323:11325   */\n  0x1f\n    /* \"#utility.yul\":11319:11326   */\n  not\n    /* \"#utility.yul\":11314:11316   */\n  0x1f\n    /* \"#utility.yul\":11307:11312   */\n  dup4\n    /* \"#utility.yul\":11303:11317   */\n  add\n    /* \"#utility.yul\":11299:11327   */\n  and\n    /* \"#utility.yul\":11289:11327   */\n  swap1\n  pop\n    /* \"#utility.yul\":11231:11333   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11339:11716   */\ntag_112:\n    /* \"#utility.yul\":11427:11430   */\n  0x00\n    /* \"#utility.yul\":11455:11494   */\n  tag_252\n    /* \"#utility.yul\":11488:11493   */\n  dup3\n    /* \"#utility.yul\":11455:11494   */\n  tag_80\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":11510:11581   */\n  tag_253\n    /* \"#utility.yul\":11574:11580   */\n  dup2\n    /* \"#utility.yul\":11569:11572   */\n  dup6\n    /* \"#utility.yul\":11510:11581   */\n  tag_109\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":11503:11581   */\n  swap4\n  pop\n    /* \"#utility.yul\":11590:11655   */\n  tag_254\n    /* \"#utility.yul\":11648:11654   */\n  dup2\n    /* \"#utility.yul\":11643:11646   */\n  dup6\n    /* \"#utility.yul\":11636:11640   */\n  0x20\n    /* \"#utility.yul\":11629:11634   */\n  dup7\n    /* \"#utility.yul\":11625:11641   */\n  add\n    /* \"#utility.yul\":11590:11655   */\n  tag_110\n  jump\t// in\ntag_254:\n    /* \"#utility.yul\":11680:11709   */\n  tag_255\n    /* \"#utility.yul\":11702:11708   */\n  dup2\n    /* \"#utility.yul\":11680:11709   */\n  tag_111\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":11675:11678   */\n  dup5\n    /* \"#utility.yul\":11671:11710   */\n  add\n    /* \"#utility.yul\":11664:11710   */\n  swap2\n  pop\n    /* \"#utility.yul\":11431:11716   */\n  pop\n    /* \"#utility.yul\":11339:11716   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11722:12035   */\ntag_57:\n    /* \"#utility.yul\":11835:11839   */\n  0x00\n    /* \"#utility.yul\":11873:11875   */\n  0x20\n    /* \"#utility.yul\":11862:11871   */\n  dup3\n    /* \"#utility.yul\":11858:11876   */\n  add\n    /* \"#utility.yul\":11850:11876   */\n  swap1\n  pop\n    /* \"#utility.yul\":11922:11931   */\n  dup2\n    /* \"#utility.yul\":11916:11920   */\n  dup2\n    /* \"#utility.yul\":11912:11932   */\n  sub\n    /* \"#utility.yul\":11908:11909   */\n  0x00\n    /* \"#utility.yul\":11897:11906   */\n  dup4\n    /* \"#utility.yul\":11893:11910   */\n  add\n    /* \"#utility.yul\":11886:11933   */\n  mstore\n    /* \"#utility.yul\":11950:12028   */\n  tag_257\n    /* \"#utility.yul\":12023:12027   */\n  dup2\n    /* \"#utility.yul\":12014:12020   */\n  dup5\n    /* \"#utility.yul\":11950:12028   */\n  tag_112\n  jump\t// in\ntag_257:\n    /* \"#utility.yul\":11942:12028   */\n  swap1\n  pop\n    /* \"#utility.yul\":11722:12035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12041:12139   */\ntag_113:\n    /* \"#utility.yul\":12092:12098   */\n  0x00\n    /* \"#utility.yul\":12126:12131   */\n  dup2\n    /* \"#utility.yul\":12120:12132   */\n  mload\n    /* \"#utility.yul\":12110:12132   */\n  swap1\n  pop\n    /* \"#utility.yul\":12041:12139   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12145:12261   */\ntag_114:\n    /* \"#utility.yul\":12196:12200   */\n  0x00\n    /* \"#utility.yul\":12219:12222   */\n  dup2\n    /* \"#utility.yul\":12211:12222   */\n  swap1\n  pop\n    /* \"#utility.yul\":12249:12253   */\n  0x20\n    /* \"#utility.yul\":12244:12247   */\n  dup3\n    /* \"#utility.yul\":12240:12254   */\n  add\n    /* \"#utility.yul\":12232:12254   */\n  swap1\n  pop\n    /* \"#utility.yul\":12145:12261   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12267:12421   */\ntag_115:\n    /* \"#utility.yul\":12310:12321   */\n  0x00\n    /* \"#utility.yul\":12346:12375   */\n  tag_261\n    /* \"#utility.yul\":12370:12373   */\n  dup3\n    /* \"#utility.yul\":12364:12374   */\n  mload\n    /* \"#utility.yul\":12346:12375   */\n  tag_106\n  jump\t// in\ntag_261:\n    /* \"#utility.yul\":12409:12414   */\n  dup1\n    /* \"#utility.yul\":12385:12414   */\n  swap2\n  pop\n    /* \"#utility.yul\":12322:12421   */\n  pop\n    /* \"#utility.yul\":12267:12421   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12427:13021   */\ntag_59:\n    /* \"#utility.yul\":12511:12516   */\n  0x00\n    /* \"#utility.yul\":12542:12580   */\n  tag_263\n    /* \"#utility.yul\":12574:12579   */\n  dup3\n    /* \"#utility.yul\":12542:12580   */\n  tag_113\n  jump\t// in\ntag_263:\n    /* \"#utility.yul\":12605:12610   */\n  dup3\n    /* \"#utility.yul\":12632:12672   */\n  tag_264\n    /* \"#utility.yul\":12666:12671   */\n  dup5\n    /* \"#utility.yul\":12632:12672   */\n  tag_114\n  jump\t// in\ntag_264:\n    /* \"#utility.yul\":12620:12672   */\n  swap1\n  pop\n    /* \"#utility.yul\":12691:12726   */\n  tag_265\n    /* \"#utility.yul\":12717:12725   */\n  dup2\n    /* \"#utility.yul\":12691:12726   */\n  tag_115\n  jump\t// in\ntag_265:\n    /* \"#utility.yul\":12682:12726   */\n  swap3\n  pop\n    /* \"#utility.yul\":12750:12752   */\n  0x20\n    /* \"#utility.yul\":12742:12748   */\n  dup3\n    /* \"#utility.yul\":12739:12753   */\n  lt\n    /* \"#utility.yul\":12736:13014   */\n  iszero\n  tag_266\n  jumpi\n    /* \"#utility.yul\":12821:12990   */\n  tag_267\n    /* \"#utility.yul\":12906:12972   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12876:12882   */\n  dup4\n    /* \"#utility.yul\":12872:12874   */\n  0x20\n    /* \"#utility.yul\":12868:12883   */\n  sub\n    /* \"#utility.yul\":12865:12866   */\n  0x08\n    /* \"#utility.yul\":12861:12884   */\n  mul\n    /* \"#utility.yul\":12821:12990   */\n  tag_86\n  jump\t// in\ntag_267:\n    /* \"#utility.yul\":12798:12803   */\n  dup4\n    /* \"#utility.yul\":12777:13004   */\n  and\n    /* \"#utility.yul\":12768:13004   */\n  swap3\n  pop\n    /* \"#utility.yul\":12736:13014   */\ntag_266:\n    /* \"#utility.yul\":12517:13021   */\n  pop\n  pop\n    /* \"#utility.yul\":12427:13021   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13027:13218   */\ntag_64:\n    /* \"#utility.yul\":13067:13070   */\n  0x00\n    /* \"#utility.yul\":13086:13106   */\n  tag_269\n    /* \"#utility.yul\":13104:13105   */\n  dup3\n    /* \"#utility.yul\":13086:13106   */\n  tag_88\n  jump\t// in\ntag_269:\n    /* \"#utility.yul\":13081:13106   */\n  swap2\n  pop\n    /* \"#utility.yul\":13120:13140   */\n  tag_270\n    /* \"#utility.yul\":13138:13139   */\n  dup4\n    /* \"#utility.yul\":13120:13140   */\n  tag_88\n  jump\t// in\ntag_270:\n    /* \"#utility.yul\":13115:13140   */\n  swap3\n  pop\n    /* \"#utility.yul\":13163:13164   */\n  dup3\n    /* \"#utility.yul\":13160:13161   */\n  dup3\n    /* \"#utility.yul\":13156:13165   */\n  add\n    /* \"#utility.yul\":13149:13165   */\n  swap1\n  pop\n    /* \"#utility.yul\":13184:13187   */\n  dup1\n    /* \"#utility.yul\":13181:13182   */\n  dup3\n    /* \"#utility.yul\":13178:13188   */\n  gt\n    /* \"#utility.yul\":13175:13211   */\n  iszero\n  tag_271\n  jumpi\n    /* \"#utility.yul\":13191:13209   */\n  tag_272\n  tag_101\n  jump\t// in\ntag_272:\n    /* \"#utility.yul\":13175:13211   */\ntag_271:\n    /* \"#utility.yul\":13027:13218   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13224:13666   */\ntag_68:\n    /* \"#utility.yul\":13373:13377   */\n  0x00\n    /* \"#utility.yul\":13411:13413   */\n  0x60\n    /* \"#utility.yul\":13400:13409   */\n  dup3\n    /* \"#utility.yul\":13396:13414   */\n  add\n    /* \"#utility.yul\":13388:13414   */\n  swap1\n  pop\n    /* \"#utility.yul\":13424:13495   */\n  tag_274\n    /* \"#utility.yul\":13492:13493   */\n  0x00\n    /* \"#utility.yul\":13481:13490   */\n  dup4\n    /* \"#utility.yul\":13477:13494   */\n  add\n    /* \"#utility.yul\":13468:13474   */\n  dup7\n    /* \"#utility.yul\":13424:13495   */\n  tag_100\n  jump\t// in\ntag_274:\n    /* \"#utility.yul\":13505:13577   */\n  tag_275\n    /* \"#utility.yul\":13573:13575   */\n  0x20\n    /* \"#utility.yul\":13562:13571   */\n  dup4\n    /* \"#utility.yul\":13558:13576   */\n  add\n    /* \"#utility.yul\":13549:13555   */\n  dup6\n    /* \"#utility.yul\":13505:13577   */\n  tag_108\n  jump\t// in\ntag_275:\n    /* \"#utility.yul\":13587:13659   */\n  tag_276\n    /* \"#utility.yul\":13655:13657   */\n  0x40\n    /* \"#utility.yul\":13644:13653   */\n  dup4\n    /* \"#utility.yul\":13640:13658   */\n  add\n    /* \"#utility.yul\":13631:13637   */\n  dup5\n    /* \"#utility.yul\":13587:13659   */\n  tag_108\n  jump\t// in\ntag_276:\n    /* \"#utility.yul\":13224:13666   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13672:13894   */\ntag_72:\n    /* \"#utility.yul\":13765:13769   */\n  0x00\n    /* \"#utility.yul\":13803:13805   */\n  0x20\n    /* \"#utility.yul\":13792:13801   */\n  dup3\n    /* \"#utility.yul\":13788:13806   */\n  add\n    /* \"#utility.yul\":13780:13806   */\n  swap1\n  pop\n    /* \"#utility.yul\":13816:13887   */\n  tag_278\n    /* \"#utility.yul\":13884:13885   */\n  0x00\n    /* \"#utility.yul\":13873:13882   */\n  dup4\n    /* \"#utility.yul\":13869:13886   */\n  add\n    /* \"#utility.yul\":13860:13866   */\n  dup5\n    /* \"#utility.yul\":13816:13887   */\n  tag_108\n  jump\t// in\ntag_278:\n    /* \"#utility.yul\":13672:13894   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contract-4b98807483_flattened.sol\":79652:79908  contract Pigment is ERC20, ERC20Permit, Ownable {... */\ntag_35:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x2afe76337b531113eeb6984869209602297c0be432194d84882749ead3021a37\")\n  0x00\n  assignImmutable(\"0xa7cd0fec000bc9bc829eee3f19124c6d92f9bf03bc5604d586b7a9d0b7293aeb\")\n  0x00\n  assignImmutable(\"0x5444bf99e2aaa84d0c0adba4902ca441e981a14d987060ddd53a6e4272e74bca\")\n  0x00\n  assignImmutable(\"0xf9ba965def30954c13b9f17655d4bfcf079e819f9cc42b75928cd97e2c9f9020\")\n  0x00\n  assignImmutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n  0x00\n  assignImmutable(\"0x89dda32db2afb3470ad3a855ff08175ef365ece0147067a2a9b89c9351412201\")\n  0x00\n  assignImmutable(\"0x3f9e555adc0bedaea160f26d13d68ea1bde6a5a9af64af415bccce823c8f9ad8\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contract-4b98807483_flattened.sol\":79652:79908  contract Pigment is ERC20, ERC20Permit, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ecebe00\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x84b0196e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3644e515\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":67953:68042  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":70172:70358  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":69023:69120  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":70918:71162  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":68881:68963  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":79472:79584  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":69178:69294  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":61742:61843  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contract-4b98807483_flattened.sol\":79222:79365  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":38813:39370  function eip712Domain()... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":61087:61172  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":68155:68248  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":69489:69667  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":78496:79168  function permit(... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contract-4b98807483_flattened.sol\":69725:69865  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contract-4b98807483_flattened.sol\":61992:62207  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contract-4b98807483_flattened.sol\":67953:68042  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"contract-4b98807483_flattened.sol\":67998:68011  string memory */\n      0x60\n        /* \"contract-4b98807483_flattened.sol\":68030:68035  _name */\n      0x03\n        /* \"contract-4b98807483_flattened.sol\":68023:68035  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":67953:68042  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":70172:70358  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"contract-4b98807483_flattened.sol\":70245:70249  bool */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":70261:70274  address owner */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":70277:70289  _msgSender() */\n      tag_95\n        /* \"contract-4b98807483_flattened.sol\":70277:70287  _msgSender */\n      tag_96\n        /* \"contract-4b98807483_flattened.sol\":70277:70289  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"contract-4b98807483_flattened.sol\":70261:70289  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":70299:70330  _approve(owner, spender, value) */\n      tag_97\n        /* \"contract-4b98807483_flattened.sol\":70308:70313  owner */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":70315:70322  spender */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":70324:70329  value */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":70299:70307  _approve */\n      tag_98\n        /* \"contract-4b98807483_flattened.sol\":70299:70330  _approve(owner, spender, value) */\n      jump\t// in\n    tag_97:\n        /* \"contract-4b98807483_flattened.sol\":70347:70351  true */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":70340:70351  return true */\n      swap2\n      pop\n      pop\n        /* \"contract-4b98807483_flattened.sol\":70172:70358  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":69023:69120  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"contract-4b98807483_flattened.sol\":69075:69082  uint256 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":69101:69113  _totalSupply */\n      sload(0x02)\n        /* \"contract-4b98807483_flattened.sol\":69094:69113  return _totalSupply */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":69023:69120  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":70918:71162  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"contract-4b98807483_flattened.sol\":71005:71009  bool */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":71021:71036  address spender */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":71039:71051  _msgSender() */\n      tag_101\n        /* \"contract-4b98807483_flattened.sol\":71039:71049  _msgSender */\n      tag_96\n        /* \"contract-4b98807483_flattened.sol\":71039:71051  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"contract-4b98807483_flattened.sol\":71021:71051  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":71061:71098  _spendAllowance(from, spender, value) */\n      tag_102\n        /* \"contract-4b98807483_flattened.sol\":71077:71081  from */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":71083:71090  spender */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":71092:71097  value */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":71061:71076  _spendAllowance */\n      tag_103\n        /* \"contract-4b98807483_flattened.sol\":71061:71098  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_102:\n        /* \"contract-4b98807483_flattened.sol\":71108:71134  _transfer(from, to, value) */\n      tag_104\n        /* \"contract-4b98807483_flattened.sol\":71118:71122  from */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":71124:71126  to */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":71128:71133  value */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":71108:71117  _transfer */\n      tag_105\n        /* \"contract-4b98807483_flattened.sol\":71108:71134  _transfer(from, to, value) */\n      jump\t// in\n    tag_104:\n        /* \"contract-4b98807483_flattened.sol\":71151:71155  true */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":71144:71155  return true */\n      swap2\n      pop\n      pop\n        /* \"contract-4b98807483_flattened.sol\":70918:71162  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":68881:68963  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"contract-4b98807483_flattened.sol\":68930:68935  uint8 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":68954:68956  18 */\n      0x12\n        /* \"contract-4b98807483_flattened.sol\":68947:68956  return 18 */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":68881:68963  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":79472:79584  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n    tag_46:\n        /* \"contract-4b98807483_flattened.sol\":79531:79538  bytes32 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":79557:79577  _domainSeparatorV4() */\n      tag_108\n        /* \"contract-4b98807483_flattened.sol\":79557:79575  _domainSeparatorV4 */\n      tag_109\n        /* \"contract-4b98807483_flattened.sol\":79557:79577  _domainSeparatorV4() */\n      jump\t// in\n    tag_108:\n        /* \"contract-4b98807483_flattened.sol\":79550:79577  return _domainSeparatorV4() */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":79472:79584  function DOMAIN_SEPARATOR() external view virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":69178:69294  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"contract-4b98807483_flattened.sol\":69243:69250  uint256 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":69269:69278  _balances */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":69269:69287  _balances[account] */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":69279:69286  account */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":69269:69287  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract-4b98807483_flattened.sol\":69262:69287  return _balances[account] */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":69178:69294  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":61742:61843  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"contract-4b98807483_flattened.sol\":60980:60993  _checkOwner() */\n      tag_112\n        /* \"contract-4b98807483_flattened.sol\":60980:60991  _checkOwner */\n      tag_113\n        /* \"contract-4b98807483_flattened.sol\":60980:60993  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"contract-4b98807483_flattened.sol\":61806:61836  _transferOwnership(address(0)) */\n      tag_115\n        /* \"contract-4b98807483_flattened.sol\":61833:61834  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":61806:61824  _transferOwnership */\n      tag_116\n        /* \"contract-4b98807483_flattened.sol\":61806:61836  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_115:\n        /* \"contract-4b98807483_flattened.sol\":61742:61843  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":79222:79365  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n    tag_58:\n        /* \"contract-4b98807483_flattened.sol\":79313:79320  uint256 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":79339:79358  super.nonces(owner) */\n      tag_118\n        /* \"contract-4b98807483_flattened.sol\":79352:79357  owner */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":79339:79351  super.nonces */\n      tag_119\n        /* \"contract-4b98807483_flattened.sol\":79339:79358  super.nonces(owner) */\n      jump\t// in\n    tag_118:\n        /* \"contract-4b98807483_flattened.sol\":79332:79358  return super.nonces(owner) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":79222:79365  function nonces(address owner) public view virtual override(IERC20Permit, Nonces) returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":38813:39370  function eip712Domain()... */\n    tag_61:\n        /* \"contract-4b98807483_flattened.sol\":38911:38924  bytes1 fields */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":38938:38956  string memory name */\n      0x60\n        /* \"contract-4b98807483_flattened.sol\":38970:38991  string memory version */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":39005:39020  uint256 chainId */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":39034:39059  address verifyingContract */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":39073:39085  bytes32 salt */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":39099:39126  uint256[] memory extensions */\n      0x60\n        /* \"contract-4b98807483_flattened.sol\":39202:39215  _EIP712Name() */\n      tag_121\n        /* \"contract-4b98807483_flattened.sol\":39202:39213  _EIP712Name */\n      tag_122\n        /* \"contract-4b98807483_flattened.sol\":39202:39215  _EIP712Name() */\n      jump\t// in\n    tag_121:\n        /* \"contract-4b98807483_flattened.sol\":39229:39245  _EIP712Version() */\n      tag_123\n        /* \"contract-4b98807483_flattened.sol\":39229:39243  _EIP712Version */\n      tag_124\n        /* \"contract-4b98807483_flattened.sol\":39229:39245  _EIP712Version() */\n      jump\t// in\n    tag_123:\n        /* \"contract-4b98807483_flattened.sol\":39259:39272  block.chainid */\n      chainid\n        /* \"contract-4b98807483_flattened.sol\":39294:39298  this */\n      address\n        /* \"contract-4b98807483_flattened.sol\":39321:39322  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":39313:39323  bytes32(0) */\n      dup1\n      shl\n        /* \"contract-4b98807483_flattened.sol\":39351:39352  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":39337:39353  new uint256[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_125\n      jumpi\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n    tag_125:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_128:\n      pop\n        /* \"contract-4b98807483_flattened.sol\":39151:39363  return (... */\n      0x0f00000000000000000000000000000000000000000000000000000000000000\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"contract-4b98807483_flattened.sol\":38813:39370  function eip712Domain()... */\n      swap1\n      swap2\n      swap3\n      swap4\n      swap5\n      swap6\n      swap7\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":61087:61172  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"contract-4b98807483_flattened.sol\":61133:61140  address */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":61159:61165  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":61152:61165  return _owner */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":61087:61172  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":68155:68248  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"contract-4b98807483_flattened.sol\":68202:68215  string memory */\n      0x60\n        /* \"contract-4b98807483_flattened.sol\":68234:68241  _symbol */\n      0x04\n        /* \"contract-4b98807483_flattened.sol\":68227:68241  return _symbol */\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_89\n      jump\t// in\n    tag_131:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_132\n      swap1\n      tag_89\n      jump\t// in\n    tag_132:\n      dup1\n      iszero\n      tag_133\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_134\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_133)\n    tag_134:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_135:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_135\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":68155:68248  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":69489:69667  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_73:\n        /* \"contract-4b98807483_flattened.sol\":69558:69562  bool */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":69574:69587  address owner */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":69590:69602  _msgSender() */\n      tag_137\n        /* \"contract-4b98807483_flattened.sol\":69590:69600  _msgSender */\n      tag_96\n        /* \"contract-4b98807483_flattened.sol\":69590:69602  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"contract-4b98807483_flattened.sol\":69574:69602  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":69612:69639  _transfer(owner, to, value) */\n      tag_138\n        /* \"contract-4b98807483_flattened.sol\":69622:69627  owner */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":69629:69631  to */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":69633:69638  value */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":69612:69621  _transfer */\n      tag_105\n        /* \"contract-4b98807483_flattened.sol\":69612:69639  _transfer(owner, to, value) */\n      jump\t// in\n    tag_138:\n        /* \"contract-4b98807483_flattened.sol\":69656:69660  true */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":69649:69660  return true */\n      swap2\n      pop\n      pop\n        /* \"contract-4b98807483_flattened.sol\":69489:69667  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":78496:79168  function permit(... */\n    tag_78:\n        /* \"contract-4b98807483_flattened.sol\":78717:78725  deadline */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":78699:78714  block.timestamp */\n      timestamp\n        /* \"contract-4b98807483_flattened.sol\":78699:78725  block.timestamp > deadline */\n      gt\n        /* \"contract-4b98807483_flattened.sol\":78695:78792  if (block.timestamp > deadline) {... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":78772:78780  deadline */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":78748:78781  ERC2612ExpiredSignature(deadline) */\n      mload(0x40)\n      0x6279130200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":78695:78792  if (block.timestamp > deadline) {... */\n    tag_140:\n        /* \"contract-4b98807483_flattened.sol\":78802:78820  bytes32 structHash */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":77838:77933  keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\") */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contract-4b98807483_flattened.sol\":78861:78866  owner */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":78868:78875  spender */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":78877:78882  value */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":78884:78900  _useNonce(owner) */\n      tag_142\n        /* \"contract-4b98807483_flattened.sol\":78894:78899  owner */\n      dup13\n        /* \"contract-4b98807483_flattened.sol\":78884:78893  _useNonce */\n      tag_143\n        /* \"contract-4b98807483_flattened.sol\":78884:78900  _useNonce(owner) */\n      jump\t// in\n    tag_142:\n        /* \"contract-4b98807483_flattened.sol\":78902:78910  deadline */\n      dup10\n        /* \"contract-4b98807483_flattened.sol\":78833:78911  abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline) */\n      add(0x20, mload(0x40))\n      tag_144\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contract-4b98807483_flattened.sol\":78823:78912  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contract-4b98807483_flattened.sol\":78802:78912  bytes32 structHash = keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline)) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":78923:78935  bytes32 hash */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":78938:78966  _hashTypedDataV4(structHash) */\n      tag_146\n        /* \"contract-4b98807483_flattened.sol\":78955:78965  structHash */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":78938:78954  _hashTypedDataV4 */\n      tag_147\n        /* \"contract-4b98807483_flattened.sol\":78938:78966  _hashTypedDataV4(structHash) */\n      jump\t// in\n    tag_146:\n        /* \"contract-4b98807483_flattened.sol\":78923:78966  bytes32 hash = _hashTypedDataV4(structHash) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":78977:78991  address signer */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":78994:79022  ECDSA.recover(hash, v, r, s) */\n      tag_148\n        /* \"contract-4b98807483_flattened.sol\":79008:79012  hash */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":79014:79015  v */\n      dup8\n        /* \"contract-4b98807483_flattened.sol\":79017:79018  r */\n      dup8\n        /* \"contract-4b98807483_flattened.sol\":79020:79021  s */\n      dup8\n        /* \"contract-4b98807483_flattened.sol\":78994:79007  ECDSA.recover */\n      tag_149\n        /* \"contract-4b98807483_flattened.sol\":78994:79022  ECDSA.recover(hash, v, r, s) */\n      jump\t// in\n    tag_148:\n        /* \"contract-4b98807483_flattened.sol\":78977:79022  address signer = ECDSA.recover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":79046:79051  owner */\n      dup10\n        /* \"contract-4b98807483_flattened.sol\":79036:79051  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":79036:79042  signer */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":79036:79051  signer != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-4b98807483_flattened.sol\":79032:79120  if (signer != owner) {... */\n      tag_150\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":79095:79101  signer */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":79103:79108  owner */\n      dup11\n        /* \"contract-4b98807483_flattened.sol\":79074:79109  ERC2612InvalidSigner(signer, owner) */\n      mload(0x40)\n      0x4b800e4600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":79032:79120  if (signer != owner) {... */\n    tag_150:\n        /* \"contract-4b98807483_flattened.sol\":79130:79161  _approve(owner, spender, value) */\n      tag_153\n        /* \"contract-4b98807483_flattened.sol\":79139:79144  owner */\n      dup11\n        /* \"contract-4b98807483_flattened.sol\":79146:79153  spender */\n      dup11\n        /* \"contract-4b98807483_flattened.sol\":79155:79160  value */\n      dup11\n        /* \"contract-4b98807483_flattened.sol\":79130:79138  _approve */\n      tag_98\n        /* \"contract-4b98807483_flattened.sol\":79130:79161  _approve(owner, spender, value) */\n      jump\t// in\n    tag_153:\n        /* \"contract-4b98807483_flattened.sol\":78685:79168  {... */\n      pop\n      pop\n      pop\n        /* \"contract-4b98807483_flattened.sol\":78496:79168  function permit(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":69725:69865  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_82:\n        /* \"contract-4b98807483_flattened.sol\":69805:69812  uint256 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":69831:69842  _allowances */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":69831:69849  _allowances[owner] */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":69843:69848  owner */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":69831:69849  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-4b98807483_flattened.sol\":69831:69858  _allowances[owner][spender] */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":69850:69857  spender */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":69831:69858  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract-4b98807483_flattened.sol\":69824:69858  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":69725:69865  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":61992:62207  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"contract-4b98807483_flattened.sol\":60980:60993  _checkOwner() */\n      tag_156\n        /* \"contract-4b98807483_flattened.sol\":60980:60991  _checkOwner */\n      tag_113\n        /* \"contract-4b98807483_flattened.sol\":60980:60993  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"contract-4b98807483_flattened.sol\":62096:62097  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":62076:62098  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":62076:62084  newOwner */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":62076:62098  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-4b98807483_flattened.sol\":62072:62163  if (newOwner == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":62149:62150  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":62121:62152  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":62072:62163  if (newOwner == address(0)) {... */\n    tag_158:\n        /* \"contract-4b98807483_flattened.sol\":62172:62200  _transferOwnership(newOwner) */\n      tag_160\n        /* \"contract-4b98807483_flattened.sol\":62191:62199  newOwner */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":62172:62190  _transferOwnership */\n      tag_116\n        /* \"contract-4b98807483_flattened.sol\":62172:62200  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_160:\n        /* \"contract-4b98807483_flattened.sol\":61992:62207  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":59159:59255  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"contract-4b98807483_flattened.sol\":59212:59219  address */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":59238:59248  msg.sender */\n      caller\n        /* \"contract-4b98807483_flattened.sol\":59231:59248  return msg.sender */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":59159:59255  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":74868:74996  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_98:\n        /* \"contract-4b98807483_flattened.sol\":74952:74989  _approve(owner, spender, value, true) */\n      tag_163\n        /* \"contract-4b98807483_flattened.sol\":74961:74966  owner */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":74968:74975  spender */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":74977:74982  value */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":74984:74988  true */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":74952:74960  _approve */\n      tag_164\n        /* \"contract-4b98807483_flattened.sol\":74952:74989  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_163:\n        /* \"contract-4b98807483_flattened.sol\":74868:74996  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":76542:77019  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_103:\n        /* \"contract-4b98807483_flattened.sol\":76641:76665  uint256 currentAllowance */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":76668:76693  allowance(owner, spender) */\n      tag_166\n        /* \"contract-4b98807483_flattened.sol\":76678:76683  owner */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":76685:76692  spender */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":76668:76677  allowance */\n      tag_82\n        /* \"contract-4b98807483_flattened.sol\":76668:76693  allowance(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"contract-4b98807483_flattened.sol\":76641:76693  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":76727:76744  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contract-4b98807483_flattened.sol\":76707:76723  currentAllowance */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":76707:76744  currentAllowance != type(uint256).max */\n      eq\n        /* \"contract-4b98807483_flattened.sol\":76703:77013  if (currentAllowance != type(uint256).max) {... */\n      tag_167\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":76783:76788  value */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":76764:76780  currentAllowance */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":76764:76788  currentAllowance < value */\n      lt\n        /* \"contract-4b98807483_flattened.sol\":76760:76890  if (currentAllowance < value) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":76842:76849  spender */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":76851:76867  currentAllowance */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":76869:76874  value */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":76815:76875  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":76760:76890  if (currentAllowance < value) {... */\n    tag_168:\n        /* \"contract-4b98807483_flattened.sol\":76931:76988  _approve(owner, spender, currentAllowance - value, false) */\n      tag_171\n        /* \"contract-4b98807483_flattened.sol\":76940:76945  owner */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":76947:76954  spender */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":76975:76980  value */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":76956:76972  currentAllowance */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":76956:76980  currentAllowance - value */\n      sub\n        /* \"contract-4b98807483_flattened.sol\":76982:76987  false */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":76931:76939  _approve */\n      tag_164\n        /* \"contract-4b98807483_flattened.sol\":76931:76988  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_171:\n        /* \"contract-4b98807483_flattened.sol\":76703:77013  if (currentAllowance != type(uint256).max) {... */\n    tag_167:\n        /* \"contract-4b98807483_flattened.sol\":76631:77019  {... */\n      pop\n        /* \"contract-4b98807483_flattened.sol\":76542:77019  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":71535:71835  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_105:\n        /* \"contract-4b98807483_flattened.sol\":71634:71635  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":71618:71636  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":71618:71622  from */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":71618:71636  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-4b98807483_flattened.sol\":71614:71700  if (from == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":71686:71687  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":71659:71689  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":71614:71700  if (from == address(0)) {... */\n    tag_173:\n        /* \"contract-4b98807483_flattened.sol\":71727:71728  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":71713:71729  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":71713:71715  to */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":71713:71729  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-4b98807483_flattened.sol\":71709:71795  if (to == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":71781:71782  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":71752:71784  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":71709:71795  if (to == address(0)) {... */\n    tag_175:\n        /* \"contract-4b98807483_flattened.sol\":71804:71828  _update(from, to, value) */\n      tag_177\n        /* \"contract-4b98807483_flattened.sol\":71812:71816  from */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":71818:71820  to */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":71822:71827  value */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":71804:71811  _update */\n      tag_178\n        /* \"contract-4b98807483_flattened.sol\":71804:71828  _update(from, to, value) */\n      jump\t// in\n    tag_177:\n        /* \"contract-4b98807483_flattened.sol\":71535:71835  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":37514:37776  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_109:\n        /* \"contract-4b98807483_flattened.sol\":37567:37574  bytes32 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":37607:37618  _cachedThis */\n      immutable(\"0xf2aed5d52b85e7b229d9a0bb201e12bdcbbc5fc133feb54c1cb531c3f7cf58ed\")\n        /* \"contract-4b98807483_flattened.sol\":37590:37618  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":37598:37602  this */\n      address\n        /* \"contract-4b98807483_flattened.sol\":37590:37618  address(this) == _cachedThis */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-4b98807483_flattened.sol\":37590:37653  address(this) == _cachedThis && block.chainid == _cachedChainId */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n        /* \"contract-4b98807483_flattened.sol\":37639:37653  _cachedChainId */\n      immutable(\"0x89dda32db2afb3470ad3a855ff08175ef365ece0147067a2a9b89c9351412201\")\n        /* \"contract-4b98807483_flattened.sol\":37622:37635  block.chainid */\n      chainid\n        /* \"contract-4b98807483_flattened.sol\":37622:37653  block.chainid == _cachedChainId */\n      eq\n        /* \"contract-4b98807483_flattened.sol\":37590:37653  address(this) == _cachedThis && block.chainid == _cachedChainId */\n    tag_180:\n        /* \"contract-4b98807483_flattened.sol\":37586:37770  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":37676:37698  _cachedDomainSeparator */\n      immutable(\"0x3f9e555adc0bedaea160f26d13d68ea1bde6a5a9af64af415bccce823c8f9ad8\")\n        /* \"contract-4b98807483_flattened.sol\":37669:37698  return _cachedDomainSeparator */\n      swap1\n      pop\n      jump(tag_179)\n        /* \"contract-4b98807483_flattened.sol\":37586:37770  if (address(this) == _cachedThis && block.chainid == _cachedChainId) {... */\n    tag_181:\n        /* \"contract-4b98807483_flattened.sol\":37736:37759  _buildDomainSeparator() */\n      tag_183\n        /* \"contract-4b98807483_flattened.sol\":37736:37757  _buildDomainSeparator */\n      tag_184\n        /* \"contract-4b98807483_flattened.sol\":37736:37759  _buildDomainSeparator() */\n      jump\t// in\n    tag_183:\n        /* \"contract-4b98807483_flattened.sol\":37729:37759  return _buildDomainSeparator() */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":37514:37776  function _domainSeparatorV4() internal view returns (bytes32) {... */\n    tag_179:\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":61245:61407  function _checkOwner() internal view virtual {... */\n    tag_113:\n        /* \"contract-4b98807483_flattened.sol\":61315:61327  _msgSender() */\n      tag_186\n        /* \"contract-4b98807483_flattened.sol\":61315:61325  _msgSender */\n      tag_96\n        /* \"contract-4b98807483_flattened.sol\":61315:61327  _msgSender() */\n      jump\t// in\n    tag_186:\n        /* \"contract-4b98807483_flattened.sol\":61304:61327  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":61304:61311  owner() */\n      tag_187\n        /* \"contract-4b98807483_flattened.sol\":61304:61309  owner */\n      tag_65\n        /* \"contract-4b98807483_flattened.sol\":61304:61311  owner() */\n      jump\t// in\n    tag_187:\n        /* \"contract-4b98807483_flattened.sol\":61304:61327  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contract-4b98807483_flattened.sol\":61300:61401  if (owner() != _msgSender()) {... */\n      tag_188\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":61377:61389  _msgSender() */\n      tag_189\n        /* \"contract-4b98807483_flattened.sol\":61377:61387  _msgSender */\n      tag_96\n        /* \"contract-4b98807483_flattened.sol\":61377:61389  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"contract-4b98807483_flattened.sol\":61350:61390  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":61300:61401  if (owner() != _msgSender()) {... */\n    tag_188:\n        /* \"contract-4b98807483_flattened.sol\":61245:61407  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":62361:62548  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_116:\n        /* \"contract-4b98807483_flattened.sol\":62434:62450  address oldOwner */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":62453:62459  _owner */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":62434:62459  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":62478:62486  newOwner */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":62469:62475  _owner */\n      0x08\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":62469:62486  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contract-4b98807483_flattened.sol\":62532:62540  newOwner */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":62501:62541  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":62522:62530  oldOwner */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":62501:62541  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract-4b98807483_flattened.sol\":62424:62548  {... */\n      pop\n        /* \"contract-4b98807483_flattened.sol\":62361:62548  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":565:672  function nonces(address owner) public view virtual returns (uint256) {... */\n    tag_119:\n        /* \"contract-4b98807483_flattened.sol\":625:632  uint256 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":651:658  _nonces */\n      0x07\n        /* \"contract-4b98807483_flattened.sol\":651:665  _nonces[owner] */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":659:664  owner */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":651:665  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract-4b98807483_flattened.sol\":644:665  return _nonces[owner] */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":565:672  function nonces(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":39690:39816  function _EIP712Name() internal view returns (string memory) {... */\n    tag_122:\n        /* \"contract-4b98807483_flattened.sol\":39736:39749  string memory */\n      0x60\n        /* \"contract-4b98807483_flattened.sol\":39768:39809  _name.toStringWithFallback(_nameFallback) */\n      tag_194\n        /* \"contract-4b98807483_flattened.sol\":39795:39808  _nameFallback */\n      0x05\n        /* \"contract-4b98807483_flattened.sol\":39768:39773  _name */\n      immutable(\"0xa7cd0fec000bc9bc829eee3f19124c6d92f9bf03bc5604d586b7a9d0b7293aeb\")\n        /* \"contract-4b98807483_flattened.sol\":39768:39794  _name.toStringWithFallback */\n      tag_195\n      swap1\n        /* \"contract-4b98807483_flattened.sol\":39768:39809  _name.toStringWithFallback(_nameFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contract-4b98807483_flattened.sol\":39761:39809  return _name.toStringWithFallback(_nameFallback) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":39690:39816  function _EIP712Name() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":40142:40277  function _EIP712Version() internal view returns (string memory) {... */\n    tag_124:\n        /* \"contract-4b98807483_flattened.sol\":40191:40204  string memory */\n      0x60\n        /* \"contract-4b98807483_flattened.sol\":40223:40270  _version.toStringWithFallback(_versionFallback) */\n      tag_197\n        /* \"contract-4b98807483_flattened.sol\":40253:40269  _versionFallback */\n      0x06\n        /* \"contract-4b98807483_flattened.sol\":40223:40231  _version */\n      immutable(\"0x2afe76337b531113eeb6984869209602297c0be432194d84882749ead3021a37\")\n        /* \"contract-4b98807483_flattened.sol\":40223:40252  _version.toStringWithFallback */\n      tag_195\n      swap1\n        /* \"contract-4b98807483_flattened.sol\":40223:40270  _version.toStringWithFallback(_versionFallback) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contract-4b98807483_flattened.sol\":40216:40270  return _version.toStringWithFallback(_versionFallback) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":40142:40277  function _EIP712Version() internal view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":786:1181  function _useNonce(address owner) internal virtual returns (uint256) {... */\n    tag_143:\n        /* \"contract-4b98807483_flattened.sol\":846:853  uint256 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":1148:1155  _nonces */\n      0x07\n        /* \"contract-4b98807483_flattened.sol\":1148:1162  _nonces[owner] */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":1156:1161  owner */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":1148:1162  _nonces[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":1148:1164  _nonces[owner]++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      sstore\n        /* \"contract-4b98807483_flattened.sol\":1141:1164  return _nonces[owner]++ */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":786:1181  function _useNonce(address owner) internal virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":38586:38762  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n    tag_147:\n        /* \"contract-4b98807483_flattened.sol\":38663:38670  bytes32 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":38689:38755  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      tag_200\n        /* \"contract-4b98807483_flattened.sol\":38722:38742  _domainSeparatorV4() */\n      tag_201\n        /* \"contract-4b98807483_flattened.sol\":38722:38740  _domainSeparatorV4 */\n      tag_109\n        /* \"contract-4b98807483_flattened.sol\":38722:38742  _domainSeparatorV4() */\n      jump\t// in\n    tag_201:\n        /* \"contract-4b98807483_flattened.sol\":38744:38754  structHash */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":38689:38721  MessageHashUtils.toTypedDataHash */\n      tag_202\n        /* \"contract-4b98807483_flattened.sol\":38689:38755  MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      jump\t// in\n    tag_200:\n        /* \"contract-4b98807483_flattened.sol\":38682:38755  return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":38586:38762  function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":47122:47382  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n    tag_149:\n        /* \"contract-4b98807483_flattened.sol\":47207:47214  address */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":47227:47244  address recovered */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":47246:47264  RecoverError error */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":47266:47282  bytes32 errorArg */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":47286:47311  tryRecover(hash, v, r, s) */\n      tag_204\n        /* \"contract-4b98807483_flattened.sol\":47297:47301  hash */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":47303:47304  v */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":47306:47307  r */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":47309:47310  s */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":47286:47296  tryRecover */\n      tag_205\n        /* \"contract-4b98807483_flattened.sol\":47286:47311  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_204:\n        /* \"contract-4b98807483_flattened.sol\":47226:47311  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contract-4b98807483_flattened.sol\":47321:47349  _throwError(error, errorArg) */\n      tag_206\n        /* \"contract-4b98807483_flattened.sol\":47333:47338  error */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":47340:47348  errorArg */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":47321:47332  _throwError */\n      tag_207\n        /* \"contract-4b98807483_flattened.sol\":47321:47349  _throwError(error, errorArg) */\n      jump\t// in\n    tag_206:\n        /* \"contract-4b98807483_flattened.sol\":47366:47375  recovered */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":47359:47375  return recovered */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contract-4b98807483_flattened.sol\":47122:47382  function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":75828:76260  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_164:\n        /* \"contract-4b98807483_flattened.sol\":75957:75958  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":75940:75959  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":75940:75945  owner */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":75940:75959  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-4b98807483_flattened.sol\":75936:76025  if (owner == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":76011:76012  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":75982:76014  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":75936:76025  if (owner == address(0)) {... */\n    tag_209:\n        /* \"contract-4b98807483_flattened.sol\":76057:76058  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":76038:76059  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":76038:76045  spender */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":76038:76059  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-4b98807483_flattened.sol\":76034:76124  if (spender == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":76110:76111  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":76082:76113  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":76034:76124  if (spender == address(0)) {... */\n    tag_211:\n        /* \"contract-4b98807483_flattened.sol\":76163:76168  value */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":76133:76144  _allowances */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":76133:76151  _allowances[owner] */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":76145:76150  owner */\n      dup7\n        /* \"contract-4b98807483_flattened.sol\":76133:76151  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-4b98807483_flattened.sol\":76133:76160  _allowances[owner][spender] */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":76152:76159  spender */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":76133:76160  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-4b98807483_flattened.sol\":76133:76168  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-4b98807483_flattened.sol\":76182:76191  emitEvent */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":76178:76254  if (emitEvent) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":76228:76235  spender */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":76212:76243  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":76221:76226  owner */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":76212:76243  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contract-4b98807483_flattened.sol\":76237:76242  value */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":76212:76243  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract-4b98807483_flattened.sol\":76178:76254  if (emitEvent) {... */\n    tag_213:\n        /* \"contract-4b98807483_flattened.sol\":75828:76260  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":72150:73257  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_178:\n        /* \"contract-4b98807483_flattened.sol\":72255:72256  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":72239:72257  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":72239:72243  from */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":72239:72257  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-4b98807483_flattened.sol\":72235:72775  if (from == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":72391:72396  value */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":72375:72387  _totalSupply */\n      0x02\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":72375:72396  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-4b98807483_flattened.sol\":72235:72775  if (from == address(0)) {... */\n      jump(tag_219)\n    tag_216:\n        /* \"contract-4b98807483_flattened.sol\":72427:72446  uint256 fromBalance */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":72449:72458  _balances */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":72449:72464  _balances[from] */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":72459:72463  from */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":72449:72464  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contract-4b98807483_flattened.sol\":72427:72464  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":72496:72501  value */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":72482:72493  fromBalance */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":72482:72501  fromBalance < value */\n      lt\n        /* \"contract-4b98807483_flattened.sol\":72478:72593  if (fromBalance < value) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":72553:72557  from */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":72559:72570  fromBalance */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":72572:72577  value */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":72528:72578  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_221\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":72478:72593  if (fromBalance < value) {... */\n    tag_220:\n        /* \"contract-4b98807483_flattened.sol\":72745:72750  value */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":72731:72742  fromBalance */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":72731:72750  fromBalance - value */\n      sub\n        /* \"contract-4b98807483_flattened.sol\":72713:72722  _balances */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":72713:72728  _balances[from] */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":72723:72727  from */\n      dup7\n        /* \"contract-4b98807483_flattened.sol\":72713:72728  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contract-4b98807483_flattened.sol\":72713:72750  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-4b98807483_flattened.sol\":72413:72775  {... */\n      pop\n        /* \"contract-4b98807483_flattened.sol\":72235:72775  if (from == address(0)) {... */\n    tag_219:\n        /* \"contract-4b98807483_flattened.sol\":72803:72804  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":72789:72805  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":72789:72791  to */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":72789:72805  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-4b98807483_flattened.sol\":72785:73210  if (to == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":72968:72973  value */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":72952:72964  _totalSupply */\n      0x02\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":72952:72973  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-4b98807483_flattened.sol\":72785:73210  if (to == address(0)) {... */\n      jump(tag_223)\n    tag_222:\n        /* \"contract-4b98807483_flattened.sol\":73180:73185  value */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":73163:73172  _balances */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":73163:73176  _balances[to] */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":73173:73175  to */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":73163:73176  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":73163:73185  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contract-4b98807483_flattened.sol\":72785:73210  if (to == address(0)) {... */\n    tag_223:\n        /* \"contract-4b98807483_flattened.sol\":73240:73242  to */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":73225:73250  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":73234:73238  from */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":73225:73250  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contract-4b98807483_flattened.sol\":73244:73249  value */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":73225:73250  Transfer(from, to, value) */\n      mload(0x40)\n      tag_224\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contract-4b98807483_flattened.sol\":72150:73257  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":37782:37961  function _buildDomainSeparator() private view returns (bytes32) {... */\n    tag_184:\n        /* \"contract-4b98807483_flattened.sol\":37837:37844  bytes32 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":35748:35843  keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\") */\n      0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n        /* \"contract-4b98807483_flattened.sol\":37895:37906  _hashedName */\n      immutable(\"0xf9ba965def30954c13b9f17655d4bfcf079e819f9cc42b75928cd97e2c9f9020\")\n        /* \"contract-4b98807483_flattened.sol\":37908:37922  _hashedVersion */\n      immutable(\"0x5444bf99e2aaa84d0c0adba4902ca441e981a14d987060ddd53a6e4272e74bca\")\n        /* \"contract-4b98807483_flattened.sol\":37924:37937  block.chainid */\n      chainid\n        /* \"contract-4b98807483_flattened.sol\":37947:37951  this */\n      address\n        /* \"contract-4b98807483_flattened.sol\":37873:37953  abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)) */\n      add(0x20, mload(0x40))\n      tag_226\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contract-4b98807483_flattened.sol\":37863:37954  keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contract-4b98807483_flattened.sol\":37856:37954  return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this))) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":37782:37961  function _buildDomainSeparator() private view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":9624:9891  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_195:\n        /* \"contract-4b98807483_flattened.sol\":9718:9731  string memory */\n      0x60\n        /* \"contract-4b98807483_flattened.sol\":7629:7695  0x00000000000000000000000000000000000000000000000000000000000000FF */\n      0xff\n        /* \"contract-4b98807483_flattened.sol\":9776:9793  FALLBACK_SENTINEL */\n      0x00\n      shl\n        /* \"contract-4b98807483_flattened.sol\":9766:9771  value */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":9747:9793  ShortString.unwrap(value) != FALLBACK_SENTINEL */\n      eq\n        /* \"contract-4b98807483_flattened.sol\":9743:9885  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n      tag_229\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":9816:9831  toString(value) */\n      tag_230\n        /* \"contract-4b98807483_flattened.sol\":9825:9830  value */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":9816:9824  toString */\n      tag_231\n        /* \"contract-4b98807483_flattened.sol\":9816:9831  toString(value) */\n      jump\t// in\n    tag_230:\n        /* \"contract-4b98807483_flattened.sol\":9809:9831  return toString(value) */\n      swap1\n      pop\n      jump(tag_228)\n        /* \"contract-4b98807483_flattened.sol\":9743:9885  if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {... */\n    tag_229:\n        /* \"contract-4b98807483_flattened.sol\":9869:9874  store */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":9862:9874  return store */\n      dup1\n      sload\n      tag_233\n      swap1\n      tag_89\n      jump\t// in\n    tag_233:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_234\n      swap1\n      tag_89\n      jump\t// in\n    tag_234:\n      dup1\n      iszero\n      tag_235\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_236\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_235)\n    tag_236:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_237:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_237\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":9624:9891  function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {... */\n    tag_228:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":33399:33800  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n    tag_202:\n        /* \"contract-4b98807483_flattened.sol\":33492:33506  bytes32 digest */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":33601:33605  0x40 */\n      0x40\n        /* \"contract-4b98807483_flattened.sol\":33595:33606  mload(0x40) */\n      mload\n        /* \"contract-4b98807483_flattened.sol\":33631:33641  hex\"19_01\" */\n      0x1901000000000000000000000000000000000000000000000000000000000000\n        /* \"contract-4b98807483_flattened.sol\":33626:33629  ptr */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":33619:33642  mstore(ptr, hex\"19_01\") */\n      mstore\n        /* \"contract-4b98807483_flattened.sol\":33678:33693  domainSeparator */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":33671:33675  0x02 */\n      0x02\n        /* \"contract-4b98807483_flattened.sol\":33666:33669  ptr */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":33662:33676  add(ptr, 0x02) */\n      add\n        /* \"contract-4b98807483_flattened.sol\":33655:33694  mstore(add(ptr, 0x02), domainSeparator) */\n      mstore\n        /* \"contract-4b98807483_flattened.sol\":33730:33740  structHash */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":33723:33727  0x22 */\n      0x22\n        /* \"contract-4b98807483_flattened.sol\":33718:33721  ptr */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":33714:33728  add(ptr, 0x22) */\n      add\n        /* \"contract-4b98807483_flattened.sol\":33707:33741  mstore(add(ptr, 0x22), structHash) */\n      mstore\n        /* \"contract-4b98807483_flattened.sol\":33779:33783  0x42 */\n      0x42\n        /* \"contract-4b98807483_flattened.sol\":33774:33777  ptr */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":33764:33784  keccak256(ptr, 0x42) */\n      keccak256\n        /* \"contract-4b98807483_flattened.sol\":33754:33784  digest := keccak256(ptr, 0x42) */\n      swap2\n      pop\n        /* \"contract-4b98807483_flattened.sol\":33570:33794  {... */\n      pop\n        /* \"contract-4b98807483_flattened.sol\":33399:33800  function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":45459:46989  function tryRecover(... */\n    tag_205:\n        /* \"contract-4b98807483_flattened.sol\":45585:45592  address */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":45594:45606  RecoverError */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":45608:45615  bytes32 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":46518:46584  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"contract-4b98807483_flattened.sol\":46513:46514  s */\n      dup5\n        /* \"contract-4b98807483_flattened.sol\":46505:46515  uint256(s) */\n      0x00\n      shr\n        /* \"contract-4b98807483_flattened.sol\":46505:46584  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      gt\n        /* \"contract-4b98807483_flattened.sol\":46501:46665  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":46616:46617  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":46620:46650  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"contract-4b98807483_flattened.sol\":46652:46653  s */\n      dup6\n        /* \"contract-4b98807483_flattened.sol\":46600:46654  return (address(0), RecoverError.InvalidSignatureS, s) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n      jump(tag_239)\n        /* \"contract-4b98807483_flattened.sol\":46501:46665  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_240:\n        /* \"contract-4b98807483_flattened.sol\":46759:46773  address signer */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":46776:46800  ecrecover(hash, v, r, s) */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":46786:46790  hash */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":46792:46793  v */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":46795:46796  r */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":46798:46799  s */\n      dup9\n        /* \"contract-4b98807483_flattened.sol\":46776:46800  ecrecover(hash, v, r, s) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_241\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_244:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contract-4b98807483_flattened.sol\":46759:46800  address signer = ecrecover(hash, v, r, s) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":46832:46833  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":46814:46834  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contract-4b98807483_flattened.sol\":46814:46820  signer */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":46814:46834  signer == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contract-4b98807483_flattened.sol\":46810:46923  if (signer == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":46866:46867  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":46870:46899  RecoverError.InvalidSignature */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":46909:46910  0 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":46901:46911  bytes32(0) */\n      dup1\n      shl\n        /* \"contract-4b98807483_flattened.sol\":46850:46912  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      jump(tag_239)\n        /* \"contract-4b98807483_flattened.sol\":46810:46923  if (signer == address(0)) {... */\n    tag_245:\n        /* \"contract-4b98807483_flattened.sol\":46941:46947  signer */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":46949:46969  RecoverError.NoError */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":46979:46980  0 */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":46971:46981  bytes32(0) */\n      0x00\n      shl\n        /* \"contract-4b98807483_flattened.sol\":46933:46982  return (signer, RecoverError.NoError, bytes32(0)) */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      pop\n        /* \"contract-4b98807483_flattened.sol\":45459:46989  function tryRecover(... */\n    tag_239:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":47515:48047  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_207:\n        /* \"contract-4b98807483_flattened.sol\":47610:47630  RecoverError.NoError */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":47601:47630  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_247\n      jumpi\n      tag_248\n      tag_249\n      jump\t// in\n    tag_248:\n    tag_247:\n        /* \"contract-4b98807483_flattened.sol\":47601:47606  error */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":47601:47630  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_250\n      jumpi\n      tag_251\n      tag_249\n      jump\t// in\n    tag_251:\n    tag_250:\n      sub\n        /* \"contract-4b98807483_flattened.sol\":47597:48041  if (error == RecoverError.NoError) {... */\n      iszero\n        /* \"contract-4b98807483_flattened.sol\":47646:47653  return; */\n      tag_246\n        /* \"contract-4b98807483_flattened.sol\":47597:48041  if (error == RecoverError.NoError) {... */\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":47706:47735  RecoverError.InvalidSignature */\n      0x01\n        /* \"contract-4b98807483_flattened.sol\":47697:47735  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_254\n      jumpi\n      tag_255\n      tag_249\n      jump\t// in\n    tag_255:\n    tag_254:\n        /* \"contract-4b98807483_flattened.sol\":47697:47702  error */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":47697:47735  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_256\n      jumpi\n      tag_257\n      tag_249\n      jump\t// in\n    tag_257:\n    tag_256:\n      sub\n        /* \"contract-4b98807483_flattened.sol\":47693:48041  if (error == RecoverError.InvalidSignature) {... */\n      tag_258\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":47758:47781  ECDSAInvalidSignature() */\n      mload(0x40)\n      0xf645eedf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":47693:48041  if (error == RecoverError.InvalidSignature) {... */\n    tag_258:\n        /* \"contract-4b98807483_flattened.sol\":47811:47846  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"contract-4b98807483_flattened.sol\":47802:47846  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_260\n      jumpi\n      tag_261\n      tag_249\n      jump\t// in\n    tag_261:\n    tag_260:\n        /* \"contract-4b98807483_flattened.sol\":47802:47807  error */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":47802:47846  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_262\n      jumpi\n      tag_263\n      tag_249\n      jump\t// in\n    tag_263:\n    tag_262:\n      sub\n        /* \"contract-4b98807483_flattened.sol\":47798:48041  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_264\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":47905:47913  errorArg */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":47897:47914  uint256(errorArg) */\n      0x00\n      shr\n        /* \"contract-4b98807483_flattened.sol\":47869:47915  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      0xfce698f700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_265\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_265:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":47798:48041  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_264:\n        /* \"contract-4b98807483_flattened.sol\":47945:47975  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"contract-4b98807483_flattened.sol\":47936:47975  error == RecoverError.InvalidSignatureS */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_267\n      jumpi\n      tag_268\n      tag_249\n      jump\t// in\n    tag_268:\n    tag_267:\n        /* \"contract-4b98807483_flattened.sol\":47936:47941  error */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":47936:47975  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_269\n      jumpi\n      tag_270\n      tag_249\n      jump\t// in\n    tag_270:\n    tag_269:\n      sub\n        /* \"contract-4b98807483_flattened.sol\":47932:48041  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_271\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":48021:48029  errorArg */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":47998:48030  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      0xd78bce0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":47932:48041  if (error == RecoverError.InvalidSignatureS) {... */\n    tag_271:\n        /* \"contract-4b98807483_flattened.sol\":47515:48047  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_246:\n      pop\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":8317:8722  function toString(ShortString sstr) internal pure returns (string memory) {... */\n    tag_231:\n        /* \"contract-4b98807483_flattened.sol\":8376:8389  string memory */\n      0x60\n        /* \"contract-4b98807483_flattened.sol\":8401:8412  uint256 len */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":8415:8431  byteLength(sstr) */\n      tag_274\n        /* \"contract-4b98807483_flattened.sol\":8426:8430  sstr */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":8415:8425  byteLength */\n      tag_275\n        /* \"contract-4b98807483_flattened.sol\":8415:8431  byteLength(sstr) */\n      jump\t// in\n    tag_274:\n        /* \"contract-4b98807483_flattened.sol\":8401:8431  uint256 len = byteLength(sstr) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":8519:8536  string memory str */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":8550:8552  32 */\n      0x20\n        /* \"contract-4b98807483_flattened.sol\":8539:8553  new string(32) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_276\n      jumpi\n      tag_277\n      tag_127\n      jump\t// in\n    tag_277:\n    tag_276:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_278\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_278:\n      pop\n        /* \"contract-4b98807483_flattened.sol\":8519:8553  string memory str = new string(32) */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":8641:8644  len */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":8636:8639  str */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":8629:8645  mstore(str, len) */\n      mstore\n        /* \"contract-4b98807483_flattened.sol\":8681:8685  sstr */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":8674:8678  0x20 */\n      0x20\n        /* \"contract-4b98807483_flattened.sol\":8669:8672  str */\n      dup3\n        /* \"contract-4b98807483_flattened.sol\":8665:8679  add(str, 0x20) */\n      add\n        /* \"contract-4b98807483_flattened.sol\":8658:8686  mstore(add(str, 0x20), sstr) */\n      mstore\n        /* \"contract-4b98807483_flattened.sol\":8712:8715  str */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":8705:8715  return str */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contract-4b98807483_flattened.sol\":8317:8722  function toString(ShortString sstr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contract-4b98807483_flattened.sol\":8794:9039  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n    tag_275:\n        /* \"contract-4b98807483_flattened.sol\":8855:8862  uint256 */\n      0x00\n        /* \"contract-4b98807483_flattened.sol\":8874:8888  uint256 result */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":8927:8931  0xFF */\n      0xff\n        /* \"contract-4b98807483_flattened.sol\":8918:8922  sstr */\n      dup4\n        /* \"contract-4b98807483_flattened.sol\":8891:8924  uint256(ShortString.unwrap(sstr)) */\n      0x00\n      shr\n        /* \"contract-4b98807483_flattened.sol\":8891:8931  uint256(ShortString.unwrap(sstr)) & 0xFF */\n      and\n        /* \"contract-4b98807483_flattened.sol\":8874:8931  uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF */\n      swap1\n      pop\n        /* \"contract-4b98807483_flattened.sol\":8954:8956  31 */\n      0x1f\n        /* \"contract-4b98807483_flattened.sol\":8945:8951  result */\n      dup2\n        /* \"contract-4b98807483_flattened.sol\":8945:8956  result > 31 */\n      gt\n        /* \"contract-4b98807483_flattened.sol\":8941:9010  if (result > 31) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"contract-4b98807483_flattened.sol\":8979:8999  InvalidShortString() */\n      mload(0x40)\n      0xb3512b0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contract-4b98807483_flattened.sol\":8941:9010  if (result > 31) {... */\n    tag_280:\n        /* \"contract-4b98807483_flattened.sol\":9026:9032  result */\n      dup1\n        /* \"contract-4b98807483_flattened.sol\":9019:9032  return result */\n      swap2\n      pop\n      pop\n        /* \"contract-4b98807483_flattened.sol\":8794:9039  function byteLength(ShortString sstr) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_281:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_282:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_283:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_323:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_323)\n    tag_325:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_284:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_285:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_328\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_281\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":818:889   */\n      tag_329\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_282\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_330\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_283\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":988:1017   */\n      tag_331\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_284\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_25:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_333\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_285\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_287:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_289:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_290:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_339\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_289\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_291:\n        /* \"#utility.yul\":1983:2007   */\n      tag_341\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_290\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_342:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_292:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_344\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_291\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_293:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_294:\n        /* \"#utility.yul\":2339:2363   */\n      tag_347\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_293\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_348:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_295:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_350\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_294\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_28:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_353\n      tag_287\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":2632:2751   */\n    tag_352:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_354\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_292\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_355\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_295\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_296:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_297:\n        /* \"#utility.yul\":3196:3217   */\n      tag_358\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_296\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_31:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_360\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_297\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_298:\n        /* \"#utility.yul\":3533:3557   */\n      tag_362\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_293\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_35:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_364\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_298\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_38:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_367\n      tag_287\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3908:4027   */\n    tag_366:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_368\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_292\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_369\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_292\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_370\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_295\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_299:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_300:\n        /* \"#utility.yul\":4598:4620   */\n      tag_373\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_299\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_44:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_375\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_300\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4930   */\n    tag_301:\n        /* \"#utility.yul\":4890:4897   */\n      0x00\n        /* \"#utility.yul\":4919:4924   */\n      dup2\n        /* \"#utility.yul\":4908:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4930   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5054   */\n    tag_302:\n        /* \"#utility.yul\":5023:5047   */\n      tag_378\n        /* \"#utility.yul\":5041:5046   */\n      dup2\n        /* \"#utility.yul\":5023:5047   */\n      tag_301\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5018:5021   */\n      dup3\n        /* \"#utility.yul\":5011:5048   */\n      mstore\n        /* \"#utility.yul\":4936:5054   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5282   */\n    tag_48:\n        /* \"#utility.yul\":5153:5157   */\n      0x00\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5168:5194   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5275   */\n      tag_380\n        /* \"#utility.yul\":5272:5273   */\n      0x00\n        /* \"#utility.yul\":5261:5270   */\n      dup4\n        /* \"#utility.yul\":5257:5274   */\n      add\n        /* \"#utility.yul\":5248:5254   */\n      dup5\n        /* \"#utility.yul\":5204:5275   */\n      tag_302\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5060:5282   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5288:5617   */\n    tag_51:\n        /* \"#utility.yul\":5347:5353   */\n      0x00\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5384:5393   */\n      dup3\n        /* \"#utility.yul\":5375:5382   */\n      dup5\n        /* \"#utility.yul\":5371:5394   */\n      sub\n        /* \"#utility.yul\":5367:5399   */\n      slt\n        /* \"#utility.yul\":5364:5483   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":5402:5481   */\n      tag_383\n      tag_287\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5364:5483   */\n    tag_382:\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5547:5600   */\n      tag_384\n        /* \"#utility.yul\":5592:5599   */\n      dup5\n        /* \"#utility.yul\":5583:5589   */\n      dup3\n        /* \"#utility.yul\":5572:5581   */\n      dup6\n        /* \"#utility.yul\":5568:5590   */\n      add\n        /* \"#utility.yul\":5547:5600   */\n      tag_292\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5537:5600   */\n      swap2\n      pop\n        /* \"#utility.yul\":5493:5610   */\n      pop\n        /* \"#utility.yul\":5288:5617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5623:5772   */\n    tag_303:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5699:5765   */\n      0xff00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5692:5697   */\n      dup3\n        /* \"#utility.yul\":5688:5766   */\n      and\n        /* \"#utility.yul\":5677:5766   */\n      swap1\n      pop\n        /* \"#utility.yul\":5623:5772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5778:5893   */\n    tag_304:\n        /* \"#utility.yul\":5863:5886   */\n      tag_387\n        /* \"#utility.yul\":5880:5885   */\n      dup2\n        /* \"#utility.yul\":5863:5886   */\n      tag_303\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":5858:5861   */\n      dup3\n        /* \"#utility.yul\":5851:5887   */\n      mstore\n        /* \"#utility.yul\":5778:5893   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6017   */\n    tag_305:\n        /* \"#utility.yul\":5986:6010   */\n      tag_389\n        /* \"#utility.yul\":6004:6009   */\n      dup2\n        /* \"#utility.yul\":5986:6010   */\n      tag_290\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":5981:5984   */\n      dup3\n        /* \"#utility.yul\":5974:6011   */\n      mstore\n        /* \"#utility.yul\":5899:6017   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6023:6137   */\n    tag_306:\n        /* \"#utility.yul\":6090:6096   */\n      0x00\n        /* \"#utility.yul\":6124:6129   */\n      dup2\n        /* \"#utility.yul\":6118:6130   */\n      mload\n        /* \"#utility.yul\":6108:6130   */\n      swap1\n      pop\n        /* \"#utility.yul\":6023:6137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6143:6327   */\n    tag_307:\n        /* \"#utility.yul\":6242:6253   */\n      0x00\n        /* \"#utility.yul\":6276:6282   */\n      dup3\n        /* \"#utility.yul\":6271:6274   */\n      dup3\n        /* \"#utility.yul\":6264:6283   */\n      mstore\n        /* \"#utility.yul\":6316:6320   */\n      0x20\n        /* \"#utility.yul\":6311:6314   */\n      dup3\n        /* \"#utility.yul\":6307:6321   */\n      add\n        /* \"#utility.yul\":6292:6321   */\n      swap1\n      pop\n        /* \"#utility.yul\":6143:6327   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6333:6465   */\n    tag_308:\n        /* \"#utility.yul\":6400:6404   */\n      0x00\n        /* \"#utility.yul\":6423:6426   */\n      dup2\n        /* \"#utility.yul\":6415:6426   */\n      swap1\n      pop\n        /* \"#utility.yul\":6453:6457   */\n      0x20\n        /* \"#utility.yul\":6448:6451   */\n      dup3\n        /* \"#utility.yul\":6444:6458   */\n      add\n        /* \"#utility.yul\":6436:6458   */\n      swap1\n      pop\n        /* \"#utility.yul\":6333:6465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6471:6579   */\n    tag_309:\n        /* \"#utility.yul\":6548:6572   */\n      tag_394\n        /* \"#utility.yul\":6566:6571   */\n      dup2\n        /* \"#utility.yul\":6548:6572   */\n      tag_293\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6543:6546   */\n      dup3\n        /* \"#utility.yul\":6536:6573   */\n      mstore\n        /* \"#utility.yul\":6471:6579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6585:6764   */\n    tag_310:\n        /* \"#utility.yul\":6654:6664   */\n      0x00\n        /* \"#utility.yul\":6675:6721   */\n      tag_396\n        /* \"#utility.yul\":6717:6720   */\n      dup4\n        /* \"#utility.yul\":6709:6715   */\n      dup4\n        /* \"#utility.yul\":6675:6721   */\n      tag_309\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6753:6757   */\n      0x20\n        /* \"#utility.yul\":6748:6751   */\n      dup4\n        /* \"#utility.yul\":6744:6758   */\n      add\n        /* \"#utility.yul\":6730:6758   */\n      swap1\n      pop\n        /* \"#utility.yul\":6585:6764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6770:6883   */\n    tag_311:\n        /* \"#utility.yul\":6840:6844   */\n      0x00\n        /* \"#utility.yul\":6872:6876   */\n      0x20\n        /* \"#utility.yul\":6867:6870   */\n      dup3\n        /* \"#utility.yul\":6863:6877   */\n      add\n        /* \"#utility.yul\":6855:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6770:6883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6919:7651   */\n    tag_312:\n        /* \"#utility.yul\":7038:7041   */\n      0x00\n        /* \"#utility.yul\":7067:7121   */\n      tag_399\n        /* \"#utility.yul\":7115:7120   */\n      dup3\n        /* \"#utility.yul\":7067:7121   */\n      tag_306\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7137:7223   */\n      tag_400\n        /* \"#utility.yul\":7216:7222   */\n      dup2\n        /* \"#utility.yul\":7211:7214   */\n      dup6\n        /* \"#utility.yul\":7137:7223   */\n      tag_307\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":7130:7223   */\n      swap4\n      pop\n        /* \"#utility.yul\":7247:7303   */\n      tag_401\n        /* \"#utility.yul\":7297:7302   */\n      dup4\n        /* \"#utility.yul\":7247:7303   */\n      tag_308\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7326:7333   */\n      dup1\n        /* \"#utility.yul\":7357:7358   */\n      0x00\n        /* \"#utility.yul\":7342:7626   */\n    tag_402:\n        /* \"#utility.yul\":7367:7373   */\n      dup4\n        /* \"#utility.yul\":7364:7365   */\n      dup2\n        /* \"#utility.yul\":7361:7374   */\n      lt\n        /* \"#utility.yul\":7342:7626   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":7443:7449   */\n      dup2\n        /* \"#utility.yul\":7437:7450   */\n      mload\n        /* \"#utility.yul\":7470:7533   */\n      tag_405\n        /* \"#utility.yul\":7529:7532   */\n      dup9\n        /* \"#utility.yul\":7514:7527   */\n      dup3\n        /* \"#utility.yul\":7470:7533   */\n      tag_310\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7463:7533   */\n      swap8\n      pop\n        /* \"#utility.yul\":7556:7616   */\n      tag_406\n        /* \"#utility.yul\":7609:7615   */\n      dup4\n        /* \"#utility.yul\":7556:7616   */\n      tag_311\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":7546:7616   */\n      swap3\n      pop\n        /* \"#utility.yul\":7402:7626   */\n      pop\n        /* \"#utility.yul\":7389:7390   */\n      0x01\n        /* \"#utility.yul\":7386:7387   */\n      dup2\n        /* \"#utility.yul\":7382:7391   */\n      add\n        /* \"#utility.yul\":7377:7391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7342:7626   */\n      jump(tag_402)\n    tag_404:\n        /* \"#utility.yul\":7346:7360   */\n      pop\n        /* \"#utility.yul\":7642:7645   */\n      dup6\n        /* \"#utility.yul\":7635:7645   */\n      swap4\n      pop\n        /* \"#utility.yul\":7043:7651   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6919:7651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7657:8872   */\n    tag_63:\n        /* \"#utility.yul\":8006:8010   */\n      0x00\n        /* \"#utility.yul\":8044:8047   */\n      0xe0\n        /* \"#utility.yul\":8033:8042   */\n      dup3\n        /* \"#utility.yul\":8029:8048   */\n      add\n        /* \"#utility.yul\":8021:8048   */\n      swap1\n      pop\n        /* \"#utility.yul\":8058:8127   */\n      tag_408\n        /* \"#utility.yul\":8124:8125   */\n      0x00\n        /* \"#utility.yul\":8113:8122   */\n      dup4\n        /* \"#utility.yul\":8109:8126   */\n      add\n        /* \"#utility.yul\":8100:8106   */\n      dup11\n        /* \"#utility.yul\":8058:8127   */\n      tag_304\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8174:8183   */\n      dup2\n        /* \"#utility.yul\":8168:8172   */\n      dup2\n        /* \"#utility.yul\":8164:8184   */\n      sub\n        /* \"#utility.yul\":8159:8161   */\n      0x20\n        /* \"#utility.yul\":8148:8157   */\n      dup4\n        /* \"#utility.yul\":8144:8162   */\n      add\n        /* \"#utility.yul\":8137:8185   */\n      mstore\n        /* \"#utility.yul\":8202:8280   */\n      tag_409\n        /* \"#utility.yul\":8275:8279   */\n      dup2\n        /* \"#utility.yul\":8266:8272   */\n      dup10\n        /* \"#utility.yul\":8202:8280   */\n      tag_285\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8194:8280   */\n      swap1\n      pop\n        /* \"#utility.yul\":8327:8336   */\n      dup2\n        /* \"#utility.yul\":8321:8325   */\n      dup2\n        /* \"#utility.yul\":8317:8337   */\n      sub\n        /* \"#utility.yul\":8312:8314   */\n      0x40\n        /* \"#utility.yul\":8301:8310   */\n      dup4\n        /* \"#utility.yul\":8297:8315   */\n      add\n        /* \"#utility.yul\":8290:8338   */\n      mstore\n        /* \"#utility.yul\":8355:8433   */\n      tag_410\n        /* \"#utility.yul\":8428:8432   */\n      dup2\n        /* \"#utility.yul\":8419:8425   */\n      dup9\n        /* \"#utility.yul\":8355:8433   */\n      tag_285\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8347:8433   */\n      swap1\n      pop\n        /* \"#utility.yul\":8443:8515   */\n      tag_411\n        /* \"#utility.yul\":8511:8513   */\n      0x60\n        /* \"#utility.yul\":8500:8509   */\n      dup4\n        /* \"#utility.yul\":8496:8514   */\n      add\n        /* \"#utility.yul\":8487:8493   */\n      dup8\n        /* \"#utility.yul\":8443:8515   */\n      tag_298\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8525:8598   */\n      tag_412\n        /* \"#utility.yul\":8593:8596   */\n      0x80\n        /* \"#utility.yul\":8582:8591   */\n      dup4\n        /* \"#utility.yul\":8578:8597   */\n      add\n        /* \"#utility.yul\":8569:8575   */\n      dup7\n        /* \"#utility.yul\":8525:8598   */\n      tag_305\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8608:8681   */\n      tag_413\n        /* \"#utility.yul\":8676:8679   */\n      0xa0\n        /* \"#utility.yul\":8665:8674   */\n      dup4\n        /* \"#utility.yul\":8661:8680   */\n      add\n        /* \"#utility.yul\":8652:8658   */\n      dup6\n        /* \"#utility.yul\":8608:8681   */\n      tag_302\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8729:8738   */\n      dup2\n        /* \"#utility.yul\":8723:8727   */\n      dup2\n        /* \"#utility.yul\":8719:8739   */\n      sub\n        /* \"#utility.yul\":8713:8716   */\n      0xc0\n        /* \"#utility.yul\":8702:8711   */\n      dup4\n        /* \"#utility.yul\":8698:8717   */\n      add\n        /* \"#utility.yul\":8691:8740   */\n      mstore\n        /* \"#utility.yul\":8757:8865   */\n      tag_414\n        /* \"#utility.yul\":8860:8864   */\n      dup2\n        /* \"#utility.yul\":8851:8857   */\n      dup5\n        /* \"#utility.yul\":8757:8865   */\n      tag_312\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8749:8865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:8872   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8878:9100   */\n    tag_67:\n        /* \"#utility.yul\":8971:8975   */\n      0x00\n        /* \"#utility.yul\":9009:9011   */\n      0x20\n        /* \"#utility.yul\":8998:9007   */\n      dup3\n        /* \"#utility.yul\":8994:9012   */\n      add\n        /* \"#utility.yul\":8986:9012   */\n      swap1\n      pop\n        /* \"#utility.yul\":9022:9093   */\n      tag_416\n        /* \"#utility.yul\":9090:9091   */\n      0x00\n        /* \"#utility.yul\":9079:9088   */\n      dup4\n        /* \"#utility.yul\":9075:9092   */\n      add\n        /* \"#utility.yul\":9066:9072   */\n      dup5\n        /* \"#utility.yul\":9022:9093   */\n      tag_305\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8878:9100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9106:9224   */\n    tag_313:\n        /* \"#utility.yul\":9177:9199   */\n      tag_418\n        /* \"#utility.yul\":9193:9198   */\n      dup2\n        /* \"#utility.yul\":9177:9199   */\n      tag_299\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9170:9175   */\n      dup2\n        /* \"#utility.yul\":9167:9200   */\n      eq\n        /* \"#utility.yul\":9157:9218   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":9214:9215   */\n      0x00\n        /* \"#utility.yul\":9211:9212   */\n      dup1\n        /* \"#utility.yul\":9204:9216   */\n      revert\n        /* \"#utility.yul\":9157:9218   */\n    tag_419:\n        /* \"#utility.yul\":9106:9224   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9230:9365   */\n    tag_314:\n        /* \"#utility.yul\":9274:9279   */\n      0x00\n        /* \"#utility.yul\":9312:9318   */\n      dup2\n        /* \"#utility.yul\":9299:9319   */\n      calldataload\n        /* \"#utility.yul\":9290:9319   */\n      swap1\n      pop\n        /* \"#utility.yul\":9328:9359   */\n      tag_421\n        /* \"#utility.yul\":9353:9358   */\n      dup2\n        /* \"#utility.yul\":9328:9359   */\n      tag_313\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9230:9365   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9371:9493   */\n    tag_315:\n        /* \"#utility.yul\":9444:9468   */\n      tag_423\n        /* \"#utility.yul\":9462:9467   */\n      dup2\n        /* \"#utility.yul\":9444:9468   */\n      tag_301\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9437:9442   */\n      dup2\n        /* \"#utility.yul\":9434:9469   */\n      eq\n        /* \"#utility.yul\":9424:9487   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":9483:9484   */\n      0x00\n        /* \"#utility.yul\":9480:9481   */\n      dup1\n        /* \"#utility.yul\":9473:9485   */\n      revert\n        /* \"#utility.yul\":9424:9487   */\n    tag_424:\n        /* \"#utility.yul\":9371:9493   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9499:9638   */\n    tag_316:\n        /* \"#utility.yul\":9545:9550   */\n      0x00\n        /* \"#utility.yul\":9583:9589   */\n      dup2\n        /* \"#utility.yul\":9570:9590   */\n      calldataload\n        /* \"#utility.yul\":9561:9590   */\n      swap1\n      pop\n        /* \"#utility.yul\":9599:9632   */\n      tag_426\n        /* \"#utility.yul\":9626:9631   */\n      dup2\n        /* \"#utility.yul\":9599:9632   */\n      tag_315\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9499:9638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9644:10843   */\n    tag_77:\n        /* \"#utility.yul\":9755:9761   */\n      0x00\n        /* \"#utility.yul\":9763:9769   */\n      dup1\n        /* \"#utility.yul\":9771:9777   */\n      0x00\n        /* \"#utility.yul\":9779:9785   */\n      dup1\n        /* \"#utility.yul\":9787:9793   */\n      0x00\n        /* \"#utility.yul\":9795:9801   */\n      dup1\n        /* \"#utility.yul\":9803:9809   */\n      0x00\n        /* \"#utility.yul\":9852:9855   */\n      0xe0\n        /* \"#utility.yul\":9840:9849   */\n      dup9\n        /* \"#utility.yul\":9831:9838   */\n      dup11\n        /* \"#utility.yul\":9827:9850   */\n      sub\n        /* \"#utility.yul\":9823:9856   */\n      slt\n        /* \"#utility.yul\":9820:9940   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":9859:9938   */\n      tag_429\n      tag_287\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9820:9940   */\n    tag_428:\n        /* \"#utility.yul\":9979:9980   */\n      0x00\n        /* \"#utility.yul\":10004:10057   */\n      tag_430\n        /* \"#utility.yul\":10049:10056   */\n      dup11\n        /* \"#utility.yul\":10040:10046   */\n      dup3\n        /* \"#utility.yul\":10029:10038   */\n      dup12\n        /* \"#utility.yul\":10025:10047   */\n      add\n        /* \"#utility.yul\":10004:10057   */\n      tag_292\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":9994:10057   */\n      swap8\n      pop\n        /* \"#utility.yul\":9950:10067   */\n      pop\n        /* \"#utility.yul\":10106:10108   */\n      0x20\n        /* \"#utility.yul\":10132:10185   */\n      tag_431\n        /* \"#utility.yul\":10177:10184   */\n      dup11\n        /* \"#utility.yul\":10168:10174   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      dup12\n        /* \"#utility.yul\":10153:10175   */\n      add\n        /* \"#utility.yul\":10132:10185   */\n      tag_292\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10122:10185   */\n      swap7\n      pop\n        /* \"#utility.yul\":10077:10195   */\n      pop\n        /* \"#utility.yul\":10234:10236   */\n      0x40\n        /* \"#utility.yul\":10260:10313   */\n      tag_432\n        /* \"#utility.yul\":10305:10312   */\n      dup11\n        /* \"#utility.yul\":10296:10302   */\n      dup3\n        /* \"#utility.yul\":10285:10294   */\n      dup12\n        /* \"#utility.yul\":10281:10303   */\n      add\n        /* \"#utility.yul\":10260:10313   */\n      tag_295\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10250:10313   */\n      swap6\n      pop\n        /* \"#utility.yul\":10205:10323   */\n      pop\n        /* \"#utility.yul\":10362:10364   */\n      0x60\n        /* \"#utility.yul\":10388:10441   */\n      tag_433\n        /* \"#utility.yul\":10433:10440   */\n      dup11\n        /* \"#utility.yul\":10424:10430   */\n      dup3\n        /* \"#utility.yul\":10413:10422   */\n      dup12\n        /* \"#utility.yul\":10409:10431   */\n      add\n        /* \"#utility.yul\":10388:10441   */\n      tag_295\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10378:10441   */\n      swap5\n      pop\n        /* \"#utility.yul\":10333:10451   */\n      pop\n        /* \"#utility.yul\":10490:10493   */\n      0x80\n        /* \"#utility.yul\":10517:10568   */\n      tag_434\n        /* \"#utility.yul\":10560:10567   */\n      dup11\n        /* \"#utility.yul\":10551:10557   */\n      dup3\n        /* \"#utility.yul\":10540:10549   */\n      dup12\n        /* \"#utility.yul\":10536:10558   */\n      add\n        /* \"#utility.yul\":10517:10568   */\n      tag_314\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10507:10568   */\n      swap4\n      pop\n        /* \"#utility.yul\":10461:10578   */\n      pop\n        /* \"#utility.yul\":10617:10620   */\n      0xa0\n        /* \"#utility.yul\":10644:10697   */\n      tag_435\n        /* \"#utility.yul\":10689:10696   */\n      dup11\n        /* \"#utility.yul\":10680:10686   */\n      dup3\n        /* \"#utility.yul\":10669:10678   */\n      dup12\n        /* \"#utility.yul\":10665:10687   */\n      add\n        /* \"#utility.yul\":10644:10697   */\n      tag_316\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10634:10697   */\n      swap3\n      pop\n        /* \"#utility.yul\":10588:10707   */\n      pop\n        /* \"#utility.yul\":10746:10749   */\n      0xc0\n        /* \"#utility.yul\":10773:10826   */\n      tag_436\n        /* \"#utility.yul\":10818:10825   */\n      dup11\n        /* \"#utility.yul\":10809:10815   */\n      dup3\n        /* \"#utility.yul\":10798:10807   */\n      dup12\n        /* \"#utility.yul\":10794:10816   */\n      add\n        /* \"#utility.yul\":10773:10826   */\n      tag_316\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10763:10826   */\n      swap2\n      pop\n        /* \"#utility.yul\":10717:10836   */\n      pop\n        /* \"#utility.yul\":9644:10843   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10849:11323   */\n    tag_81:\n        /* \"#utility.yul\":10917:10923   */\n      0x00\n        /* \"#utility.yul\":10925:10931   */\n      dup1\n        /* \"#utility.yul\":10974:10976   */\n      0x40\n        /* \"#utility.yul\":10962:10971   */\n      dup4\n        /* \"#utility.yul\":10953:10960   */\n      dup6\n        /* \"#utility.yul\":10949:10972   */\n      sub\n        /* \"#utility.yul\":10945:10977   */\n      slt\n        /* \"#utility.yul\":10942:11061   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":10980:11059   */\n      tag_439\n      tag_287\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10942:11061   */\n    tag_438:\n        /* \"#utility.yul\":11100:11101   */\n      0x00\n        /* \"#utility.yul\":11125:11178   */\n      tag_440\n        /* \"#utility.yul\":11170:11177   */\n      dup6\n        /* \"#utility.yul\":11161:11167   */\n      dup3\n        /* \"#utility.yul\":11150:11159   */\n      dup7\n        /* \"#utility.yul\":11146:11168   */\n      add\n        /* \"#utility.yul\":11125:11178   */\n      tag_292\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":11115:11178   */\n      swap3\n      pop\n        /* \"#utility.yul\":11071:11188   */\n      pop\n        /* \"#utility.yul\":11227:11229   */\n      0x20\n        /* \"#utility.yul\":11253:11306   */\n      tag_441\n        /* \"#utility.yul\":11298:11305   */\n      dup6\n        /* \"#utility.yul\":11289:11295   */\n      dup3\n        /* \"#utility.yul\":11278:11287   */\n      dup7\n        /* \"#utility.yul\":11274:11296   */\n      add\n        /* \"#utility.yul\":11253:11306   */\n      tag_292\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11243:11306   */\n      swap2\n      pop\n        /* \"#utility.yul\":11198:11316   */\n      pop\n        /* \"#utility.yul\":10849:11323   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11329:11509   */\n    tag_317:\n        /* \"#utility.yul\":11377:11454   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11374:11375   */\n      0x00\n        /* \"#utility.yul\":11367:11455   */\n      mstore\n        /* \"#utility.yul\":11474:11478   */\n      0x22\n        /* \"#utility.yul\":11471:11472   */\n      0x04\n        /* \"#utility.yul\":11464:11479   */\n      mstore\n        /* \"#utility.yul\":11498:11502   */\n      0x24\n        /* \"#utility.yul\":11495:11496   */\n      0x00\n        /* \"#utility.yul\":11488:11503   */\n      revert\n        /* \"#utility.yul\":11515:11835   */\n    tag_89:\n        /* \"#utility.yul\":11559:11565   */\n      0x00\n        /* \"#utility.yul\":11596:11597   */\n      0x02\n        /* \"#utility.yul\":11590:11594   */\n      dup3\n        /* \"#utility.yul\":11586:11598   */\n      div\n        /* \"#utility.yul\":11576:11598   */\n      swap1\n      pop\n        /* \"#utility.yul\":11643:11644   */\n      0x01\n        /* \"#utility.yul\":11637:11641   */\n      dup3\n        /* \"#utility.yul\":11633:11645   */\n      and\n        /* \"#utility.yul\":11664:11682   */\n      dup1\n        /* \"#utility.yul\":11654:11735   */\n      tag_444\n      jumpi\n        /* \"#utility.yul\":11720:11724   */\n      0x7f\n        /* \"#utility.yul\":11712:11718   */\n      dup3\n        /* \"#utility.yul\":11708:11725   */\n      and\n        /* \"#utility.yul\":11698:11725   */\n      swap2\n      pop\n        /* \"#utility.yul\":11654:11735   */\n    tag_444:\n        /* \"#utility.yul\":11782:11784   */\n      0x20\n        /* \"#utility.yul\":11774:11780   */\n      dup3\n        /* \"#utility.yul\":11771:11785   */\n      lt\n        /* \"#utility.yul\":11751:11769   */\n      dup2\n        /* \"#utility.yul\":11748:11786   */\n      sub\n        /* \"#utility.yul\":11745:11829   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":11801:11819   */\n      tag_446\n      tag_317\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11745:11829   */\n    tag_445:\n        /* \"#utility.yul\":11566:11835   */\n      pop\n        /* \"#utility.yul\":11515:11835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11841:12021   */\n    tag_127:\n        /* \"#utility.yul\":11889:11966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11886:11887   */\n      0x00\n        /* \"#utility.yul\":11879:11967   */\n      mstore\n        /* \"#utility.yul\":11986:11990   */\n      0x41\n        /* \"#utility.yul\":11983:11984   */\n      0x04\n        /* \"#utility.yul\":11976:11991   */\n      mstore\n        /* \"#utility.yul\":12010:12014   */\n      0x24\n        /* \"#utility.yul\":12007:12008   */\n      0x00\n        /* \"#utility.yul\":12000:12015   */\n      revert\n        /* \"#utility.yul\":12027:12802   */\n    tag_145:\n        /* \"#utility.yul\":12260:12264   */\n      0x00\n        /* \"#utility.yul\":12298:12301   */\n      0xc0\n        /* \"#utility.yul\":12287:12296   */\n      dup3\n        /* \"#utility.yul\":12283:12302   */\n      add\n        /* \"#utility.yul\":12275:12302   */\n      swap1\n      pop\n        /* \"#utility.yul\":12312:12383   */\n      tag_449\n        /* \"#utility.yul\":12380:12381   */\n      0x00\n        /* \"#utility.yul\":12369:12378   */\n      dup4\n        /* \"#utility.yul\":12365:12382   */\n      add\n        /* \"#utility.yul\":12356:12362   */\n      dup10\n        /* \"#utility.yul\":12312:12383   */\n      tag_302\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":12393:12465   */\n      tag_450\n        /* \"#utility.yul\":12461:12463   */\n      0x20\n        /* \"#utility.yul\":12450:12459   */\n      dup4\n        /* \"#utility.yul\":12446:12464   */\n      add\n        /* \"#utility.yul\":12437:12443   */\n      dup9\n        /* \"#utility.yul\":12393:12465   */\n      tag_305\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":12475:12547   */\n      tag_451\n        /* \"#utility.yul\":12543:12545   */\n      0x40\n        /* \"#utility.yul\":12532:12541   */\n      dup4\n        /* \"#utility.yul\":12528:12546   */\n      add\n        /* \"#utility.yul\":12519:12525   */\n      dup8\n        /* \"#utility.yul\":12475:12547   */\n      tag_305\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12557:12629   */\n      tag_452\n        /* \"#utility.yul\":12625:12627   */\n      0x60\n        /* \"#utility.yul\":12614:12623   */\n      dup4\n        /* \"#utility.yul\":12610:12628   */\n      add\n        /* \"#utility.yul\":12601:12607   */\n      dup7\n        /* \"#utility.yul\":12557:12629   */\n      tag_298\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12639:12712   */\n      tag_453\n        /* \"#utility.yul\":12707:12710   */\n      0x80\n        /* \"#utility.yul\":12696:12705   */\n      dup4\n        /* \"#utility.yul\":12692:12711   */\n      add\n        /* \"#utility.yul\":12683:12689   */\n      dup6\n        /* \"#utility.yul\":12639:12712   */\n      tag_298\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12722:12795   */\n      tag_454\n        /* \"#utility.yul\":12790:12793   */\n      0xa0\n        /* \"#utility.yul\":12779:12788   */\n      dup4\n        /* \"#utility.yul\":12775:12794   */\n      add\n        /* \"#utility.yul\":12766:12772   */\n      dup5\n        /* \"#utility.yul\":12722:12795   */\n      tag_298\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12027:12802   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12808:13140   */\n    tag_152:\n        /* \"#utility.yul\":12929:12933   */\n      0x00\n        /* \"#utility.yul\":12967:12969   */\n      0x40\n        /* \"#utility.yul\":12956:12965   */\n      dup3\n        /* \"#utility.yul\":12952:12970   */\n      add\n        /* \"#utility.yul\":12944:12970   */\n      swap1\n      pop\n        /* \"#utility.yul\":12980:13051   */\n      tag_456\n        /* \"#utility.yul\":13048:13049   */\n      0x00\n        /* \"#utility.yul\":13037:13046   */\n      dup4\n        /* \"#utility.yul\":13033:13050   */\n      add\n        /* \"#utility.yul\":13024:13030   */\n      dup6\n        /* \"#utility.yul\":12980:13051   */\n      tag_305\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":13061:13133   */\n      tag_457\n        /* \"#utility.yul\":13129:13131   */\n      0x20\n        /* \"#utility.yul\":13118:13127   */\n      dup4\n        /* \"#utility.yul\":13114:13132   */\n      add\n        /* \"#utility.yul\":13105:13111   */\n      dup5\n        /* \"#utility.yul\":13061:13133   */\n      tag_305\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12808:13140   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13146:13588   */\n    tag_170:\n        /* \"#utility.yul\":13295:13299   */\n      0x00\n        /* \"#utility.yul\":13333:13335   */\n      0x60\n        /* \"#utility.yul\":13322:13331   */\n      dup3\n        /* \"#utility.yul\":13318:13336   */\n      add\n        /* \"#utility.yul\":13310:13336   */\n      swap1\n      pop\n        /* \"#utility.yul\":13346:13417   */\n      tag_459\n        /* \"#utility.yul\":13414:13415   */\n      0x00\n        /* \"#utility.yul\":13403:13412   */\n      dup4\n        /* \"#utility.yul\":13399:13416   */\n      add\n        /* \"#utility.yul\":13390:13396   */\n      dup7\n        /* \"#utility.yul\":13346:13417   */\n      tag_305\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":13427:13499   */\n      tag_460\n        /* \"#utility.yul\":13495:13497   */\n      0x20\n        /* \"#utility.yul\":13484:13493   */\n      dup4\n        /* \"#utility.yul\":13480:13498   */\n      add\n        /* \"#utility.yul\":13471:13477   */\n      dup6\n        /* \"#utility.yul\":13427:13499   */\n      tag_298\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13509:13581   */\n      tag_461\n        /* \"#utility.yul\":13577:13579   */\n      0x40\n        /* \"#utility.yul\":13566:13575   */\n      dup4\n        /* \"#utility.yul\":13562:13580   */\n      add\n        /* \"#utility.yul\":13553:13559   */\n      dup5\n        /* \"#utility.yul\":13509:13581   */\n      tag_298\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13146:13588   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13594:13774   */\n    tag_318:\n        /* \"#utility.yul\":13642:13719   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13639:13640   */\n      0x00\n        /* \"#utility.yul\":13632:13720   */\n      mstore\n        /* \"#utility.yul\":13739:13743   */\n      0x11\n        /* \"#utility.yul\":13736:13737   */\n      0x04\n        /* \"#utility.yul\":13729:13744   */\n      mstore\n        /* \"#utility.yul\":13763:13767   */\n      0x24\n        /* \"#utility.yul\":13760:13761   */\n      0x00\n        /* \"#utility.yul\":13753:13768   */\n      revert\n        /* \"#utility.yul\":13780:13971   */\n    tag_218:\n        /* \"#utility.yul\":13820:13823   */\n      0x00\n        /* \"#utility.yul\":13839:13859   */\n      tag_464\n        /* \"#utility.yul\":13857:13858   */\n      dup3\n        /* \"#utility.yul\":13839:13859   */\n      tag_293\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13834:13859   */\n      swap2\n      pop\n        /* \"#utility.yul\":13873:13893   */\n      tag_465\n        /* \"#utility.yul\":13891:13892   */\n      dup4\n        /* \"#utility.yul\":13873:13893   */\n      tag_293\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13868:13893   */\n      swap3\n      pop\n        /* \"#utility.yul\":13916:13917   */\n      dup3\n        /* \"#utility.yul\":13913:13914   */\n      dup3\n        /* \"#utility.yul\":13909:13918   */\n      add\n        /* \"#utility.yul\":13902:13918   */\n      swap1\n      pop\n        /* \"#utility.yul\":13937:13940   */\n      dup1\n        /* \"#utility.yul\":13934:13935   */\n      dup3\n        /* \"#utility.yul\":13931:13941   */\n      gt\n        /* \"#utility.yul\":13928:13964   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":13944:13962   */\n      tag_467\n      tag_318\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":13928:13964   */\n    tag_466:\n        /* \"#utility.yul\":13780:13971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13977:14641   */\n    tag_227:\n        /* \"#utility.yul\":14182:14186   */\n      0x00\n        /* \"#utility.yul\":14220:14223   */\n      0xa0\n        /* \"#utility.yul\":14209:14218   */\n      dup3\n        /* \"#utility.yul\":14205:14224   */\n      add\n        /* \"#utility.yul\":14197:14224   */\n      swap1\n      pop\n        /* \"#utility.yul\":14234:14305   */\n      tag_469\n        /* \"#utility.yul\":14302:14303   */\n      0x00\n        /* \"#utility.yul\":14291:14300   */\n      dup4\n        /* \"#utility.yul\":14287:14304   */\n      add\n        /* \"#utility.yul\":14278:14284   */\n      dup9\n        /* \"#utility.yul\":14234:14305   */\n      tag_302\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":14315:14387   */\n      tag_470\n        /* \"#utility.yul\":14383:14385   */\n      0x20\n        /* \"#utility.yul\":14372:14381   */\n      dup4\n        /* \"#utility.yul\":14368:14386   */\n      add\n        /* \"#utility.yul\":14359:14365   */\n      dup8\n        /* \"#utility.yul\":14315:14387   */\n      tag_302\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":14397:14469   */\n      tag_471\n        /* \"#utility.yul\":14465:14467   */\n      0x40\n        /* \"#utility.yul\":14454:14463   */\n      dup4\n        /* \"#utility.yul\":14450:14468   */\n      add\n        /* \"#utility.yul\":14441:14447   */\n      dup7\n        /* \"#utility.yul\":14397:14469   */\n      tag_302\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":14479:14551   */\n      tag_472\n        /* \"#utility.yul\":14547:14549   */\n      0x60\n        /* \"#utility.yul\":14536:14545   */\n      dup4\n        /* \"#utility.yul\":14532:14550   */\n      add\n        /* \"#utility.yul\":14523:14529   */\n      dup6\n        /* \"#utility.yul\":14479:14551   */\n      tag_298\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14561:14634   */\n      tag_473\n        /* \"#utility.yul\":14629:14632   */\n      0x80\n        /* \"#utility.yul\":14618:14627   */\n      dup4\n        /* \"#utility.yul\":14614:14633   */\n      add\n        /* \"#utility.yul\":14605:14611   */\n      dup5\n        /* \"#utility.yul\":14561:14634   */\n      tag_305\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":13977:14641   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14647:15192   */\n    tag_242:\n        /* \"#utility.yul\":14820:14824   */\n      0x00\n        /* \"#utility.yul\":14858:14861   */\n      0x80\n        /* \"#utility.yul\":14847:14856   */\n      dup3\n        /* \"#utility.yul\":14843:14862   */\n      add\n        /* \"#utility.yul\":14835:14862   */\n      swap1\n      pop\n        /* \"#utility.yul\":14872:14943   */\n      tag_475\n        /* \"#utility.yul\":14940:14941   */\n      0x00\n        /* \"#utility.yul\":14929:14938   */\n      dup4\n        /* \"#utility.yul\":14925:14942   */\n      add\n        /* \"#utility.yul\":14916:14922   */\n      dup8\n        /* \"#utility.yul\":14872:14943   */\n      tag_302\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14953:15021   */\n      tag_476\n        /* \"#utility.yul\":15017:15019   */\n      0x20\n        /* \"#utility.yul\":15006:15015   */\n      dup4\n        /* \"#utility.yul\":15002:15020   */\n      add\n        /* \"#utility.yul\":14993:14999   */\n      dup7\n        /* \"#utility.yul\":14953:15021   */\n      tag_300\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":15031:15103   */\n      tag_477\n        /* \"#utility.yul\":15099:15101   */\n      0x40\n        /* \"#utility.yul\":15088:15097   */\n      dup4\n        /* \"#utility.yul\":15084:15102   */\n      add\n        /* \"#utility.yul\":15075:15081   */\n      dup6\n        /* \"#utility.yul\":15031:15103   */\n      tag_302\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":15113:15185   */\n      tag_478\n        /* \"#utility.yul\":15181:15183   */\n      0x60\n        /* \"#utility.yul\":15170:15179   */\n      dup4\n        /* \"#utility.yul\":15166:15184   */\n      add\n        /* \"#utility.yul\":15157:15163   */\n      dup5\n        /* \"#utility.yul\":15113:15185   */\n      tag_302\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":14647:15192   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15198:15378   */\n    tag_249:\n        /* \"#utility.yul\":15246:15323   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15243:15244   */\n      0x00\n        /* \"#utility.yul\":15236:15324   */\n      mstore\n        /* \"#utility.yul\":15343:15347   */\n      0x21\n        /* \"#utility.yul\":15340:15341   */\n      0x04\n        /* \"#utility.yul\":15333:15348   */\n      mstore\n        /* \"#utility.yul\":15367:15371   */\n      0x24\n        /* \"#utility.yul\":15364:15365   */\n      0x00\n        /* \"#utility.yul\":15357:15372   */\n      revert\n\n    auxdata: 0xa2646970667358221220a283f1fe54333757acc576d59a1dd509542392ac5d9099e8c596fe11c39397fb64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1981": {
									"entryPoint": null,
									"id": 1981,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2706": {
									"entryPoint": null,
									"id": 2706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2946": {
									"entryPoint": null,
									"id": 2946,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3447": {
									"entryPoint": null,
									"id": 3447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3586": {
									"entryPoint": null,
									"id": 3586,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2028": {
									"entryPoint": 779,
									"id": 2028,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_3249": {
									"entryPoint": 1074,
									"id": 3249,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_2802": {
									"entryPoint": 871,
									"id": 2802,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_3216": {
									"entryPoint": 1327,
									"id": 3216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_2973": {
									"entryPoint": 1066,
									"id": 2973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStringSlot_177": {
									"entryPoint": 1318,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toShortStringWithFallback_355": {
									"entryPoint": 694,
									"id": 355,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toShortString_257": {
									"entryPoint": 1212,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 3464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 3498,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_bytes_memory_ptr": {
									"entryPoint": 3771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 2176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2965,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 3301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2485,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32": {
									"entryPoint": 3808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3605,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 2194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2079,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_memoryt_bytes32": {
									"entryPoint": 3786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2221,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13897:1",
										"nodeType": "YulBlock",
										"src": "0:13897:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nativeSrc": "1261:40:1",
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nativeSrc": "1272:22:1",
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nativeSrc": "1282:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:1",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:1",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nativeSrc": "1335:152:1",
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nativeSrc": "1345:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nativeSrc": "1345:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nativeSrc": "1442:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nativeSrc": "1442:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nativeSrc": "1466:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nativeSrc": "1466:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nativeSrc": "1521:152:1",
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nativeSrc": "1531:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nativeSrc": "1531:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nativeSrc": "1628:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nativeSrc": "1628:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nativeSrc": "1652:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nativeSrc": "1730:269:1",
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nativeSrc": "1740:22:1",
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nativeSrc": "1750:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nativeSrc": "1771:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nativeSrc": "1797:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:1",
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nativeSrc": "1862:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nativeSrc": "1872:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nativeSrc": "1821:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nativeSrc": "1818:81:1",
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nativeSrc": "1951:42:1",
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nativeSrc": "1965:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nativeSrc": "1965:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nativeSrc": "1935:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nativeSrc": "1912:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nativeSrc": "1909:84:1",
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:1",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:1",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nativeSrc": "2059:87:1",
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nativeSrc": "2069:11:1",
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:1",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nativeSrc": "2090:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nativeSrc": "2090:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nativeSrc": "2113:26:1",
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nativeSrc": "2121:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:1",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:1",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nativeSrc": "2196:49:1",
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nativeSrc": "2206:33:1",
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nativeSrc": "2220:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nativeSrc": "2216:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:1",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:1",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nativeSrc": "2304:54:1",
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nativeSrc": "2314:37:1",
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nativeSrc": "2335:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:1",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:1",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:1",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nativeSrc": "2440:317:1",
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nativeSrc": "2450:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nativeSrc": "2467:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nativeSrc": "2506:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:1",
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nativeSrc": "2624:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nativeSrc": "2672:30:1",
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nativeSrc": "2692:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nativeSrc": "2681:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nativeSrc": "2711:40:1",
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nativeSrc": "2721:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:1",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:1",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:1",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:1",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nativeSrc": "2808:32:1",
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nativeSrc": "2818:16:1",
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:1",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:1",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:1",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nativeSrc": "2878:28:1",
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nativeSrc": "2888:12:1",
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:1",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:1",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:1",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nativeSrc": "2972:82:1",
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nativeSrc": "2982:66:1",
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nativeSrc": "3022:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nativeSrc": "3013:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nativeSrc": "2995:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:1",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:1",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nativeSrc": "3107:28:1",
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nativeSrc": "3117:12:1",
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:1",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:1",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:1",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nativeSrc": "3217:193:1",
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nativeSrc": "3227:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nativeSrc": "3251:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:1",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nativeSrc": "3340:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nativeSrc": "3361:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nativeSrc": "3312:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nativeSrc": "3299:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nativeSrc": "3299:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:1",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:1",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:1",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nativeSrc": "3465:24:1",
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nativeSrc": "3475:8:1",
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:1",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:1",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nativeSrc": "3548:136:1",
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nativeSrc": "3558:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nativeSrc": "3572:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nativeSrc": "3613:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nativeSrc": "3613:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:1",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nativeSrc": "3740:136:1",
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:1",
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nativeSrc": "3821:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nativeSrc": "3821:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nativeSrc": "3757:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nativeSrc": "3750:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:1",
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nativeSrc": "3774:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nativeSrc": "3783:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:1",
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:1",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:1",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nativeSrc": "3961:464:1",
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:1",
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nativeSrc": "4001:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nativeSrc": "4017:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:1",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nativeSrc": "4101:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nativeSrc": "4087:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:1",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:1",
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nativeSrc": "4269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nativeSrc": "4266:49:1",
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nativeSrc": "4384:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nativeSrc": "4370:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nativeSrc": "4328:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nativeSrc": "4328:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nativeSrc": "3975:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nativeSrc": "3972:446:1",
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:1",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:1",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:1",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nativeSrc": "4494:54:1",
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nativeSrc": "4504:37:1",
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nativeSrc": "4525:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:1",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:1",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:1",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nativeSrc": "4605:118:1",
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nativeSrc": "4615:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nativeSrc": "4660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nativeSrc": "4675:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nativeSrc": "4631:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nativeSrc": "4627:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:1",
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nativeSrc": "4702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:1",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:1",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:1",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nativeSrc": "4809:214:1",
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nativeSrc": "4942:37:1",
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nativeSrc": "4950:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nativeSrc": "4988:29:1",
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nativeSrc": "5005:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nativeSrc": "4996:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:1",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:1",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:1",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:1",
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nativeSrc": "5131:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nativeSrc": "5145:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:1",
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nativeSrc": "5269:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nativeSrc": "5269:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nativeSrc": "5236:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nativeSrc": "5233:56:1",
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nativeSrc": "5299:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nativeSrc": "5339:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nativeSrc": "5313:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nativeSrc": "5398:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nativeSrc": "5398:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nativeSrc": "5475:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:1",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:1",
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:1",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:1",
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nativeSrc": "5608:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nativeSrc": "5596:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nativeSrc": "5646:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:1",
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nativeSrc": "5803:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nativeSrc": "5797:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nativeSrc": "5782:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nativeSrc": "5782:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nativeSrc": "5841:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nativeSrc": "5851:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nativeSrc": "5895:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nativeSrc": "5727:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nativeSrc": "5719:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:1",
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nativeSrc": "5749:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:1",
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:1",
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nativeSrc": "6004:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nativeSrc": "5998:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:1",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nativeSrc": "6086:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nativeSrc": "6056:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nativeSrc": "6041:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nativeSrc": "6041:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nativeSrc": "5943:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nativeSrc": "5940:179:1",
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:1",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nativeSrc": "6149:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:1",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nativeSrc": "6145:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nativeSrc": "6132:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nativeSrc": "6132:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:1",
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:1",
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:1",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:1",
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nativeSrc": "6279:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nativeSrc": "6273:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nativeSrc": "6236:77:1",
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nativeSrc": "6339:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nativeSrc": "6326:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nativeSrc": "6326:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:1",
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nativeSrc": "5537:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nativeSrc": "5530:887:1",
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:1",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:1",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											},
											{
												"body": {
													"nativeSrc": "6809:152:1",
													"nodeType": "YulBlock",
													"src": "6809:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:1"
																},
																"nativeSrc": "6819:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:1"
															},
															"nativeSrc": "6819:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nativeSrc": "6916:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:1"
															},
															"nativeSrc": "6916:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:1"
																},
																"nativeSrc": "6940:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:1"
															},
															"nativeSrc": "6940:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:1"
											},
											{
												"body": {
													"nativeSrc": "7018:51:1",
													"nodeType": "YulBlock",
													"src": "7018:51:1",
													"statements": [
														{
															"nativeSrc": "7028:34:1",
															"nodeType": "YulAssignment",
															"src": "7028:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7053:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7056:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7049:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:1"
																},
																"nativeSrc": "7049:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7049:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7028:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7028:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6967:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6999:5:1",
														"nodeType": "YulTypedName",
														"src": "6999:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7009:8:1",
														"nodeType": "YulTypedName",
														"src": "7009:8:1",
														"type": ""
													}
												],
												"src": "6967:102:1"
											},
											{
												"body": {
													"nativeSrc": "7148:775:1",
													"nodeType": "YulBlock",
													"src": "7148:775:1",
													"statements": [
														{
															"nativeSrc": "7158:15:1",
															"nodeType": "YulAssignment",
															"src": "7158:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "7167:6:1",
																"nodeType": "YulIdentifier",
																"src": "7167:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7158:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:1"
																}
															]
														},
														{
															"nativeSrc": "7182:14:1",
															"nodeType": "YulAssignment",
															"src": "7182:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "7191:5:1",
																"nodeType": "YulIdentifier",
																"src": "7191:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7182:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7240:677:1",
																"nodeType": "YulBlock",
																"src": "7240:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7328:22:1",
																			"nodeType": "YulBlock",
																			"src": "7328:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7330:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "7330:16:1"
																						},
																						"nativeSrc": "7330:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7330:18:1"
																					},
																					"nativeSrc": "7330:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "7330:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7306:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7306:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7316:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7316:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7321:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "7321:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7312:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:1"
																					},
																					"nativeSrc": "7312:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7312:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7303:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "7303:2:1"
																			},
																			"nativeSrc": "7303:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:24:1"
																		},
																		"nativeSrc": "7300:50:1",
																		"nodeType": "YulIf",
																		"src": "7300:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "7395:419:1",
																			"nodeType": "YulBlock",
																			"src": "7395:419:1",
																			"statements": [
																				{
																					"nativeSrc": "7775:25:1",
																					"nodeType": "YulAssignment",
																					"src": "7775:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7788:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "7788:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7795:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "7795:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7784:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7784:3:1"
																						},
																						"nativeSrc": "7784:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7784:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7775:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "7775:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7370:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7370:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7380:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7380:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7366:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:1"
																			},
																			"nativeSrc": "7366:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7366:16:1"
																		},
																		"nativeSrc": "7363:451:1",
																		"nodeType": "YulIf",
																		"src": "7363:451:1"
																	},
																	{
																		"nativeSrc": "7827:23:1",
																		"nodeType": "YulAssignment",
																		"src": "7827:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7839:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7839:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7845:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7845:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7835:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7835:3:1"
																			},
																			"nativeSrc": "7835:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7835:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7827:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7827:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7863:44:1",
																		"nodeType": "YulAssignment",
																		"src": "7863:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7898:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7898:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7875:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "7875:22:1"
																			},
																			"nativeSrc": "7875:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7875:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7863:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "7863:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7216:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7216:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7226:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7213:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7213:2:1"
																},
																"nativeSrc": "7213:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7213:15:1"
															},
															"nativeSrc": "7205:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7229:2:1",
																"nodeType": "YulBlock",
																"src": "7229:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7209:3:1",
																"nodeType": "YulBlock",
																"src": "7209:3:1",
																"statements": []
															},
															"src": "7205:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7075:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7103:6:1",
														"nodeType": "YulTypedName",
														"src": "7103:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7111:5:1",
														"nodeType": "YulTypedName",
														"src": "7111:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7118:8:1",
														"nodeType": "YulTypedName",
														"src": "7118:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7128:3:1",
														"nodeType": "YulTypedName",
														"src": "7128:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7136:5:1",
														"nodeType": "YulTypedName",
														"src": "7136:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7143:4:1",
														"nodeType": "YulTypedName",
														"src": "7143:4:1",
														"type": ""
													}
												],
												"src": "7075:848:1"
											},
											{
												"body": {
													"nativeSrc": "7989:1013:1",
													"nodeType": "YulBlock",
													"src": "7989:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8184:20:1",
																"nodeType": "YulBlock",
																"src": "8184:20:1",
																"statements": [
																	{
																		"nativeSrc": "8186:10:1",
																		"nodeType": "YulAssignment",
																		"src": "8186:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8195:1:1",
																			"nodeType": "YulLiteral",
																			"src": "8195:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8186:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8197:5:1",
																		"nodeType": "YulLeave",
																		"src": "8197:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8174:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8174:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8167:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:1"
																},
																"nativeSrc": "8167:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8167:16:1"
															},
															"nativeSrc": "8164:40:1",
															"nodeType": "YulIf",
															"src": "8164:40:1"
														},
														{
															"body": {
																"nativeSrc": "8229:20:1",
																"nodeType": "YulBlock",
																"src": "8229:20:1",
																"statements": [
																	{
																		"nativeSrc": "8231:10:1",
																		"nodeType": "YulAssignment",
																		"src": "8231:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8240:1:1",
																			"nodeType": "YulLiteral",
																			"src": "8240:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8231:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8231:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8242:5:1",
																		"nodeType": "YulLeave",
																		"src": "8242:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8223:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8223:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8216:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:1"
																},
																"nativeSrc": "8216:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8216:12:1"
															},
															"nativeSrc": "8213:36:1",
															"nodeType": "YulIf",
															"src": "8213:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8359:20:1",
																		"nodeType": "YulBlock",
																		"src": "8359:20:1",
																		"statements": [
																			{
																				"nativeSrc": "8361:10:1",
																				"nodeType": "YulAssignment",
																				"src": "8361:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8361:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8372:5:1",
																				"nodeType": "YulLeave",
																				"src": "8372:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8352:27:1",
																	"nodeType": "YulCase",
																	"src": "8352:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8357:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8403:176:1",
																		"nodeType": "YulBlock",
																		"src": "8403:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8438:22:1",
																					"nodeType": "YulBlock",
																					"src": "8438:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8440:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8440:16:1"
																								},
																								"nativeSrc": "8440:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8440:18:1"
																							},
																							"nativeSrc": "8440:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8440:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8423:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8423:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8433:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8433:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8420:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:1"
																					},
																					"nativeSrc": "8420:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8420:17:1"
																				},
																				"nativeSrc": "8417:43:1",
																				"nodeType": "YulIf",
																				"src": "8417:43:1"
																			},
																			{
																				"nativeSrc": "8473:25:1",
																				"nodeType": "YulAssignment",
																				"src": "8473:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8486:1:1",
																							"nodeType": "YulLiteral",
																							"src": "8486:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8489:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8489:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8482:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8482:3:1"
																					},
																					"nativeSrc": "8482:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8482:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8473:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8473:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8529:22:1",
																					"nodeType": "YulBlock",
																					"src": "8529:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8531:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8531:16:1"
																								},
																								"nativeSrc": "8531:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8531:18:1"
																							},
																							"nativeSrc": "8531:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8531:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8517:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "8517:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8524:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8524:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8514:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8514:2:1"
																					},
																					"nativeSrc": "8514:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8514:14:1"
																				},
																				"nativeSrc": "8511:40:1",
																				"nodeType": "YulIf",
																				"src": "8511:40:1"
																			},
																			{
																				"nativeSrc": "8564:5:1",
																				"nodeType": "YulLeave",
																				"src": "8564:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8388:191:1",
																	"nodeType": "YulCase",
																	"src": "8388:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8393:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8309:4:1",
																"nodeType": "YulIdentifier",
																"src": "8309:4:1"
															},
															"nativeSrc": "8302:277:1",
															"nodeType": "YulSwitch",
															"src": "8302:277:1"
														},
														{
															"body": {
																"nativeSrc": "8711:123:1",
																"nodeType": "YulBlock",
																"src": "8711:123:1",
																"statements": [
																	{
																		"nativeSrc": "8725:28:1",
																		"nodeType": "YulAssignment",
																		"src": "8725:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8738:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "8738:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8744:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "8744:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8734:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8734:3:1"
																			},
																			"nativeSrc": "8734:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8734:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8725:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8725:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8784:22:1",
																			"nodeType": "YulBlock",
																			"src": "8784:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8786:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "8786:16:1"
																						},
																						"nativeSrc": "8786:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8786:18:1"
																					},
																					"nativeSrc": "8786:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "8786:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8772:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8772:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8779:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8779:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8769:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8769:2:1"
																			},
																			"nativeSrc": "8769:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8769:14:1"
																		},
																		"nativeSrc": "8766:40:1",
																		"nodeType": "YulIf",
																		"src": "8766:40:1"
																	},
																	{
																		"nativeSrc": "8819:5:1",
																		"nodeType": "YulLeave",
																		"src": "8819:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8614:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8614:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8620:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8620:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8611:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8611:2:1"
																				},
																				"nativeSrc": "8611:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8611:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8628:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8628:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8638:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8638:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8625:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8625:2:1"
																				},
																				"nativeSrc": "8625:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8625:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:1"
																		},
																		"nativeSrc": "8607:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8607:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8663:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8663:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8669:3:1",
																						"nodeType": "YulLiteral",
																						"src": "8669:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8660:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8660:2:1"
																				},
																				"nativeSrc": "8660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8678:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8678:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8688:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8688:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8675:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:1"
																				},
																				"nativeSrc": "8675:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8675:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8656:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:1"
																		},
																		"nativeSrc": "8656:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8591:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:1"
																},
																"nativeSrc": "8591:111:1",
																"nodeType": "YulFunctionCall",
																"src": "8591:111:1"
															},
															"nativeSrc": "8588:246:1",
															"nodeType": "YulIf",
															"src": "8588:246:1"
														},
														{
															"nativeSrc": "8844:57:1",
															"nodeType": "YulAssignment",
															"src": "8844:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8878:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8881:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8881:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8887:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8887:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8897:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8859:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "8859:18:1"
																},
																"nativeSrc": "8859:42:1",
																"nodeType": "YulFunctionCall",
																"src": "8859:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8844:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "8851:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8940:22:1",
																"nodeType": "YulBlock",
																"src": "8940:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8942:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8942:16:1"
																			},
																			"nativeSrc": "8942:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8942:18:1"
																		},
																		"nativeSrc": "8942:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8917:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8928:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8928:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8933:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:1"
																		},
																		"nativeSrc": "8924:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8924:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8914:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8914:2:1"
																},
																"nativeSrc": "8914:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8914:25:1"
															},
															"nativeSrc": "8911:51:1",
															"nodeType": "YulIf",
															"src": "8911:51:1"
														},
														{
															"nativeSrc": "8971:25:1",
															"nodeType": "YulAssignment",
															"src": "8971:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8984:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8984:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8991:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8991:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8980:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:1"
																},
																"nativeSrc": "8980:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8980:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8971:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8971:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7929:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7959:4:1",
														"nodeType": "YulTypedName",
														"src": "7959:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7965:8:1",
														"nodeType": "YulTypedName",
														"src": "7965:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7975:3:1",
														"nodeType": "YulTypedName",
														"src": "7975:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7983:5:1",
														"nodeType": "YulTypedName",
														"src": "7983:5:1",
														"type": ""
													}
												],
												"src": "7929:1073:1"
											},
											{
												"body": {
													"nativeSrc": "9051:43:1",
													"nodeType": "YulBlock",
													"src": "9051:43:1",
													"statements": [
														{
															"nativeSrc": "9061:27:1",
															"nodeType": "YulAssignment",
															"src": "9061:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9076:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9072:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:1"
																},
																"nativeSrc": "9072:16:1",
																"nodeType": "YulFunctionCall",
																"src": "9072:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9061:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9061:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9008:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9033:5:1",
														"nodeType": "YulTypedName",
														"src": "9033:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9043:7:1",
														"nodeType": "YulTypedName",
														"src": "9043:7:1",
														"type": ""
													}
												],
												"src": "9008:86:1"
											},
											{
												"body": {
													"nativeSrc": "9164:217:1",
													"nodeType": "YulBlock",
													"src": "9164:217:1",
													"statements": [
														{
															"nativeSrc": "9174:31:1",
															"nodeType": "YulAssignment",
															"src": "9174:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9200:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9200:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9182:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:1"
																},
																"nativeSrc": "9182:23:1",
																"nodeType": "YulFunctionCall",
																"src": "9182:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9174:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:1"
																}
															]
														},
														{
															"nativeSrc": "9214:37:1",
															"nodeType": "YulAssignment",
															"src": "9214:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9242:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9226:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "9226:15:1"
																},
																"nativeSrc": "9226:25:1",
																"nodeType": "YulFunctionCall",
																"src": "9226:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9214:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "9214:8:1"
																}
															]
														},
														{
															"nativeSrc": "9261:113:1",
															"nodeType": "YulAssignment",
															"src": "9261:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9291:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9297:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9297:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9307:66:1",
																		"nodeType": "YulLiteral",
																		"src": "9307:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9270:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "9270:20:1"
																},
																"nativeSrc": "9270:104:1",
																"nodeType": "YulFunctionCall",
																"src": "9270:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9261:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9100:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9139:4:1",
														"nodeType": "YulTypedName",
														"src": "9139:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9145:8:1",
														"nodeType": "YulTypedName",
														"src": "9145:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9158:5:1",
														"nodeType": "YulTypedName",
														"src": "9158:5:1",
														"type": ""
													}
												],
												"src": "9100:281:1"
											},
											{
												"body": {
													"nativeSrc": "9435:362:1",
													"nodeType": "YulBlock",
													"src": "9435:362:1",
													"statements": [
														{
															"nativeSrc": "9445:25:1",
															"nodeType": "YulAssignment",
															"src": "9445:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9468:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9450:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9450:17:1"
																},
																"nativeSrc": "9450:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9450:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9445:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9445:1:1"
																}
															]
														},
														{
															"nativeSrc": "9479:25:1",
															"nodeType": "YulAssignment",
															"src": "9479:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9502:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9484:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9484:17:1"
																},
																"nativeSrc": "9484:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9484:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9479:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9479:1:1"
																}
															]
														},
														{
															"nativeSrc": "9513:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9513:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9536:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9539:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9532:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:1"
																},
																"nativeSrc": "9532:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9532:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9517:11:1",
																	"nodeType": "YulTypedName",
																	"src": "9517:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9550:41:1",
															"nodeType": "YulAssignment",
															"src": "9550:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9579:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "9579:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9561:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:1"
																},
																"nativeSrc": "9561:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9561:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9550:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9550:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9768:22:1",
																"nodeType": "YulBlock",
																"src": "9768:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9770:16:1"
																			},
																			"nativeSrc": "9770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9770:18:1"
																		},
																		"nativeSrc": "9770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9701:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9701:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9694:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "9694:6:1"
																				},
																				"nativeSrc": "9694:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9694:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9724:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9724:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9731:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "9731:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9740:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "9740:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9727:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9727:3:1"
																						},
																						"nativeSrc": "9727:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9727:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9721:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "9721:2:1"
																				},
																				"nativeSrc": "9721:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9721:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9674:2:1"
																		},
																		"nativeSrc": "9674:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9654:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:1"
																},
																"nativeSrc": "9654:113:1",
																"nodeType": "YulFunctionCall",
																"src": "9654:113:1"
															},
															"nativeSrc": "9651:139:1",
															"nodeType": "YulIf",
															"src": "9651:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9387:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9418:1:1",
														"nodeType": "YulTypedName",
														"src": "9418:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9421:1:1",
														"nodeType": "YulTypedName",
														"src": "9421:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9427:7:1",
														"nodeType": "YulTypedName",
														"src": "9427:7:1",
														"type": ""
													}
												],
												"src": "9387:410:1"
											},
											{
												"body": {
													"nativeSrc": "9848:32:1",
													"nodeType": "YulBlock",
													"src": "9848:32:1",
													"statements": [
														{
															"nativeSrc": "9858:16:1",
															"nodeType": "YulAssignment",
															"src": "9858:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "9869:5:1",
																"nodeType": "YulIdentifier",
																"src": "9869:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9858:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9858:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "9803:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9830:5:1",
														"nodeType": "YulTypedName",
														"src": "9830:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9840:7:1",
														"nodeType": "YulTypedName",
														"src": "9840:7:1",
														"type": ""
													}
												],
												"src": "9803:77:1"
											},
											{
												"body": {
													"nativeSrc": "9951:53:1",
													"nodeType": "YulBlock",
													"src": "9951:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9968:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9968:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9991:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9991:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "9973:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "9973:17:1"
																		},
																		"nativeSrc": "9973:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9973:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9961:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9961:6:1"
																},
																"nativeSrc": "9961:37:1",
																"nodeType": "YulFunctionCall",
																"src": "9961:37:1"
															},
															"nativeSrc": "9961:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "9961:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "9886:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9939:5:1",
														"nodeType": "YulTypedName",
														"src": "9939:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9946:3:1",
														"nodeType": "YulTypedName",
														"src": "9946:3:1",
														"type": ""
													}
												],
												"src": "9886:118:1"
											},
											{
												"body": {
													"nativeSrc": "10075:53:1",
													"nodeType": "YulBlock",
													"src": "10075:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10092:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10092:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10115:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10115:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10097:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "10097:17:1"
																		},
																		"nativeSrc": "10097:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10097:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10085:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10085:6:1"
																},
																"nativeSrc": "10085:37:1",
																"nodeType": "YulFunctionCall",
																"src": "10085:37:1"
															},
															"nativeSrc": "10085:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "10085:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10010:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10063:5:1",
														"nodeType": "YulTypedName",
														"src": "10063:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10070:3:1",
														"nodeType": "YulTypedName",
														"src": "10070:3:1",
														"type": ""
													}
												],
												"src": "10010:118:1"
											},
											{
												"body": {
													"nativeSrc": "10344:454:1",
													"nodeType": "YulBlock",
													"src": "10344:454:1",
													"statements": [
														{
															"nativeSrc": "10354:27:1",
															"nodeType": "YulAssignment",
															"src": "10354:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10366:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10366:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10377:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10377:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10362:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:1"
																},
																"nativeSrc": "10362:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10362:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10354:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10354:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10435:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10435:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10448:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10448:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10459:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10459:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10444:3:1"
																		},
																		"nativeSrc": "10444:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10444:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10391:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10391:43:1"
																},
																"nativeSrc": "10391:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10391:71:1"
															},
															"nativeSrc": "10391:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10391:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10516:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10516:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10529:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10529:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10540:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10540:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10525:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10525:3:1"
																		},
																		"nativeSrc": "10525:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10525:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10472:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10472:43:1"
																},
																"nativeSrc": "10472:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10472:72:1"
															},
															"nativeSrc": "10472:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10472:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10598:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10598:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10611:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10611:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10622:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10622:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10607:3:1"
																		},
																		"nativeSrc": "10607:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10607:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10554:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10554:43:1"
																},
																"nativeSrc": "10554:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10554:72:1"
															},
															"nativeSrc": "10554:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10554:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10680:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10680:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10693:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10693:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10704:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10704:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10689:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10689:3:1"
																		},
																		"nativeSrc": "10689:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10689:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10636:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10636:43:1"
																},
																"nativeSrc": "10636:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10636:72:1"
															},
															"nativeSrc": "10636:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10636:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "10762:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10762:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10775:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10775:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10786:3:1",
																				"nodeType": "YulLiteral",
																				"src": "10786:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10771:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:1"
																		},
																		"nativeSrc": "10771:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10771:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10718:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10718:43:1"
																},
																"nativeSrc": "10718:73:1",
																"nodeType": "YulFunctionCall",
																"src": "10718:73:1"
															},
															"nativeSrc": "10718:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "10718:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "10134:664:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10284:9:1",
														"nodeType": "YulTypedName",
														"src": "10284:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10296:6:1",
														"nodeType": "YulTypedName",
														"src": "10296:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10304:6:1",
														"nodeType": "YulTypedName",
														"src": "10304:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10312:6:1",
														"nodeType": "YulTypedName",
														"src": "10312:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10320:6:1",
														"nodeType": "YulTypedName",
														"src": "10320:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10328:6:1",
														"nodeType": "YulTypedName",
														"src": "10328:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10339:4:1",
														"nodeType": "YulTypedName",
														"src": "10339:4:1",
														"type": ""
													}
												],
												"src": "10134:664:1"
											},
											{
												"body": {
													"nativeSrc": "10900:73:1",
													"nodeType": "YulBlock",
													"src": "10900:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10917:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10917:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10922:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10922:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10910:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10910:6:1"
																},
																"nativeSrc": "10910:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10910:19:1"
															},
															"nativeSrc": "10910:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "10910:19:1"
														},
														{
															"nativeSrc": "10938:29:1",
															"nodeType": "YulAssignment",
															"src": "10938:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10957:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10957:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10962:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10962:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10953:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:1"
																},
																"nativeSrc": "10953:14:1",
																"nodeType": "YulFunctionCall",
																"src": "10953:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10938:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "10938:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10804:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10872:3:1",
														"nodeType": "YulTypedName",
														"src": "10872:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10877:6:1",
														"nodeType": "YulTypedName",
														"src": "10877:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10888:11:1",
														"nodeType": "YulTypedName",
														"src": "10888:11:1",
														"type": ""
													}
												],
												"src": "10804:169:1"
											},
											{
												"body": {
													"nativeSrc": "11041:184:1",
													"nodeType": "YulBlock",
													"src": "11041:184:1",
													"statements": [
														{
															"nativeSrc": "11051:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11051:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "11060:1:1",
																"nodeType": "YulLiteral",
																"src": "11060:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "11055:1:1",
																	"nodeType": "YulTypedName",
																	"src": "11055:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11120:63:1",
																"nodeType": "YulBlock",
																"src": "11120:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "11145:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11145:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "11150:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "11150:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11141:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "11141:3:1"
																					},
																					"nativeSrc": "11141:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11141:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "11164:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "11164:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "11169:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "11169:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11160:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "11160:3:1"
																							},
																							"nativeSrc": "11160:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "11160:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "11154:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "11154:5:1"
																					},
																					"nativeSrc": "11154:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11154:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11134:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11134:6:1"
																			},
																			"nativeSrc": "11134:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11134:39:1"
																		},
																		"nativeSrc": "11134:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11134:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "11081:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11081:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11084:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11084:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11078:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11078:2:1"
																},
																"nativeSrc": "11078:13:1",
																"nodeType": "YulFunctionCall",
																"src": "11078:13:1"
															},
															"nativeSrc": "11070:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11092:19:1",
																"nodeType": "YulBlock",
																"src": "11092:19:1",
																"statements": [
																	{
																		"nativeSrc": "11094:15:1",
																		"nodeType": "YulAssignment",
																		"src": "11094:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "11103:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "11103:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11106:2:1",
																					"nodeType": "YulLiteral",
																					"src": "11106:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11099:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11099:3:1"
																			},
																			"nativeSrc": "11099:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11099:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "11094:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "11094:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11074:3:1",
																"nodeType": "YulBlock",
																"src": "11074:3:1",
																"statements": []
															},
															"src": "11070:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "11203:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11203:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11208:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11208:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11199:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11199:3:1"
																		},
																		"nativeSrc": "11199:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11199:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11217:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11217:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11192:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11192:6:1"
																},
																"nativeSrc": "11192:27:1",
																"nodeType": "YulFunctionCall",
																"src": "11192:27:1"
															},
															"nativeSrc": "11192:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "11192:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "10979:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "11023:3:1",
														"nodeType": "YulTypedName",
														"src": "11023:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "11028:3:1",
														"nodeType": "YulTypedName",
														"src": "11028:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11033:6:1",
														"nodeType": "YulTypedName",
														"src": "11033:6:1",
														"type": ""
													}
												],
												"src": "10979:246:1"
											},
											{
												"body": {
													"nativeSrc": "11279:54:1",
													"nodeType": "YulBlock",
													"src": "11279:54:1",
													"statements": [
														{
															"nativeSrc": "11289:38:1",
															"nodeType": "YulAssignment",
															"src": "11289:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11307:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11307:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11314:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11314:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11303:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11303:3:1"
																		},
																		"nativeSrc": "11303:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11303:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11323:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11323:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11319:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:1"
																		},
																		"nativeSrc": "11319:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11299:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11299:3:1"
																},
																"nativeSrc": "11299:28:1",
																"nodeType": "YulFunctionCall",
																"src": "11299:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11289:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11289:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "11231:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11262:5:1",
														"nodeType": "YulTypedName",
														"src": "11262:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11272:6:1",
														"nodeType": "YulTypedName",
														"src": "11272:6:1",
														"type": ""
													}
												],
												"src": "11231:102:1"
											},
											{
												"body": {
													"nativeSrc": "11431:285:1",
													"nodeType": "YulBlock",
													"src": "11431:285:1",
													"statements": [
														{
															"nativeSrc": "11441:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11441:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11488:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11488:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11455:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "11455:32:1"
																},
																"nativeSrc": "11455:39:1",
																"nodeType": "YulFunctionCall",
																"src": "11455:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11445:6:1",
																	"nodeType": "YulTypedName",
																	"src": "11445:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11503:78:1",
															"nodeType": "YulAssignment",
															"src": "11503:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11569:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11569:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11574:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11574:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11510:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "11510:58:1"
																},
																"nativeSrc": "11510:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11510:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11503:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11503:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11629:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "11629:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11636:4:1",
																				"nodeType": "YulLiteral",
																				"src": "11636:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11625:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11625:3:1"
																		},
																		"nativeSrc": "11625:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11625:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11643:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11643:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11648:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11648:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11590:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "11590:34:1"
																},
																"nativeSrc": "11590:65:1",
																"nodeType": "YulFunctionCall",
																"src": "11590:65:1"
															},
															"nativeSrc": "11590:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "11590:65:1"
														},
														{
															"nativeSrc": "11664:46:1",
															"nodeType": "YulAssignment",
															"src": "11664:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11675:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11675:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11702:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11702:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "11680:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "11680:21:1"
																		},
																		"nativeSrc": "11680:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11680:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11671:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11671:3:1"
																},
																"nativeSrc": "11671:39:1",
																"nodeType": "YulFunctionCall",
																"src": "11671:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11664:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11664:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11339:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11412:5:1",
														"nodeType": "YulTypedName",
														"src": "11412:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11419:3:1",
														"nodeType": "YulTypedName",
														"src": "11419:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11427:3:1",
														"nodeType": "YulTypedName",
														"src": "11427:3:1",
														"type": ""
													}
												],
												"src": "11339:377:1"
											},
											{
												"body": {
													"nativeSrc": "11840:195:1",
													"nodeType": "YulBlock",
													"src": "11840:195:1",
													"statements": [
														{
															"nativeSrc": "11850:26:1",
															"nodeType": "YulAssignment",
															"src": "11850:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11862:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11862:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11873:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11873:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11858:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11858:3:1"
																},
																"nativeSrc": "11858:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11858:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11850:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11850:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11897:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11897:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11908:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11908:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11893:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11893:3:1"
																		},
																		"nativeSrc": "11893:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11893:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11916:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11916:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11922:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11922:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11912:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11912:3:1"
																		},
																		"nativeSrc": "11912:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11912:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11886:6:1"
																},
																"nativeSrc": "11886:47:1",
																"nodeType": "YulFunctionCall",
																"src": "11886:47:1"
															},
															"nativeSrc": "11886:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "11886:47:1"
														},
														{
															"nativeSrc": "11942:86:1",
															"nodeType": "YulAssignment",
															"src": "11942:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12014:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12014:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "12023:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12023:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11950:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "11950:63:1"
																},
																"nativeSrc": "11950:78:1",
																"nodeType": "YulFunctionCall",
																"src": "11950:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11942:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11942:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11722:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11812:9:1",
														"nodeType": "YulTypedName",
														"src": "11812:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11824:6:1",
														"nodeType": "YulTypedName",
														"src": "11824:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11835:4:1",
														"nodeType": "YulTypedName",
														"src": "11835:4:1",
														"type": ""
													}
												],
												"src": "11722:313:1"
											},
											{
												"body": {
													"nativeSrc": "12099:40:1",
													"nodeType": "YulBlock",
													"src": "12099:40:1",
													"statements": [
														{
															"nativeSrc": "12110:22:1",
															"nodeType": "YulAssignment",
															"src": "12110:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12126:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12126:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12120:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12120:5:1"
																},
																"nativeSrc": "12120:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12120:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12110:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12041:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12082:5:1",
														"nodeType": "YulTypedName",
														"src": "12082:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12092:6:1",
														"nodeType": "YulTypedName",
														"src": "12092:6:1",
														"type": ""
													}
												],
												"src": "12041:98:1"
											},
											{
												"body": {
													"nativeSrc": "12201:60:1",
													"nodeType": "YulBlock",
													"src": "12201:60:1",
													"statements": [
														{
															"nativeSrc": "12211:11:1",
															"nodeType": "YulAssignment",
															"src": "12211:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "12219:3:1",
																"nodeType": "YulIdentifier",
																"src": "12219:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12211:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12211:4:1"
																}
															]
														},
														{
															"nativeSrc": "12232:22:1",
															"nodeType": "YulAssignment",
															"src": "12232:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "12244:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12244:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12249:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12249:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12240:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12240:3:1"
																},
																"nativeSrc": "12240:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12240:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12232:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12232:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_bytes_memory_ptr",
												"nativeSrc": "12145:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12188:3:1",
														"nodeType": "YulTypedName",
														"src": "12188:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12196:4:1",
														"nodeType": "YulTypedName",
														"src": "12196:4:1",
														"type": ""
													}
												],
												"src": "12145:116:1"
											},
											{
												"body": {
													"nativeSrc": "12322:99:1",
													"nodeType": "YulBlock",
													"src": "12322:99:1",
													"statements": [
														{
															"nativeSrc": "12333:42:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12333:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "12370:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12370:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "12364:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "12364:5:1"
																		},
																		"nativeSrc": "12364:10:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12364:10:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes32",
																	"nativeSrc": "12346:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12346:17:1"
																},
																"nativeSrc": "12346:29:1",
																"nodeType": "YulFunctionCall",
																"src": "12346:29:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "12337:5:1",
																	"nodeType": "YulTypedName",
																	"src": "12337:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12385:29:1",
															"nodeType": "YulAssignment",
															"src": "12385:29:1",
															"value": {
																"name": "value",
																"nativeSrc": "12409:5:1",
																"nodeType": "YulIdentifier",
																"src": "12409:5:1"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "12385:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "12385:11:1"
																}
															]
														}
													]
												},
												"name": "read_from_memoryt_bytes32",
												"nativeSrc": "12267:154:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12302:3:1",
														"nodeType": "YulTypedName",
														"src": "12302:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "returnValue",
														"nativeSrc": "12310:11:1",
														"nodeType": "YulTypedName",
														"src": "12310:11:1",
														"type": ""
													}
												],
												"src": "12267:154:1"
											},
											{
												"body": {
													"nativeSrc": "12517:504:1",
													"nodeType": "YulBlock",
													"src": "12517:504:1",
													"statements": [
														{
															"nativeSrc": "12528:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12528:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12574:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12574:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12542:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "12542:31:1"
																},
																"nativeSrc": "12542:38:1",
																"nodeType": "YulFunctionCall",
																"src": "12542:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12532:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12532:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12589:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12589:21:1",
															"value": {
																"name": "array",
																"nativeSrc": "12605:5:1",
																"nodeType": "YulIdentifier",
																"src": "12605:5:1"
															},
															"variables": [
																{
																	"name": "dataArea",
																	"nativeSrc": "12593:8:1",
																	"nodeType": "YulTypedName",
																	"src": "12593:8:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12620:52:1",
															"nodeType": "YulAssignment",
															"src": "12620:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12666:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12666:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_bytes_memory_ptr",
																	"nativeSrc": "12632:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "12632:33:1"
																},
																"nativeSrc": "12632:40:1",
																"nodeType": "YulFunctionCall",
																"src": "12632:40:1"
															},
															"variableNames": [
																{
																	"name": "dataArea",
																	"nativeSrc": "12620:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "12620:8:1"
																}
															]
														},
														{
															"nativeSrc": "12682:44:1",
															"nodeType": "YulAssignment",
															"src": "12682:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "dataArea",
																		"nativeSrc": "12717:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "12717:8:1"
																	}
																],
																"functionName": {
																	"name": "read_from_memoryt_bytes32",
																	"nativeSrc": "12691:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "12691:25:1"
																},
																"nativeSrc": "12691:35:1",
																"nodeType": "YulFunctionCall",
																"src": "12691:35:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12682:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12682:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12754:260:1",
																"nodeType": "YulBlock",
																"src": "12754:260:1",
																"statements": [
																	{
																		"nativeSrc": "12768:236:1",
																		"nodeType": "YulAssignment",
																		"src": "12768:236:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "12798:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "12798:5:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12865:1:1",
																									"nodeType": "YulLiteral",
																									"src": "12865:1:1",
																									"type": "",
																									"value": "8"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "12872:2:1",
																											"nodeType": "YulLiteral",
																											"src": "12872:2:1",
																											"type": "",
																											"value": "32"
																										},
																										{
																											"name": "length",
																											"nativeSrc": "12876:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "12876:6:1"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nativeSrc": "12868:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "12868:3:1"
																									},
																									"nativeSrc": "12868:15:1",
																									"nodeType": "YulFunctionCall",
																									"src": "12868:15:1"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "12861:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "12861:3:1"
																							},
																							"nativeSrc": "12861:23:1",
																							"nodeType": "YulFunctionCall",
																							"src": "12861:23:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12906:66:1",
																							"nodeType": "YulLiteral",
																							"src": "12906:66:1",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "shift_left_dynamic",
																						"nativeSrc": "12821:18:1",
																						"nodeType": "YulIdentifier",
																						"src": "12821:18:1"
																					},
																					"nativeSrc": "12821:169:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12821:169:1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12777:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12777:3:1"
																			},
																			"nativeSrc": "12777:227:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12777:227:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "12768:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12768:5:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "12742:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12742:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12750:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12750:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12739:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12739:2:1"
																},
																"nativeSrc": "12739:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12739:14:1"
															},
															"nativeSrc": "12736:278:1",
															"nodeType": "YulIf",
															"src": "12736:278:1"
														}
													]
												},
												"name": "convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32",
												"nativeSrc": "12427:594:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12501:5:1",
														"nodeType": "YulTypedName",
														"src": "12501:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12511:5:1",
														"nodeType": "YulTypedName",
														"src": "12511:5:1",
														"type": ""
													}
												],
												"src": "12427:594:1"
											},
											{
												"body": {
													"nativeSrc": "13071:147:1",
													"nodeType": "YulBlock",
													"src": "13071:147:1",
													"statements": [
														{
															"nativeSrc": "13081:25:1",
															"nodeType": "YulAssignment",
															"src": "13081:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13104:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13104:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13086:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13086:17:1"
																},
																"nativeSrc": "13086:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13086:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13081:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13081:1:1"
																}
															]
														},
														{
															"nativeSrc": "13115:25:1",
															"nodeType": "YulAssignment",
															"src": "13115:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13138:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13138:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13120:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13120:17:1"
																},
																"nativeSrc": "13120:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13120:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13115:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13115:1:1"
																}
															]
														},
														{
															"nativeSrc": "13149:16:1",
															"nodeType": "YulAssignment",
															"src": "13149:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13160:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13160:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13163:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13163:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13156:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13156:3:1"
																},
																"nativeSrc": "13156:9:1",
																"nodeType": "YulFunctionCall",
																"src": "13156:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13149:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13149:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13189:22:1",
																"nodeType": "YulBlock",
																"src": "13189:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13191:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "13191:16:1"
																			},
																			"nativeSrc": "13191:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13191:18:1"
																		},
																		"nativeSrc": "13191:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13191:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13181:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13181:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13184:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13184:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13178:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13178:2:1"
																},
																"nativeSrc": "13178:10:1",
																"nodeType": "YulFunctionCall",
																"src": "13178:10:1"
															},
															"nativeSrc": "13175:36:1",
															"nodeType": "YulIf",
															"src": "13175:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13027:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13058:1:1",
														"nodeType": "YulTypedName",
														"src": "13058:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13061:1:1",
														"nodeType": "YulTypedName",
														"src": "13061:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13067:3:1",
														"nodeType": "YulTypedName",
														"src": "13067:3:1",
														"type": ""
													}
												],
												"src": "13027:191:1"
											},
											{
												"body": {
													"nativeSrc": "13378:288:1",
													"nodeType": "YulBlock",
													"src": "13378:288:1",
													"statements": [
														{
															"nativeSrc": "13388:26:1",
															"nodeType": "YulAssignment",
															"src": "13388:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13400:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13400:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13411:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13411:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13396:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13396:3:1"
																},
																"nativeSrc": "13396:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13396:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13388:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13388:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13468:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13481:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13481:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13492:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13492:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13477:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13477:3:1"
																		},
																		"nativeSrc": "13477:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13477:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13424:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13424:43:1"
																},
																"nativeSrc": "13424:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13424:71:1"
															},
															"nativeSrc": "13424:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13424:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13549:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13549:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13562:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13562:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13573:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13573:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13558:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13558:3:1"
																		},
																		"nativeSrc": "13558:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13558:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13505:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13505:43:1"
																},
																"nativeSrc": "13505:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13505:72:1"
															},
															"nativeSrc": "13505:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13505:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13631:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13631:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13644:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13644:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13655:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13655:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13640:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13640:3:1"
																		},
																		"nativeSrc": "13640:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13640:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13587:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13587:43:1"
																},
																"nativeSrc": "13587:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13587:72:1"
															},
															"nativeSrc": "13587:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13587:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13224:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13334:9:1",
														"nodeType": "YulTypedName",
														"src": "13334:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13346:6:1",
														"nodeType": "YulTypedName",
														"src": "13346:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13354:6:1",
														"nodeType": "YulTypedName",
														"src": "13354:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13362:6:1",
														"nodeType": "YulTypedName",
														"src": "13362:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13373:4:1",
														"nodeType": "YulTypedName",
														"src": "13373:4:1",
														"type": ""
													}
												],
												"src": "13224:442:1"
											},
											{
												"body": {
													"nativeSrc": "13770:124:1",
													"nodeType": "YulBlock",
													"src": "13770:124:1",
													"statements": [
														{
															"nativeSrc": "13780:26:1",
															"nodeType": "YulAssignment",
															"src": "13780:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13792:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13792:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13803:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13788:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13788:3:1"
																},
																"nativeSrc": "13788:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13788:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13780:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13780:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13860:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13860:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13873:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13873:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13884:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13884:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13869:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13869:3:1"
																		},
																		"nativeSrc": "13869:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13869:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13816:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13816:43:1"
																},
																"nativeSrc": "13816:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13816:71:1"
															},
															"nativeSrc": "13816:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13816:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13672:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13742:9:1",
														"nodeType": "YulTypedName",
														"src": "13742:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13754:6:1",
														"nodeType": "YulTypedName",
														"src": "13754:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13765:4:1",
														"nodeType": "YulTypedName",
														"src": "13765:4:1",
														"type": ""
													}
												],
												"src": "13672:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61016060405234801562000011575f80fd5b5060405162002e1d38038062002e1d8339818101604052810190620000379190620007b8565b806040518060400160405280600781526020017f5069676d656e7400000000000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600781526020017f5069676d656e74000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f50474d5400000000000000000000000000000000000000000000000000000000815250816003908162000122919062000a4c565b50806004908162000134919062000a4c565b5050506200014d600583620002b660201b90919060201c565b61012081815250506200016b600682620002b660201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620001aa6200030b60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200025b575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000252919062000b41565b60405180910390fd5b6200026c816200036760201b60201c565b50620002af33620002826200042a60201b60201c565b600a62000290919062000ce5565b6505a38ccc3000620002a3919062000d35565b6200043260201b60201c565b5062000fdf565b5f602083511015620002db57620002d383620004bc60201b60201c565b905062000305565b82620002ed836200052660201b60201c565b5f019081620002fd919062000a4c565b5060ff5f1b90505b92915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200034c95949392919062000daa565b60405160208183030381529060405280519060200120905090565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620004a5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200049c919062000b41565b60405180910390fd5b620004b85f83836200052f60201b60201c565b5050565b5f80829050601f815111156200050b57826040517f305a27a900000000000000000000000000000000000000000000000000000000815260040162000502919062000e8f565b60405180910390fd5b805181620005199062000ee0565b5f1c175f1b915050919050565b5f819050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000583578060025f82825462000576919062000f4f565b9250508190555062000654565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156200060f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620006069392919062000f89565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200069d578060025f8282540392505081905550620006e7565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000746919062000fc4565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620007828262000757565b9050919050565b620007948162000776565b81146200079f575f80fd5b50565b5f81519050620007b28162000789565b92915050565b5f60208284031215620007d057620007cf62000753565b5b5f620007df84828501620007a2565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200086457607f821691505b6020821081036200087a57620008796200081f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620008de7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620008a1565b620008ea8683620008a1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620009346200092e620009288462000902565b6200090b565b62000902565b9050919050565b5f819050919050565b6200094f8362000914565b620009676200095e826200093b565b848454620008ad565b825550505050565b5f90565b6200097d6200096f565b6200098a81848462000944565b505050565b5b81811015620009b157620009a55f8262000973565b60018101905062000990565b5050565b601f82111562000a0057620009ca8162000880565b620009d58462000892565b81016020851015620009e5578190505b620009fd620009f48562000892565b8301826200098f565b50505b505050565b5f82821c905092915050565b5f62000a225f198460080262000a05565b1980831691505092915050565b5f62000a3c838362000a11565b9150826002028217905092915050565b62000a5782620007e8565b67ffffffffffffffff81111562000a735762000a72620007f2565b5b62000a7f82546200084c565b62000a8c828285620009b5565b5f60209050601f83116001811462000ac2575f841562000aad578287015190505b62000ab9858262000a2f565b86555062000b28565b601f19841662000ad28662000880565b5f5b8281101562000afb5784890151825560018201915060208501945060208101905062000ad4565b8683101562000b1b578489015162000b17601f89168262000a11565b8355505b6001600288020188555050505b505050505050565b62000b3b8162000776565b82525050565b5f60208201905062000b565f83018462000b30565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000be65780860481111562000bbe5762000bbd62000b5c565b5b600185161562000bce5780820291505b808102905062000bde8562000b89565b945062000b9e565b94509492505050565b5f8262000c00576001905062000cd2565b8162000c0f575f905062000cd2565b816001811462000c28576002811462000c335762000c69565b600191505062000cd2565b60ff84111562000c485762000c4762000b5c565b5b8360020a91508482111562000c625762000c6162000b5c565b5b5062000cd2565b5060208310610133831016604e8410600b841016171562000ca35782820a90508381111562000c9d5762000c9c62000b5c565b5b62000cd2565b62000cb2848484600162000b95565b9250905081840481111562000ccc5762000ccb62000b5c565b5b81810290505b9392505050565b5f60ff82169050919050565b5f62000cf18262000902565b915062000cfe8362000cd9565b925062000d2d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000bef565b905092915050565b5f62000d418262000902565b915062000d4e8362000902565b925082820262000d5e8162000902565b9150828204841483151762000d785762000d7762000b5c565b5b5092915050565b5f819050919050565b62000d938162000d7f565b82525050565b62000da48162000902565b82525050565b5f60a08201905062000dbf5f83018862000d88565b62000dce602083018762000d88565b62000ddd604083018662000d88565b62000dec606083018562000d99565b62000dfb608083018462000b30565b9695505050505050565b5f82825260208201905092915050565b5f5b8381101562000e3457808201518184015260208101905062000e17565b5f8484015250505050565b5f601f19601f8301169050919050565b5f62000e5b82620007e8565b62000e67818562000e05565b935062000e7981856020860162000e15565b62000e848162000e3f565b840191505092915050565b5f6020820190508181035f83015262000ea9818462000e4f565b905092915050565b5f81519050919050565b5f819050602082019050919050565b5f62000ed7825162000d7f565b80915050919050565b5f62000eec8262000eb1565b8262000ef88462000ebb565b905062000f058162000eca565b9250602082101562000f485762000f437fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802620008a1565b831692505b5050919050565b5f62000f5b8262000902565b915062000f688362000902565b925082820190508082111562000f835762000f8262000b5c565b5b92915050565b5f60608201905062000f9e5f83018662000b30565b62000fad602083018562000d99565b62000fbc604083018462000d99565b949350505050565b5f60208201905062000fd95f83018462000d99565b92915050565b60805160a05160c05160e051610100516101205161014051611dec620010315f395f610c9301525f610c5801525f61118c01525f61116b01525f610a0c01525f610a6201525f610a8b0152611dec5ff3fe608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80637ecebe0011610095578063a9059cbb11610064578063a9059cbb146102a4578063d505accf146102d4578063dd62ed3e146102f0578063f2fde38b14610320576100fe565b80637ecebe001461021457806384b0196e146102445780638da5cb5b1461026857806395d89b4114610286576100fe565b8063313ce567116100d1578063313ce5671461019e5780633644e515146101bc57806370a08231146101da578063715018a61461020a576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61033c565b604051610117919061165c565b60405180910390f35b61013a6004803603810190610135919061170d565b6103cc565b6040516101479190611765565b60405180910390f35b6101586103ee565b604051610165919061178d565b60405180910390f35b610188600480360381019061018391906117a6565b6103f7565b6040516101959190611765565b60405180910390f35b6101a6610425565b6040516101b39190611811565b60405180910390f35b6101c461042d565b6040516101d19190611842565b60405180910390f35b6101f460048036038101906101ef919061185b565b61043b565b604051610201919061178d565b60405180910390f35b610212610480565b005b61022e6004803603810190610229919061185b565b610493565b60405161023b919061178d565b60405180910390f35b61024c6104a4565b60405161025f9796959493929190611986565b60405180910390f35b610270610549565b60405161027d9190611a08565b60405180910390f35b61028e610571565b60405161029b919061165c565b60405180910390f35b6102be60048036038101906102b9919061170d565b610601565b6040516102cb9190611765565b60405180910390f35b6102ee60048036038101906102e99190611a75565b610623565b005b61030a60048036038101906103059190611b12565b610768565b604051610317919061178d565b60405180910390f35b61033a6004803603810190610335919061185b565b6107ea565b005b60606003805461034b90611b7d565b80601f016020809104026020016040519081016040528092919081815260200182805461037790611b7d565b80156103c25780601f10610399576101008083540402835291602001916103c2565b820191905f5260205f20905b8154815290600101906020018083116103a557829003601f168201915b5050505050905090565b5f806103d661086e565b90506103e3818585610875565b600191505092915050565b5f600254905090565b5f8061040161086e565b905061040e858285610887565b610419858585610919565b60019150509392505050565b5f6012905090565b5f610436610a09565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610488610abf565b6104915f610b46565b565b5f61049d82610c09565b9050919050565b5f6060805f805f60606104b5610c4f565b6104bd610c8a565b46305f801b5f67ffffffffffffffff8111156104dc576104db611bad565b5b60405190808252806020026020018201604052801561050a5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461058090611b7d565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac90611b7d565b80156105f75780601f106105ce576101008083540402835291602001916105f7565b820191905f5260205f20905b8154815290600101906020018083116105da57829003601f168201915b5050505050905090565b5f8061060b61086e565b9050610618818585610919565b600191505092915050565b8342111561066857836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161065f919061178d565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106968c610cc5565b896040516020016106ac96959493929190611bda565b6040516020818303038152906040528051906020012090505f6106ce82610d18565b90505f6106dd82878787610d31565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461075157808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610748929190611c39565b60405180910390fd5b61075c8a8a8a610875565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107f2610abf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610862575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108599190611a08565b60405180910390fd5b61086b81610b46565b50565b5f33905090565b6108828383836001610d5f565b505050565b5f6108928484610768565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109135781811015610904578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108fb93929190611c60565b60405180910390fd5b61091284848484035f610d5f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610989575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109809190611a08565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109f09190611a08565b60405180910390fd5b610a04838383610f2e565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610a8457507f000000000000000000000000000000000000000000000000000000000000000046145b15610ab1577f00000000000000000000000000000000000000000000000000000000000000009050610abc565b610ab9611147565b90505b90565b610ac761086e565b73ffffffffffffffffffffffffffffffffffffffff16610ae5610549565b73ffffffffffffffffffffffffffffffffffffffff1614610b4457610b0861086e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b3b9190611a08565b60405180910390fd5b565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610c8560057f00000000000000000000000000000000000000000000000000000000000000006111dc90919063ffffffff16565b905090565b6060610cc060067f00000000000000000000000000000000000000000000000000000000000000006111dc90919063ffffffff16565b905090565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610d2a610d24610a09565b83611289565b9050919050565b5f805f80610d41888888886112c9565b925092509250610d5182826113b0565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dcf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610dc69190611a08565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e3f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e369190611a08565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f28578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f1f919061178d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f7e578060025f828254610f729190611cc2565b9250508190555061104c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611007578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ffe93929190611c60565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611093578060025f82825403925050819055506110dd565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161113a919061178d565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016111c1959493929190611cf5565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146111f8576111f183611512565b9050611283565b81805461120490611b7d565b80601f016020809104026020016040519081016040528092919081815260200182805461123090611b7d565b801561127b5780601f106112525761010080835404028352916020019161127b565b820191905f5260205f20905b81548152906001019060200180831161125e57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611305575f6003859250925092506113a6565b5f6001888888886040515f81526020016040526040516113289493929190611d46565b6020604051602081039080840390855afa158015611348573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611399575f60015f801b935093509350506113a6565b805f805f1b935093509350505b9450945094915050565b5f60038111156113c3576113c2611d89565b5b8260038111156113d6576113d5611d89565b5b031561150e57600160038111156113f0576113ef611d89565b5b82600381111561140357611402611d89565b5b0361143a576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561144e5761144d611d89565b5b82600381111561146157611460611d89565b5b036114a557805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161149c919061178d565b60405180910390fd5b6003808111156114b8576114b7611d89565b5b8260038111156114cb576114ca611d89565b5b0361150d57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016115049190611842565b60405180910390fd5b5b5050565b60605f61151e83611584565b90505f602067ffffffffffffffff81111561153c5761153b611bad565b5b6040519080825280601f01601f19166020018201604052801561156e5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f8111156115c9576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116095780820151818401526020810190506115ee565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61162e826115d2565b61163881856115dc565b93506116488185602086016115ec565b61165181611614565b840191505092915050565b5f6020820190508181035f8301526116748184611624565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116a982611680565b9050919050565b6116b98161169f565b81146116c3575f80fd5b50565b5f813590506116d4816116b0565b92915050565b5f819050919050565b6116ec816116da565b81146116f6575f80fd5b50565b5f81359050611707816116e3565b92915050565b5f80604083850312156117235761172261167c565b5b5f611730858286016116c6565b9250506020611741858286016116f9565b9150509250929050565b5f8115159050919050565b61175f8161174b565b82525050565b5f6020820190506117785f830184611756565b92915050565b611787816116da565b82525050565b5f6020820190506117a05f83018461177e565b92915050565b5f805f606084860312156117bd576117bc61167c565b5b5f6117ca868287016116c6565b93505060206117db868287016116c6565b92505060406117ec868287016116f9565b9150509250925092565b5f60ff82169050919050565b61180b816117f6565b82525050565b5f6020820190506118245f830184611802565b92915050565b5f819050919050565b61183c8161182a565b82525050565b5f6020820190506118555f830184611833565b92915050565b5f602082840312156118705761186f61167c565b5b5f61187d848285016116c6565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6118ba81611886565b82525050565b6118c98161169f565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611901816116da565b82525050565b5f61191283836118f8565b60208301905092915050565b5f602082019050919050565b5f611934826118cf565b61193e81856118d9565b9350611949836118e9565b805f5b838110156119795781516119608882611907565b975061196b8361191e565b92505060018101905061194c565b5085935050505092915050565b5f60e0820190506119995f83018a6118b1565b81810360208301526119ab8189611624565b905081810360408301526119bf8188611624565b90506119ce606083018761177e565b6119db60808301866118c0565b6119e860a0830185611833565b81810360c08301526119fa818461192a565b905098975050505050505050565b5f602082019050611a1b5f8301846118c0565b92915050565b611a2a816117f6565b8114611a34575f80fd5b50565b5f81359050611a4581611a21565b92915050565b611a548161182a565b8114611a5e575f80fd5b50565b5f81359050611a6f81611a4b565b92915050565b5f805f805f805f60e0888a031215611a9057611a8f61167c565b5b5f611a9d8a828b016116c6565b9750506020611aae8a828b016116c6565b9650506040611abf8a828b016116f9565b9550506060611ad08a828b016116f9565b9450506080611ae18a828b01611a37565b93505060a0611af28a828b01611a61565b92505060c0611b038a828b01611a61565b91505092959891949750929550565b5f8060408385031215611b2857611b2761167c565b5b5f611b35858286016116c6565b9250506020611b46858286016116c6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b9457607f821691505b602082108103611ba757611ba6611b50565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c082019050611bed5f830189611833565b611bfa60208301886118c0565b611c0760408301876118c0565b611c14606083018661177e565b611c21608083018561177e565b611c2e60a083018461177e565b979650505050505050565b5f604082019050611c4c5f8301856118c0565b611c5960208301846118c0565b9392505050565b5f606082019050611c735f8301866118c0565b611c80602083018561177e565b611c8d604083018461177e565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ccc826116da565b9150611cd7836116da565b9250828201905080821115611cef57611cee611c95565b5b92915050565b5f60a082019050611d085f830188611833565b611d156020830187611833565b611d226040830186611833565b611d2f606083018561177e565b611d3c60808301846118c0565b9695505050505050565b5f608082019050611d595f830187611833565b611d666020830186611802565b611d736040830185611833565b611d806060830184611833565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220a283f1fe54333757acc576d59a1dd509542392ac5d9099e8c596fe11c39397fb64736f6c63430008160033",
							"opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2E1D CODESIZE SUB DUP1 PUSH3 0x2E1D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x7B8 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5069676D656E7400000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3100000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5069676D656E7400000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50474D5400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x122 SWAP2 SWAP1 PUSH3 0xA4C JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x134 SWAP2 SWAP1 PUSH3 0xA4C JUMP JUMPDEST POP POP POP PUSH3 0x14D PUSH1 0x5 DUP4 PUSH3 0x2B6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0x16B PUSH1 0x6 DUP3 PUSH3 0x2B6 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x1AA PUSH3 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x25B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x252 SWAP2 SWAP1 PUSH3 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x26C DUP2 PUSH3 0x367 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x2AF CALLER PUSH3 0x282 PUSH3 0x42A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x290 SWAP2 SWAP1 PUSH3 0xCE5 JUMP JUMPDEST PUSH6 0x5A38CCC3000 PUSH3 0x2A3 SWAP2 SWAP1 PUSH3 0xD35 JUMP JUMPDEST PUSH3 0x432 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xFDF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x2DB JUMPI PUSH3 0x2D3 DUP4 PUSH3 0x4BC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x305 JUMP JUMPDEST DUP3 PUSH3 0x2ED DUP4 PUSH3 0x526 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 ADD SWAP1 DUP2 PUSH3 0x2FD SWAP2 SWAP1 PUSH3 0xA4C JUMP JUMPDEST POP PUSH1 0xFF PUSH0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x34C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xDAA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x4A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x49C SWAP2 SWAP1 PUSH3 0xB41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x4B8 PUSH0 DUP4 DUP4 PUSH3 0x52F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x50B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x502 SWAP2 SWAP1 PUSH3 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x519 SWAP1 PUSH3 0xEE0 JUMP JUMPDEST PUSH0 SHR OR PUSH0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x583 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x576 SWAP2 SWAP1 PUSH3 0xF4F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x654 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x60F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x606 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xF89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x69D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x6E7 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x746 SWAP2 SWAP1 PUSH3 0xFC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x782 DUP3 PUSH3 0x757 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x794 DUP2 PUSH3 0x776 JUMP JUMPDEST DUP2 EQ PUSH3 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x7B2 DUP2 PUSH3 0x789 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x7D0 JUMPI PUSH3 0x7CF PUSH3 0x753 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x7DF DUP5 DUP3 DUP6 ADD PUSH3 0x7A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x864 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x87A JUMPI PUSH3 0x879 PUSH3 0x81F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x8DE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x8A1 JUMP JUMPDEST PUSH3 0x8EA DUP7 DUP4 PUSH3 0x8A1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x934 PUSH3 0x92E PUSH3 0x928 DUP5 PUSH3 0x902 JUMP JUMPDEST PUSH3 0x90B JUMP JUMPDEST PUSH3 0x902 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x94F DUP4 PUSH3 0x914 JUMP JUMPDEST PUSH3 0x967 PUSH3 0x95E DUP3 PUSH3 0x93B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x8AD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x97D PUSH3 0x96F JUMP JUMPDEST PUSH3 0x98A DUP2 DUP5 DUP5 PUSH3 0x944 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x9B1 JUMPI PUSH3 0x9A5 PUSH0 DUP3 PUSH3 0x973 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x990 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0xA00 JUMPI PUSH3 0x9CA DUP2 PUSH3 0x880 JUMP JUMPDEST PUSH3 0x9D5 DUP5 PUSH3 0x892 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x9E5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x9FD PUSH3 0x9F4 DUP6 PUSH3 0x892 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x98F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA22 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0xA05 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA3C DUP4 DUP4 PUSH3 0xA11 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA57 DUP3 PUSH3 0x7E8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA73 JUMPI PUSH3 0xA72 PUSH3 0x7F2 JUMP JUMPDEST JUMPDEST PUSH3 0xA7F DUP3 SLOAD PUSH3 0x84C JUMP JUMPDEST PUSH3 0xA8C DUP3 DUP3 DUP6 PUSH3 0x9B5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xAC2 JUMPI PUSH0 DUP5 ISZERO PUSH3 0xAAD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xAB9 DUP6 DUP3 PUSH3 0xA2F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xB28 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xAD2 DUP7 PUSH3 0x880 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xAFB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAD4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xB1B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xB17 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0xA11 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xB3B DUP2 PUSH3 0x776 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xB56 PUSH0 DUP4 ADD DUP5 PUSH3 0xB30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xBE6 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xBBE JUMPI PUSH3 0xBBD PUSH3 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xBCE JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xBDE DUP6 PUSH3 0xB89 JUMP JUMPDEST SWAP5 POP PUSH3 0xB9E JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xC00 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xCD2 JUMP JUMPDEST DUP2 PUSH3 0xC0F JUMPI PUSH0 SWAP1 POP PUSH3 0xCD2 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xC28 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xC33 JUMPI PUSH3 0xC69 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xCD2 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xC48 JUMPI PUSH3 0xC47 PUSH3 0xB5C JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xC62 JUMPI PUSH3 0xC61 PUSH3 0xB5C JUMP JUMPDEST JUMPDEST POP PUSH3 0xCD2 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xCA3 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xC9D JUMPI PUSH3 0xC9C PUSH3 0xB5C JUMP JUMPDEST JUMPDEST PUSH3 0xCD2 JUMP JUMPDEST PUSH3 0xCB2 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xB95 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xCCC JUMPI PUSH3 0xCCB PUSH3 0xB5C JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xCF1 DUP3 PUSH3 0x902 JUMP JUMPDEST SWAP2 POP PUSH3 0xCFE DUP4 PUSH3 0xCD9 JUMP JUMPDEST SWAP3 POP PUSH3 0xD2D PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xBEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xD41 DUP3 PUSH3 0x902 JUMP JUMPDEST SWAP2 POP PUSH3 0xD4E DUP4 PUSH3 0x902 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xD5E DUP2 PUSH3 0x902 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xD78 JUMPI PUSH3 0xD77 PUSH3 0xB5C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD93 DUP2 PUSH3 0xD7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xDA4 DUP2 PUSH3 0x902 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xDBF PUSH0 DUP4 ADD DUP9 PUSH3 0xD88 JUMP JUMPDEST PUSH3 0xDCE PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xD88 JUMP JUMPDEST PUSH3 0xDDD PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xD88 JUMP JUMPDEST PUSH3 0xDEC PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xD99 JUMP JUMPDEST PUSH3 0xDFB PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0xB30 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xE34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xE17 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xE5B DUP3 PUSH3 0x7E8 JUMP JUMPDEST PUSH3 0xE67 DUP2 DUP6 PUSH3 0xE05 JUMP JUMPDEST SWAP4 POP PUSH3 0xE79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0xE15 JUMP JUMPDEST PUSH3 0xE84 DUP2 PUSH3 0xE3F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0xEA9 DUP2 DUP5 PUSH3 0xE4F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xED7 DUP3 MLOAD PUSH3 0xD7F JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xEEC DUP3 PUSH3 0xEB1 JUMP JUMPDEST DUP3 PUSH3 0xEF8 DUP5 PUSH3 0xEBB JUMP JUMPDEST SWAP1 POP PUSH3 0xF05 DUP2 PUSH3 0xECA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xF48 JUMPI PUSH3 0xF43 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x8A1 JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xF5B DUP3 PUSH3 0x902 JUMP JUMPDEST SWAP2 POP PUSH3 0xF68 DUP4 PUSH3 0x902 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xF83 JUMPI PUSH3 0xF82 PUSH3 0xB5C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xF9E PUSH0 DUP4 ADD DUP7 PUSH3 0xB30 JUMP JUMPDEST PUSH3 0xFAD PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xD99 JUMP JUMPDEST PUSH3 0xFBC PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xD99 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xFD9 PUSH0 DUP4 ADD DUP5 PUSH3 0xD99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x1DEC PUSH3 0x1031 PUSH0 CODECOPY PUSH0 PUSH2 0xC93 ADD MSTORE PUSH0 PUSH2 0xC58 ADD MSTORE PUSH0 PUSH2 0x118C ADD MSTORE PUSH0 PUSH2 0x116B ADD MSTORE PUSH0 PUSH2 0xA0C ADD MSTORE PUSH0 PUSH2 0xA62 ADD MSTORE PUSH0 PUSH2 0xA8B ADD MSTORE PUSH2 0x1DEC PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x320 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x286 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x34B SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x377 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x399 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3D6 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP PUSH2 0x3E3 DUP2 DUP6 DUP6 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x401 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP6 DUP3 DUP6 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x419 DUP6 DUP6 DUP6 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x436 PUSH2 0xA09 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x488 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x491 PUSH0 PUSH2 0xB46 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x49D DUP3 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4B5 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x4BD PUSH2 0xC8A JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DC JUMPI PUSH2 0x4DB PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x50A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x580 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5AC SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x60B PUSH2 0x86E JUMP JUMPDEST SWAP1 POP PUSH2 0x618 DUP2 DUP6 DUP6 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x668 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x696 DUP13 PUSH2 0xCC5 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6AC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x6CE DUP3 PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6DD DUP3 DUP8 DUP8 DUP8 PUSH2 0xD31 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x751 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75C DUP11 DUP11 DUP11 PUSH2 0x875 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0xABF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x862 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86B DUP2 PUSH2 0xB46 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x882 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x892 DUP5 DUP5 PUSH2 0x768 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x913 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x904 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x912 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD5F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x989 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA04 DUP4 DUP4 DUP4 PUSH2 0xF2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA84 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAB1 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xABC JUMP JUMPDEST PUSH2 0xAB9 PUSH2 0x1147 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x86E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAE5 PUSH2 0x549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB44 JUMPI PUSH2 0xB08 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC85 PUSH1 0x5 PUSH32 0x0 PUSH2 0x11DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCC0 PUSH1 0x6 PUSH32 0x0 PUSH2 0x11DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD2A PUSH2 0xD24 PUSH2 0xA09 JUMP JUMPDEST DUP4 PUSH2 0x1289 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xD41 DUP9 DUP9 DUP9 DUP9 PUSH2 0x12C9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD51 DUP3 DUP3 PUSH2 0x13B0 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF28 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF7E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x104C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1007 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1093 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10DD JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11C1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x11F8 JUMPI PUSH2 0x11F1 DUP4 PUSH2 0x1512 JUMP JUMPDEST SWAP1 POP PUSH2 0x1283 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1204 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1230 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x127B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1252 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x127B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x125E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1305 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x13A6 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1328 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1348 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1399 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x13A6 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C3 JUMPI PUSH2 0x13C2 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D5 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x150E JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1403 JUMPI PUSH2 0x1402 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x143A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144D PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1461 JUMPI PUSH2 0x1460 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14A5 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149C SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x14B8 JUMPI PUSH2 0x14B7 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CA PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x150D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1504 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x151E DUP4 PUSH2 0x1584 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x153C JUMPI PUSH2 0x153B PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x156E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1609 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15EE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x162E DUP3 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x1638 DUP2 DUP6 PUSH2 0x15DC JUMP JUMPDEST SWAP4 POP PUSH2 0x1648 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x1651 DUP2 PUSH2 0x1614 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1674 DUP2 DUP5 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16A9 DUP3 PUSH2 0x1680 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B9 DUP2 PUSH2 0x169F JUMP JUMPDEST DUP2 EQ PUSH2 0x16C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D4 DUP2 PUSH2 0x16B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x16DA JUMP JUMPDEST DUP2 EQ PUSH2 0x16F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1707 DUP2 PUSH2 0x16E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH2 0x1722 PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1730 DUP6 DUP3 DUP7 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1741 DUP6 DUP3 DUP7 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175F DUP2 PUSH2 0x174B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1778 PUSH0 DUP4 ADD DUP5 PUSH2 0x1756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1787 DUP2 PUSH2 0x16DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x177E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17BD JUMPI PUSH2 0x17BC PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17CA DUP7 DUP3 DUP8 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17DB DUP7 DUP3 DUP8 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17EC DUP7 DUP3 DUP8 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180B DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1824 PUSH0 DUP4 ADD DUP5 PUSH2 0x1802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x182A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1855 PUSH0 DUP4 ADD DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1870 JUMPI PUSH2 0x186F PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187D DUP5 DUP3 DUP6 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BA DUP2 PUSH2 0x1886 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18C9 DUP2 PUSH2 0x169F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1901 DUP2 PUSH2 0x16DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1912 DUP4 DUP4 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1934 DUP3 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x193E DUP2 DUP6 PUSH2 0x18D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1949 DUP4 PUSH2 0x18E9 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1979 JUMPI DUP2 MLOAD PUSH2 0x1960 DUP9 DUP3 PUSH2 0x1907 JUMP JUMPDEST SWAP8 POP PUSH2 0x196B DUP4 PUSH2 0x191E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x194C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1999 PUSH0 DUP4 ADD DUP11 PUSH2 0x18B1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x19AB DUP2 DUP10 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x19BF DUP2 DUP9 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP PUSH2 0x19CE PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x19DB PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x19E8 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1833 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x19FA DUP2 DUP5 PUSH2 0x192A JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1B PUSH0 DUP4 ADD DUP5 PUSH2 0x18C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A2A DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A34 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A45 DUP2 PUSH2 0x1A21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A54 DUP2 PUSH2 0x182A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A6F DUP2 PUSH2 0x1A4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A8F PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A9D DUP11 DUP3 DUP12 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1AAE DUP11 DUP3 DUP12 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1ABF DUP11 DUP3 DUP12 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1AD0 DUP11 DUP3 DUP12 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1AE1 DUP11 DUP3 DUP12 ADD PUSH2 0x1A37 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1AF2 DUP11 DUP3 DUP12 ADD PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1B03 DUP11 DUP3 DUP12 ADD PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B28 JUMPI PUSH2 0x1B27 PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B35 DUP6 DUP3 DUP7 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B46 DUP6 DUP3 DUP7 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B94 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BA7 JUMPI PUSH2 0x1BA6 PUSH2 0x1B50 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1BED PUSH0 DUP4 ADD DUP10 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1BFA PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x1C07 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1C21 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1C2E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x177E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP6 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x1C59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C73 PUSH0 DUP4 ADD DUP7 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x1C80 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1C8D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x177E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CCC DUP3 PUSH2 0x16DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD7 DUP4 PUSH2 0x16DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CEF JUMPI PUSH2 0x1CEE PUSH2 0x1C95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D08 PUSH0 DUP4 ADD DUP9 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D15 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D22 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D2F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x18C0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D59 PUSH0 DUP4 ADD DUP8 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D66 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1802 JUMP JUMPDEST PUSH2 0x1D73 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D80 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP4 CALL INVALID SLOAD CALLER CALLDATACOPY JUMPI 0xAC 0xC5 PUSH23 0xD59A1DD509542392AC5D9099E8C596FE11C39397FB6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "79652:256:0:-:0;;;79706:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;79820:12;78390:52;;;;;;;;;;;;;;;;;78429:4;36997:431;;;;;;;;;;;;;;;;;67775:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67849:5;67841;:13;;;;;;:::i;:::-;;67874:7;67864;:17;;;;;;:::i;:::-;;67775:113;;37070:45;37101:13;37070:4;:30;;;;:45;;;;:::i;:::-;37062:53;;;;;;37136:51;37170:16;37136:7;:33;;;;:51;;;;:::i;:::-;37125:62;;;;;;37227:4;37211:22;;;;;;37197:36;;;;;;37276:7;37260:25;;;;;;37243:42;;;;;;37313:13;37296:30;;;;;;37361:23;:21;;;:23;;:::i;:::-;37336:48;;;;;;37416:4;37394:27;;;;;;;;;;36997:431;;78390:52;60746:1;60722:26;;:12;:26;;;60718:95;;60799:1;60771:31;;;;;;;;;;;:::i;:::-;;;;;;;;60718:95;60822:32;60841:12;60822:18;;;:32;;:::i;:::-;60674:187;79848:51:::3;79854:10;79888;:8;;;:10;;:::i;:::-;79882:2;:16;;;;:::i;:::-;79866:13;:32;;;;:::i;:::-;79848:5;;;:51;;:::i;:::-;79706:200:::0;79652:256;;9153:340;9249:11;9298:2;9282:5;9276:19;:24;9272:215;;;9323:20;9337:5;9323:13;;;:20;;:::i;:::-;9316:27;;;;9272:215;9415:5;9374:32;9400:5;9374:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;7629:66;9458:17;;9434:42;;9153:340;;;;;:::o;37782:179::-;37837:7;35748:95;37895:11;;37908:14;;37924:13;37947:4;37873:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37863:91;;;;;;37856:98;;37782:179;:::o;62361:187::-;62434:16;62453:6;;;;;;;;;;;62434:25;;62478:8;62469:6;;:17;;;;;;;;;;;;;;;;;;62532:8;62501:40;;62522:8;62501:40;;;;;;;;;;;;62424:124;62361:187;:::o;68881:82::-;68930:5;68954:2;68947:9;;68881:82;:::o;73600:208::-;73689:1;73670:21;;:7;:21;;;73666:91;;73743:1;73714:32;;;;;;;;;;;:::i;:::-;;;;;;;;73666:91;73766:35;73782:1;73786:7;73795:5;73766:7;;;:35;;:::i;:::-;73600:208;;:::o;7947:286::-;8012:11;8035:17;8061:3;8035:30;;8093:2;8079:4;:11;:16;8075:72;;;8132:3;8118:18;;;;;;;;;;;:::i;:::-;;;;;;;;8075:72;8213:4;:11;8204:4;8196:13;;;:::i;:::-;8188:22;;:36;8180:45;;8156:70;;;7947:286;;;:::o;5457:202::-;5525:20;5633:10;5623:20;;5457:202;;;:::o;72150:1107::-;72255:1;72239:18;;:4;:18;;;72235:540;;72391:5;72375:12;;:21;;;;;;;:::i;:::-;;;;;;;;72235:540;;;72427:19;72449:9;:15;72459:4;72449:15;;;;;;;;;;;;;;;;72427:37;;72496:5;72482:11;:19;72478:115;;;72553:4;72559:11;72572:5;72528:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;72478:115;72745:5;72731:11;:19;72713:9;:15;72723:4;72713:15;;;;;;;;;;;;;;;:37;;;;72413:362;72235:540;72803:1;72789:16;;:2;:16;;;72785:425;;72968:5;72952:12;;:21;;;;;;;;;;;72785:425;;;73180:5;73163:9;:13;73173:2;73163:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;72785:425;73240:2;73225:25;;73234:4;73225:25;;;73244:5;73225:25;;;;;;:::i;:::-;;;;;;;;72150:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:77::-;9840:7;9869:5;9858:16;;9803:77;;;:::o;9886:118::-;9973:24;9991:5;9973:24;:::i;:::-;9968:3;9961:37;9886:118;;:::o;10010:::-;10097:24;10115:5;10097:24;:::i;:::-;10092:3;10085:37;10010:118;;:::o;10134:664::-;10339:4;10377:3;10366:9;10362:19;10354:27;;10391:71;10459:1;10448:9;10444:17;10435:6;10391:71;:::i;:::-;10472:72;10540:2;10529:9;10525:18;10516:6;10472:72;:::i;:::-;10554;10622:2;10611:9;10607:18;10598:6;10554:72;:::i;:::-;10636;10704:2;10693:9;10689:18;10680:6;10636:72;:::i;:::-;10718:73;10786:3;10775:9;10771:19;10762:6;10718:73;:::i;:::-;10134:664;;;;;;;;:::o;10804:169::-;10888:11;10922:6;10917:3;10910:19;10962:4;10957:3;10953:14;10938:29;;10804:169;;;;:::o;10979:246::-;11060:1;11070:113;11084:6;11081:1;11078:13;11070:113;;;11169:1;11164:3;11160:11;11154:18;11150:1;11145:3;11141:11;11134:39;11106:2;11103:1;11099:10;11094:15;;11070:113;;;11217:1;11208:6;11203:3;11199:16;11192:27;11041:184;10979:246;;;:::o;11231:102::-;11272:6;11323:2;11319:7;11314:2;11307:5;11303:14;11299:28;11289:38;;11231:102;;;:::o;11339:377::-;11427:3;11455:39;11488:5;11455:39;:::i;:::-;11510:71;11574:6;11569:3;11510:71;:::i;:::-;11503:78;;11590:65;11648:6;11643:3;11636:4;11629:5;11625:16;11590:65;:::i;:::-;11680:29;11702:6;11680:29;:::i;:::-;11675:3;11671:39;11664:46;;11431:285;11339:377;;;;:::o;11722:313::-;11835:4;11873:2;11862:9;11858:18;11850:26;;11922:9;11916:4;11912:20;11908:1;11897:9;11893:17;11886:47;11950:78;12023:4;12014:6;11950:78;:::i;:::-;11942:86;;11722:313;;;;:::o;12041:98::-;12092:6;12126:5;12120:12;12110:22;;12041:98;;;:::o;12145:116::-;12196:4;12219:3;12211:11;;12249:4;12244:3;12240:14;12232:22;;12145:116;;;:::o;12267:154::-;12310:11;12346:29;12370:3;12364:10;12346:29;:::i;:::-;12409:5;12385:29;;12322:99;12267:154;;;:::o;12427:594::-;12511:5;12542:38;12574:5;12542:38;:::i;:::-;12605:5;12632:40;12666:5;12632:40;:::i;:::-;12620:52;;12691:35;12717:8;12691:35;:::i;:::-;12682:44;;12750:2;12742:6;12739:14;12736:278;;;12821:169;12906:66;12876:6;12872:2;12868:15;12865:1;12861:23;12821:169;:::i;:::-;12798:5;12777:227;12768:236;;12736:278;12517:504;;12427:594;;;:::o;13027:191::-;13067:3;13086:20;13104:1;13086:20;:::i;:::-;13081:25;;13120:20;13138:1;13120:20;:::i;:::-;13115:25;;13163:1;13160;13156:9;13149:16;;13184:3;13181:1;13178:10;13175:36;;;13191:18;;:::i;:::-;13175:36;13027:191;;;;:::o;13224:442::-;13373:4;13411:2;13400:9;13396:18;13388:26;;13424:71;13492:1;13481:9;13477:17;13468:6;13424:71;:::i;:::-;13505:72;13573:2;13562:9;13558:18;13549:6;13505:72;:::i;:::-;13587;13655:2;13644:9;13640:18;13631:6;13587:72;:::i;:::-;13224:442;;;;;;:::o;13672:222::-;13765:4;13803:2;13792:9;13788:18;13780:26;;13816:71;13884:1;13873:9;13869:17;13860:6;13816:71;:::i;:::-;13672:222;;;;:::o;79652:256:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DOMAIN_SEPARATOR_3551": {
									"entryPoint": 1069,
									"id": 3551,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Name_2098": {
									"entryPoint": 3151,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_EIP712Version_2110": {
									"entryPoint": 3210,
									"id": 2110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_approve_3300": {
									"entryPoint": 2165,
									"id": 3300,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_3360": {
									"entryPoint": 3423,
									"id": 3360,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_buildDomainSeparator_2028": {
									"entryPoint": 4423,
									"id": 2028,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkOwner_2740": {
									"entryPoint": 2751,
									"id": 2740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_domainSeparatorV4_2007": {
									"entryPoint": 2569,
									"id": 2007,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_hashTypedDataV4_2044": {
									"entryPoint": 3352,
									"id": 2044,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_2640": {
									"entryPoint": 2158,
									"id": 2640,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_3408": {
									"entryPoint": 2183,
									"id": 3408,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_throwError_2457": {
									"entryPoint": 5040,
									"id": 2457,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_2802": {
									"entryPoint": 2886,
									"id": 2802,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_3139": {
									"entryPoint": 2329,
									"id": 3139,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_3216": {
									"entryPoint": 3886,
									"id": 3216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_useNonce_41": {
									"entryPoint": 3269,
									"id": 41,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@allowance_3036": {
									"entryPoint": 1896,
									"id": 3036,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_3060": {
									"entryPoint": 972,
									"id": 3060,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_2995": {
									"entryPoint": 1083,
									"id": 2995,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@byteLength_315": {
									"entryPoint": 5508,
									"id": 315,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_2973": {
									"entryPoint": 1061,
									"id": 2973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@eip712Domain_2086": {
									"entryPoint": 1188,
									"id": 2086,
									"parameterSlots": 0,
									"returnSlots": 7
								},
								"@name_2955": {
									"entryPoint": 828,
									"id": 2955,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nonces_26": {
									"entryPoint": 3081,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@nonces_3541": {
									"entryPoint": 1171,
									"id": 3541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_2723": {
									"entryPoint": 1353,
									"id": 2723,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permit_3524": {
									"entryPoint": 1571,
									"id": 3524,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@recover_2408": {
									"entryPoint": 3377,
									"id": 2408,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@renounceOwnership_2754": {
									"entryPoint": 1152,
									"id": 2754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_2964": {
									"entryPoint": 1393,
									"id": 2964,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toStringWithFallback_382": {
									"entryPoint": 4572,
									"id": 382,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toString_283": {
									"entryPoint": 5394,
									"id": 283,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toTypedDataHash_1891": {
									"entryPoint": 4745,
									"id": 1891,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalSupply_2982": {
									"entryPoint": 1006,
									"id": 2982,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_3092": {
									"entryPoint": 1015,
									"id": 3092,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_2782": {
									"entryPoint": 2026,
									"id": 2782,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_3019": {
									"entryPoint": 1537,
									"id": 3019,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tryRecover_2372": {
									"entryPoint": 4809,
									"id": 2372,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"abi_decode_t_address": {
									"entryPoint": 5830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 6753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 6711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 6407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes1_to_t_bytes1_fromStack": {
									"entryPoint": 6321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7130,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 7413,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 7494,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes1": {
									"entryPoint": 6278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 6186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 6689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15381:1",
										"nodeType": "YulBlock",
										"src": "0:15381:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "208:73:1",
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nativeSrc": "218:19:1",
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nativeSrc": "218:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nativeSrc": "246:29:1",
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:1",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nativeSrc": "261:14:1",
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:1",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:1",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:1",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nativeSrc": "349:184:1",
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nativeSrc": "359:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:1",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:1",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:1",
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nativeSrc": "449:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nativeSrc": "468:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nativeSrc": "462:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nativeSrc": "442:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nativeSrc": "442:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nativeSrc": "386:13:1",
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nativeSrc": "378:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:1",
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nativeSrc": "402:15:1",
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:1",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nativeSrc": "407:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:1",
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nativeSrc": "507:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:1",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nativeSrc": "500:27:1",
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nativeSrc": "500:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:1",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:1",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:1",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nativeSrc": "587:54:1",
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nativeSrc": "597:38:1",
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:1",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nativeSrc": "611:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:1",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nativeSrc": "627:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nativeSrc": "607:28:1",
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:1",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:1",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nativeSrc": "739:285:1",
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nativeSrc": "749:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nativeSrc": "763:39:1",
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:1",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:1",
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nativeSrc": "818:71:1",
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:1",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nativeSrc": "933:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nativeSrc": "898:65:1",
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nativeSrc": "898:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nativeSrc": "972:46:1",
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nativeSrc": "988:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nativeSrc": "979:39:1",
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:1",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:1",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:1",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nativeSrc": "1148:195:1",
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nativeSrc": "1158:26:1",
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nativeSrc": "1166:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nativeSrc": "1201:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nativeSrc": "1220:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nativeSrc": "1194:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nativeSrc": "1194:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nativeSrc": "1250:86:1",
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nativeSrc": "1258:78:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:1",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:1",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:1",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nativeSrc": "1389:35:1",
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nativeSrc": "1399:19:1",
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nativeSrc": "1409:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:1",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nativeSrc": "1519:28:1",
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nativeSrc": "1529:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nativeSrc": "1529:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nativeSrc": "1642:28:1",
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nativeSrc": "1652:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nativeSrc": "1652:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nativeSrc": "1721:81:1",
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nativeSrc": "1731:65:1",
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nativeSrc": "1742:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:1",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:1",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nativeSrc": "1853:51:1",
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nativeSrc": "1863:35:1",
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nativeSrc": "1874:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:1",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:1",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nativeSrc": "1953:79:1",
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:1",
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nativeSrc": "2012:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nativeSrc": "2012:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nativeSrc": "1983:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nativeSrc": "1973:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nativeSrc": "1966:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nativeSrc": "1963:63:1",
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:1",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nativeSrc": "2090:87:1",
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nativeSrc": "2100:29:1",
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nativeSrc": "2109:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nativeSrc": "2138:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nativeSrc": "2138:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:1",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:1",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:1",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nativeSrc": "2228:32:1",
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nativeSrc": "2238:16:1",
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:1",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:1",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:1",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nativeSrc": "2309:79:1",
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:1",
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nativeSrc": "2368:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nativeSrc": "2368:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nativeSrc": "2339:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nativeSrc": "2329:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nativeSrc": "2322:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nativeSrc": "2319:63:1",
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:1",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nativeSrc": "2446:87:1",
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nativeSrc": "2456:29:1",
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nativeSrc": "2465:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nativeSrc": "2494:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nativeSrc": "2494:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:1",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:1",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:1",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nativeSrc": "2622:391:1",
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:1",
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nativeSrc": "2670:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nativeSrc": "2670:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nativeSrc": "2639:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nativeSrc": "2635:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nativeSrc": "2632:119:1",
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nativeSrc": "2761:117:1",
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nativeSrc": "2776:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nativeSrc": "2836:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nativeSrc": "2815:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:1",
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nativeSrc": "2903:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nativeSrc": "2964:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nativeSrc": "2943:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:1",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:1",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:1",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nativeSrc": "3061:48:1",
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nativeSrc": "3071:32:1",
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nativeSrc": "3089:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nativeSrc": "3082:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:1",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:1",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nativeSrc": "3174:50:1",
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nativeSrc": "3196:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nativeSrc": "3184:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nativeSrc": "3184:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:1",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:1",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nativeSrc": "3322:118:1",
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nativeSrc": "3332:26:1",
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nativeSrc": "3340:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nativeSrc": "3415:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nativeSrc": "3368:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nativeSrc": "3368:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:1",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:1",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:1",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nativeSrc": "3511:53:1",
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nativeSrc": "3533:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nativeSrc": "3521:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nativeSrc": "3521:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:1",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:1",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nativeSrc": "3668:124:1",
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nativeSrc": "3678:26:1",
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nativeSrc": "3686:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nativeSrc": "3767:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nativeSrc": "3714:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nativeSrc": "3714:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:1",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:1",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:1",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nativeSrc": "3898:519:1",
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:1",
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nativeSrc": "3946:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nativeSrc": "3946:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nativeSrc": "3915:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nativeSrc": "3911:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nativeSrc": "3908:119:1",
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nativeSrc": "4037:117:1",
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nativeSrc": "4052:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nativeSrc": "4112:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nativeSrc": "4091:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:1",
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nativeSrc": "4179:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nativeSrc": "4240:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nativeSrc": "4219:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:1",
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nativeSrc": "4307:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nativeSrc": "4368:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nativeSrc": "4347:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:1",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:1",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:1",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:1",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nativeSrc": "4466:43:1",
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nativeSrc": "4476:27:1",
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nativeSrc": "4487:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:1",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:1",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nativeSrc": "4576:51:1",
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nativeSrc": "4598:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nativeSrc": "4586:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nativeSrc": "4586:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:1",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:1",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nativeSrc": "4727:120:1",
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nativeSrc": "4737:26:1",
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nativeSrc": "4745:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nativeSrc": "4822:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nativeSrc": "4773:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nativeSrc": "4773:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:1",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:1",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:1",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nativeSrc": "4898:32:1",
													"nodeType": "YulBlock",
													"src": "4898:32:1",
													"statements": [
														{
															"nativeSrc": "4908:16:1",
															"nodeType": "YulAssignment",
															"src": "4908:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "4919:5:1",
																"nodeType": "YulIdentifier",
																"src": "4919:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4908:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "4908:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4853:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4880:5:1",
														"nodeType": "YulTypedName",
														"src": "4880:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4890:7:1",
														"nodeType": "YulTypedName",
														"src": "4890:7:1",
														"type": ""
													}
												],
												"src": "4853:77:1"
											},
											{
												"body": {
													"nativeSrc": "5001:53:1",
													"nodeType": "YulBlock",
													"src": "5001:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5018:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5018:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5041:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5041:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5023:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5023:17:1"
																		},
																		"nativeSrc": "5023:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5011:6:1"
																},
																"nativeSrc": "5011:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5011:37:1"
															},
															"nativeSrc": "5011:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5011:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "4936:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4989:5:1",
														"nodeType": "YulTypedName",
														"src": "4989:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4996:3:1",
														"nodeType": "YulTypedName",
														"src": "4996:3:1",
														"type": ""
													}
												],
												"src": "4936:118:1"
											},
											{
												"body": {
													"nativeSrc": "5158:124:1",
													"nodeType": "YulBlock",
													"src": "5158:124:1",
													"statements": [
														{
															"nativeSrc": "5168:26:1",
															"nodeType": "YulAssignment",
															"src": "5168:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5180:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5180:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5191:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5191:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5176:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5176:3:1"
																},
																"nativeSrc": "5176:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5176:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5168:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5168:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5248:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5248:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5261:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5261:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5272:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5272:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5257:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5257:3:1"
																		},
																		"nativeSrc": "5257:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5257:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5204:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5204:43:1"
																},
																"nativeSrc": "5204:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5204:71:1"
															},
															"nativeSrc": "5204:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5204:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5060:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5130:9:1",
														"nodeType": "YulTypedName",
														"src": "5130:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5142:6:1",
														"nodeType": "YulTypedName",
														"src": "5142:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5153:4:1",
														"nodeType": "YulTypedName",
														"src": "5153:4:1",
														"type": ""
													}
												],
												"src": "5060:222:1"
											},
											{
												"body": {
													"nativeSrc": "5354:263:1",
													"nodeType": "YulBlock",
													"src": "5354:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5400:83:1",
																"nodeType": "YulBlock",
																"src": "5400:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5402:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5402:77:1"
																			},
																			"nativeSrc": "5402:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5402:79:1"
																		},
																		"nativeSrc": "5402:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5375:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5375:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5384:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5371:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5371:3:1"
																		},
																		"nativeSrc": "5371:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5371:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5396:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5396:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5367:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:1"
																},
																"nativeSrc": "5367:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5367:32:1"
															},
															"nativeSrc": "5364:119:1",
															"nodeType": "YulIf",
															"src": "5364:119:1"
														},
														{
															"nativeSrc": "5493:117:1",
															"nodeType": "YulBlock",
															"src": "5493:117:1",
															"statements": [
																{
																	"nativeSrc": "5508:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5508:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5522:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5522:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5512:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5512:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5537:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5537:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5572:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5572:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5583:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5583:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5568:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5568:3:1"
																				},
																				"nativeSrc": "5568:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5568:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5592:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5547:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5547:20:1"
																		},
																		"nativeSrc": "5547:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5547:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5537:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5537:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5288:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5324:9:1",
														"nodeType": "YulTypedName",
														"src": "5324:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5335:7:1",
														"nodeType": "YulTypedName",
														"src": "5335:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5347:6:1",
														"nodeType": "YulTypedName",
														"src": "5347:6:1",
														"type": ""
													}
												],
												"src": "5288:329:1"
											},
											{
												"body": {
													"nativeSrc": "5667:105:1",
													"nodeType": "YulBlock",
													"src": "5667:105:1",
													"statements": [
														{
															"nativeSrc": "5677:89:1",
															"nodeType": "YulAssignment",
															"src": "5677:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5692:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5692:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5699:66:1",
																		"nodeType": "YulLiteral",
																		"src": "5699:66:1",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5688:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:1"
																},
																"nativeSrc": "5688:78:1",
																"nodeType": "YulFunctionCall",
																"src": "5688:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5677:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes1",
												"nativeSrc": "5623:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5649:5:1",
														"nodeType": "YulTypedName",
														"src": "5649:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5659:7:1",
														"nodeType": "YulTypedName",
														"src": "5659:7:1",
														"type": ""
													}
												],
												"src": "5623:149:1"
											},
											{
												"body": {
													"nativeSrc": "5841:52:1",
													"nodeType": "YulBlock",
													"src": "5841:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5858:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5858:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5880:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5880:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes1",
																			"nativeSrc": "5863:16:1",
																			"nodeType": "YulIdentifier",
																			"src": "5863:16:1"
																		},
																		"nativeSrc": "5863:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5851:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5851:6:1"
																},
																"nativeSrc": "5851:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5851:36:1"
															},
															"nativeSrc": "5851:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5851:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
												"nativeSrc": "5778:115:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5829:5:1",
														"nodeType": "YulTypedName",
														"src": "5829:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5836:3:1",
														"nodeType": "YulTypedName",
														"src": "5836:3:1",
														"type": ""
													}
												],
												"src": "5778:115:1"
											},
											{
												"body": {
													"nativeSrc": "5964:53:1",
													"nodeType": "YulBlock",
													"src": "5964:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5981:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5981:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6004:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6004:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5986:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5986:17:1"
																		},
																		"nativeSrc": "5986:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5986:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5974:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5974:6:1"
																},
																"nativeSrc": "5974:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5974:37:1"
															},
															"nativeSrc": "5974:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5974:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5899:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5952:5:1",
														"nodeType": "YulTypedName",
														"src": "5952:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5959:3:1",
														"nodeType": "YulTypedName",
														"src": "5959:3:1",
														"type": ""
													}
												],
												"src": "5899:118:1"
											},
											{
												"body": {
													"nativeSrc": "6097:40:1",
													"nodeType": "YulBlock",
													"src": "6097:40:1",
													"statements": [
														{
															"nativeSrc": "6108:22:1",
															"nodeType": "YulAssignment",
															"src": "6108:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6124:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6124:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6118:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6118:5:1"
																},
																"nativeSrc": "6118:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6118:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6108:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6023:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6080:5:1",
														"nodeType": "YulTypedName",
														"src": "6080:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6090:6:1",
														"nodeType": "YulTypedName",
														"src": "6090:6:1",
														"type": ""
													}
												],
												"src": "6023:114:1"
											},
											{
												"body": {
													"nativeSrc": "6254:73:1",
													"nodeType": "YulBlock",
													"src": "6254:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6271:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6271:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6264:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:1"
																},
																"nativeSrc": "6264:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6264:19:1"
															},
															"nativeSrc": "6264:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "6264:19:1"
														},
														{
															"nativeSrc": "6292:29:1",
															"nodeType": "YulAssignment",
															"src": "6292:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6311:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6311:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6316:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6316:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6307:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6307:3:1"
																},
																"nativeSrc": "6307:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6307:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6292:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "6292:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6143:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6226:3:1",
														"nodeType": "YulTypedName",
														"src": "6226:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6231:6:1",
														"nodeType": "YulTypedName",
														"src": "6231:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6242:11:1",
														"nodeType": "YulTypedName",
														"src": "6242:11:1",
														"type": ""
													}
												],
												"src": "6143:184:1"
											},
											{
												"body": {
													"nativeSrc": "6405:60:1",
													"nodeType": "YulBlock",
													"src": "6405:60:1",
													"statements": [
														{
															"nativeSrc": "6415:11:1",
															"nodeType": "YulAssignment",
															"src": "6415:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "6423:3:1",
																"nodeType": "YulIdentifier",
																"src": "6423:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6415:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6415:4:1"
																}
															]
														},
														{
															"nativeSrc": "6436:22:1",
															"nodeType": "YulAssignment",
															"src": "6436:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6448:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6448:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6453:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6453:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6444:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:1"
																},
																"nativeSrc": "6444:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6444:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6436:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6333:132:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6392:3:1",
														"nodeType": "YulTypedName",
														"src": "6392:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6400:4:1",
														"nodeType": "YulTypedName",
														"src": "6400:4:1",
														"type": ""
													}
												],
												"src": "6333:132:1"
											},
											{
												"body": {
													"nativeSrc": "6526:53:1",
													"nodeType": "YulBlock",
													"src": "6526:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6543:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6543:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6566:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6566:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6548:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6548:17:1"
																		},
																		"nativeSrc": "6548:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6536:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6536:6:1"
																},
																"nativeSrc": "6536:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6536:37:1"
															},
															"nativeSrc": "6536:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6536:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "6471:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6514:5:1",
														"nodeType": "YulTypedName",
														"src": "6514:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6521:3:1",
														"nodeType": "YulTypedName",
														"src": "6521:3:1",
														"type": ""
													}
												],
												"src": "6471:108:1"
											},
											{
												"body": {
													"nativeSrc": "6665:99:1",
													"nodeType": "YulBlock",
													"src": "6665:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6709:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6717:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6717:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "6675:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "6675:33:1"
																},
																"nativeSrc": "6675:46:1",
																"nodeType": "YulFunctionCall",
																"src": "6675:46:1"
															},
															"nativeSrc": "6675:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "6675:46:1"
														},
														{
															"nativeSrc": "6730:28:1",
															"nodeType": "YulAssignment",
															"src": "6730:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6748:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6748:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6753:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6753:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6744:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6744:3:1"
																},
																"nativeSrc": "6744:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6744:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "6730:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "6730:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "6585:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "6638:6:1",
														"nodeType": "YulTypedName",
														"src": "6638:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6646:3:1",
														"nodeType": "YulTypedName",
														"src": "6646:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "6654:10:1",
														"nodeType": "YulTypedName",
														"src": "6654:10:1",
														"type": ""
													}
												],
												"src": "6585:179:1"
											},
											{
												"body": {
													"nativeSrc": "6845:38:1",
													"nodeType": "YulBlock",
													"src": "6845:38:1",
													"statements": [
														{
															"nativeSrc": "6855:22:1",
															"nodeType": "YulAssignment",
															"src": "6855:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "6867:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6867:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6872:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6872:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6863:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6863:3:1"
																},
																"nativeSrc": "6863:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6863:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "6855:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6855:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6770:113:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6832:3:1",
														"nodeType": "YulTypedName",
														"src": "6832:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "6840:4:1",
														"nodeType": "YulTypedName",
														"src": "6840:4:1",
														"type": ""
													}
												],
												"src": "6770:113:1"
											},
											{
												"body": {
													"nativeSrc": "7043:608:1",
													"nodeType": "YulBlock",
													"src": "7043:608:1",
													"statements": [
														{
															"nativeSrc": "7053:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7053:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7115:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7115:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7067:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "7067:47:1"
																},
																"nativeSrc": "7067:54:1",
																"nodeType": "YulFunctionCall",
																"src": "7067:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7057:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7057:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7130:93:1",
															"nodeType": "YulAssignment",
															"src": "7130:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7211:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7211:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "7137:73:1",
																	"nodeType": "YulIdentifier",
																	"src": "7137:73:1"
																},
																"nativeSrc": "7137:86:1",
																"nodeType": "YulFunctionCall",
																"src": "7137:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7130:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7130:3:1"
																}
															]
														},
														{
															"nativeSrc": "7232:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7232:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7297:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7297:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "7247:49:1",
																	"nodeType": "YulIdentifier",
																	"src": "7247:49:1"
																},
																"nativeSrc": "7247:56:1",
																"nodeType": "YulFunctionCall",
																"src": "7247:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "7236:7:1",
																	"nodeType": "YulTypedName",
																	"src": "7236:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7312:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7312:21:1",
															"value": {
																"name": "baseRef",
																"nativeSrc": "7326:7:1",
																"nodeType": "YulIdentifier",
																"src": "7326:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "7316:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7316:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7402:224:1",
																"nodeType": "YulBlock",
																"src": "7402:224:1",
																"statements": [
																	{
																		"nativeSrc": "7416:34:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7416:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7443:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7443:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "7437:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7437:5:1"
																			},
																			"nativeSrc": "7437:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7437:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "7420:13:1",
																				"nodeType": "YulTypedName",
																				"src": "7420:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7463:70:1",
																		"nodeType": "YulAssignment",
																		"src": "7463:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "7514:13:1",
																					"nodeType": "YulIdentifier",
																					"src": "7514:13:1"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "7529:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7529:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "7470:43:1",
																				"nodeType": "YulIdentifier",
																				"src": "7470:43:1"
																			},
																			"nativeSrc": "7470:63:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "7463:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7463:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7546:70:1",
																		"nodeType": "YulAssignment",
																		"src": "7546:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "7609:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7609:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "7556:52:1",
																				"nodeType": "YulIdentifier",
																				"src": "7556:52:1"
																			},
																			"nativeSrc": "7556:60:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7556:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "7546:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7364:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "7364:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7367:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7367:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7361:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7361:2:1"
																},
																"nativeSrc": "7361:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7361:13:1"
															},
															"nativeSrc": "7342:284:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7375:18:1",
																"nodeType": "YulBlock",
																"src": "7375:18:1",
																"statements": [
																	{
																		"nativeSrc": "7377:14:1",
																		"nodeType": "YulAssignment",
																		"src": "7377:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7386:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "7386:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7389:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7389:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7382:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7382:3:1"
																			},
																			"nativeSrc": "7382:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7382:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7377:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "7377:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7346:14:1",
																"nodeType": "YulBlock",
																"src": "7346:14:1",
																"statements": [
																	{
																		"nativeSrc": "7348:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7348:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7357:1:1",
																			"nodeType": "YulLiteral",
																			"src": "7357:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "7352:1:1",
																				"nodeType": "YulTypedName",
																				"src": "7352:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7342:284:1"
														},
														{
															"nativeSrc": "7635:10:1",
															"nodeType": "YulAssignment",
															"src": "7635:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "7642:3:1",
																"nodeType": "YulIdentifier",
																"src": "7642:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7635:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "6919:732:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7022:5:1",
														"nodeType": "YulTypedName",
														"src": "7022:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7029:3:1",
														"nodeType": "YulTypedName",
														"src": "7029:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7038:3:1",
														"nodeType": "YulTypedName",
														"src": "7038:3:1",
														"type": ""
													}
												],
												"src": "6919:732:1"
											},
											{
												"body": {
													"nativeSrc": "8011:861:1",
													"nodeType": "YulBlock",
													"src": "8011:861:1",
													"statements": [
														{
															"nativeSrc": "8021:27:1",
															"nodeType": "YulAssignment",
															"src": "8021:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8033:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8033:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8044:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8044:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8029:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:1"
																},
																"nativeSrc": "8029:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8029:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8021:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8021:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8100:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8100:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8113:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8124:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8124:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8109:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:1"
																		},
																		"nativeSrc": "8109:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8109:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes1_to_t_bytes1_fromStack",
																	"nativeSrc": "8058:41:1",
																	"nodeType": "YulIdentifier",
																	"src": "8058:41:1"
																},
																"nativeSrc": "8058:69:1",
																"nodeType": "YulFunctionCall",
																"src": "8058:69:1"
															},
															"nativeSrc": "8058:69:1",
															"nodeType": "YulExpressionStatement",
															"src": "8058:69:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8148:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8148:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8159:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8159:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8144:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8144:3:1"
																		},
																		"nativeSrc": "8144:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8144:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8168:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8168:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8174:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8174:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8164:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8164:3:1"
																		},
																		"nativeSrc": "8164:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8164:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8137:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8137:6:1"
																},
																"nativeSrc": "8137:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8137:48:1"
															},
															"nativeSrc": "8137:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8137:48:1"
														},
														{
															"nativeSrc": "8194:86:1",
															"nodeType": "YulAssignment",
															"src": "8194:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8266:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8266:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8275:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8275:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8202:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8202:63:1"
																},
																"nativeSrc": "8202:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8202:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8194:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8194:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8301:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8301:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8312:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8312:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8297:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8297:3:1"
																		},
																		"nativeSrc": "8297:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8297:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8321:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8321:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8327:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8327:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8317:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:1"
																		},
																		"nativeSrc": "8317:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8290:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:1"
																},
																"nativeSrc": "8290:48:1",
																"nodeType": "YulFunctionCall",
																"src": "8290:48:1"
															},
															"nativeSrc": "8290:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "8290:48:1"
														},
														{
															"nativeSrc": "8347:86:1",
															"nodeType": "YulAssignment",
															"src": "8347:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8419:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8419:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8428:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8428:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8355:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "8355:63:1"
																},
																"nativeSrc": "8355:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8355:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8347:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8347:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8487:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8487:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8500:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8500:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8511:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8511:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8496:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8496:3:1"
																		},
																		"nativeSrc": "8496:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8496:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8443:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8443:43:1"
																},
																"nativeSrc": "8443:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8443:72:1"
															},
															"nativeSrc": "8443:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8443:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8569:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8569:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8582:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8582:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8593:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8578:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8578:3:1"
																		},
																		"nativeSrc": "8578:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8578:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8525:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8525:43:1"
																},
																"nativeSrc": "8525:73:1",
																"nodeType": "YulFunctionCall",
																"src": "8525:73:1"
															},
															"nativeSrc": "8525:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "8525:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8652:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8652:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8665:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8665:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8676:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8676:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8661:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8661:3:1"
																		},
																		"nativeSrc": "8661:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8661:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "8608:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8608:43:1"
																},
																"nativeSrc": "8608:73:1",
																"nodeType": "YulFunctionCall",
																"src": "8608:73:1"
															},
															"nativeSrc": "8608:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "8608:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8702:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8702:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8713:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8713:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8698:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:1"
																		},
																		"nativeSrc": "8698:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8723:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8723:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8729:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8729:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8719:3:1"
																		},
																		"nativeSrc": "8719:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8719:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8691:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:1"
																},
																"nativeSrc": "8691:49:1",
																"nodeType": "YulFunctionCall",
																"src": "8691:49:1"
															},
															"nativeSrc": "8691:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "8691:49:1"
														},
														{
															"nativeSrc": "8749:116:1",
															"nodeType": "YulAssignment",
															"src": "8749:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "8851:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8851:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8860:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8860:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "8757:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "8757:93:1"
																},
																"nativeSrc": "8757:108:1",
																"nodeType": "YulFunctionCall",
																"src": "8757:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8749:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8749:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "7657:1215:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7935:9:1",
														"nodeType": "YulTypedName",
														"src": "7935:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "7947:6:1",
														"nodeType": "YulTypedName",
														"src": "7947:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7955:6:1",
														"nodeType": "YulTypedName",
														"src": "7955:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7963:6:1",
														"nodeType": "YulTypedName",
														"src": "7963:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7971:6:1",
														"nodeType": "YulTypedName",
														"src": "7971:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7979:6:1",
														"nodeType": "YulTypedName",
														"src": "7979:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7987:6:1",
														"nodeType": "YulTypedName",
														"src": "7987:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7995:6:1",
														"nodeType": "YulTypedName",
														"src": "7995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8006:4:1",
														"nodeType": "YulTypedName",
														"src": "8006:4:1",
														"type": ""
													}
												],
												"src": "7657:1215:1"
											},
											{
												"body": {
													"nativeSrc": "8976:124:1",
													"nodeType": "YulBlock",
													"src": "8976:124:1",
													"statements": [
														{
															"nativeSrc": "8986:26:1",
															"nodeType": "YulAssignment",
															"src": "8986:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8998:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8998:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9009:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9009:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8994:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8994:3:1"
																},
																"nativeSrc": "8994:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8994:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8986:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8986:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9066:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9066:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9079:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9079:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9090:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9090:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9075:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9075:3:1"
																		},
																		"nativeSrc": "9075:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9075:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9022:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9022:43:1"
																},
																"nativeSrc": "9022:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9022:71:1"
															},
															"nativeSrc": "9022:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9022:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8878:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8948:9:1",
														"nodeType": "YulTypedName",
														"src": "8948:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8960:6:1",
														"nodeType": "YulTypedName",
														"src": "8960:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8971:4:1",
														"nodeType": "YulTypedName",
														"src": "8971:4:1",
														"type": ""
													}
												],
												"src": "8878:222:1"
											},
											{
												"body": {
													"nativeSrc": "9147:77:1",
													"nodeType": "YulBlock",
													"src": "9147:77:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9202:16:1",
																"nodeType": "YulBlock",
																"src": "9202:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9211:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9211:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9214:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9214:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9204:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9204:6:1"
																			},
																			"nativeSrc": "9204:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9204:12:1"
																		},
																		"nativeSrc": "9204:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9204:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9170:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9170:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9193:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9193:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "9177:15:1",
																					"nodeType": "YulIdentifier",
																					"src": "9177:15:1"
																				},
																				"nativeSrc": "9177:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9177:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9167:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9167:2:1"
																		},
																		"nativeSrc": "9167:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9167:33:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:1"
																},
																"nativeSrc": "9160:41:1",
																"nodeType": "YulFunctionCall",
																"src": "9160:41:1"
															},
															"nativeSrc": "9157:61:1",
															"nodeType": "YulIf",
															"src": "9157:61:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "9106:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9140:5:1",
														"nodeType": "YulTypedName",
														"src": "9140:5:1",
														"type": ""
													}
												],
												"src": "9106:118:1"
											},
											{
												"body": {
													"nativeSrc": "9280:85:1",
													"nodeType": "YulBlock",
													"src": "9280:85:1",
													"statements": [
														{
															"nativeSrc": "9290:29:1",
															"nodeType": "YulAssignment",
															"src": "9290:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9312:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9312:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9299:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9299:12:1"
																},
																"nativeSrc": "9299:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9299:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9290:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9290:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9353:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9353:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9328:24:1",
																	"nodeType": "YulIdentifier",
																	"src": "9328:24:1"
																},
																"nativeSrc": "9328:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9328:31:1"
															},
															"nativeSrc": "9328:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9328:31:1"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "9230:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9258:6:1",
														"nodeType": "YulTypedName",
														"src": "9258:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9266:3:1",
														"nodeType": "YulTypedName",
														"src": "9266:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9274:5:1",
														"nodeType": "YulTypedName",
														"src": "9274:5:1",
														"type": ""
													}
												],
												"src": "9230:135:1"
											},
											{
												"body": {
													"nativeSrc": "9414:79:1",
													"nodeType": "YulBlock",
													"src": "9414:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9471:16:1",
																"nodeType": "YulBlock",
																"src": "9471:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9480:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9480:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9483:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9483:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9473:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9473:6:1"
																			},
																			"nativeSrc": "9473:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9473:12:1"
																		},
																		"nativeSrc": "9473:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9473:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9437:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "9437:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9462:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "9462:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "9444:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "9444:17:1"
																				},
																				"nativeSrc": "9444:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9444:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9434:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9434:2:1"
																		},
																		"nativeSrc": "9434:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9434:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9427:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9427:6:1"
																},
																"nativeSrc": "9427:43:1",
																"nodeType": "YulFunctionCall",
																"src": "9427:43:1"
															},
															"nativeSrc": "9424:63:1",
															"nodeType": "YulIf",
															"src": "9424:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "9371:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9407:5:1",
														"nodeType": "YulTypedName",
														"src": "9407:5:1",
														"type": ""
													}
												],
												"src": "9371:122:1"
											},
											{
												"body": {
													"nativeSrc": "9551:87:1",
													"nodeType": "YulBlock",
													"src": "9551:87:1",
													"statements": [
														{
															"nativeSrc": "9561:29:1",
															"nodeType": "YulAssignment",
															"src": "9561:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9583:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9583:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9570:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9570:12:1"
																},
																"nativeSrc": "9570:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9570:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9561:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9561:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9626:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9626:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "9599:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "9599:26:1"
																},
																"nativeSrc": "9599:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9599:33:1"
															},
															"nativeSrc": "9599:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "9599:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "9499:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9529:6:1",
														"nodeType": "YulTypedName",
														"src": "9529:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9537:3:1",
														"nodeType": "YulTypedName",
														"src": "9537:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9545:5:1",
														"nodeType": "YulTypedName",
														"src": "9545:5:1",
														"type": ""
													}
												],
												"src": "9499:139:1"
											},
											{
												"body": {
													"nativeSrc": "9810:1033:1",
													"nodeType": "YulBlock",
													"src": "9810:1033:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9857:83:1",
																"nodeType": "YulBlock",
																"src": "9857:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9859:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9859:77:1"
																			},
																			"nativeSrc": "9859:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9859:79:1"
																		},
																		"nativeSrc": "9859:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9859:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9831:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9831:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9840:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9840:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9827:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9827:3:1"
																		},
																		"nativeSrc": "9827:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9827:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9852:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9852:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9823:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9823:3:1"
																},
																"nativeSrc": "9823:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9823:33:1"
															},
															"nativeSrc": "9820:120:1",
															"nodeType": "YulIf",
															"src": "9820:120:1"
														},
														{
															"nativeSrc": "9950:117:1",
															"nodeType": "YulBlock",
															"src": "9950:117:1",
															"statements": [
																{
																	"nativeSrc": "9965:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9965:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9979:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9979:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9969:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9969:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9994:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9994:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10029:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10029:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10040:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10040:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10025:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10025:3:1"
																				},
																				"nativeSrc": "10025:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10025:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10049:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10049:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10004:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10004:20:1"
																		},
																		"nativeSrc": "10004:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10004:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9994:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9994:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10077:118:1",
															"nodeType": "YulBlock",
															"src": "10077:118:1",
															"statements": [
																{
																	"nativeSrc": "10092:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10092:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10106:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10106:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10096:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10096:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10122:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10122:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10157:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10157:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10168:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10168:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10153:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10153:3:1"
																				},
																				"nativeSrc": "10153:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10153:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10177:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10177:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10132:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10132:20:1"
																		},
																		"nativeSrc": "10132:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10132:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10122:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10122:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10205:118:1",
															"nodeType": "YulBlock",
															"src": "10205:118:1",
															"statements": [
																{
																	"nativeSrc": "10220:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10220:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10234:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10234:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10224:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10224:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10250:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10250:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10285:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10285:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10296:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10296:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10281:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10281:3:1"
																				},
																				"nativeSrc": "10281:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10281:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10305:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10305:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10260:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10260:20:1"
																		},
																		"nativeSrc": "10260:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10250:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10250:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10333:118:1",
															"nodeType": "YulBlock",
															"src": "10333:118:1",
															"statements": [
																{
																	"nativeSrc": "10348:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10348:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10362:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10362:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10352:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10352:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10378:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10378:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10413:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10413:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10424:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10424:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10409:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10409:3:1"
																				},
																				"nativeSrc": "10409:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10409:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10433:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10433:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10388:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10388:20:1"
																		},
																		"nativeSrc": "10388:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10388:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10378:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10378:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10461:117:1",
															"nodeType": "YulBlock",
															"src": "10461:117:1",
															"statements": [
																{
																	"nativeSrc": "10476:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10476:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10490:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10490:3:1",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10480:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10480:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10507:61:1",
																	"nodeType": "YulAssignment",
																	"src": "10507:61:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10540:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10540:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10551:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10551:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10536:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10536:3:1"
																				},
																				"nativeSrc": "10536:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10536:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10560:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10560:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "10517:18:1",
																			"nodeType": "YulIdentifier",
																			"src": "10517:18:1"
																		},
																		"nativeSrc": "10517:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10517:51:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10507:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10507:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10588:119:1",
															"nodeType": "YulBlock",
															"src": "10588:119:1",
															"statements": [
																{
																	"nativeSrc": "10603:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10603:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10617:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10617:3:1",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10607:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10607:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10634:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10634:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10669:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10669:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10680:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10680:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10665:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10665:3:1"
																				},
																				"nativeSrc": "10665:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10665:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10689:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10689:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10644:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10644:20:1"
																		},
																		"nativeSrc": "10644:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10644:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "10634:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10634:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10717:119:1",
															"nodeType": "YulBlock",
															"src": "10717:119:1",
															"statements": [
																{
																	"nativeSrc": "10732:17:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10732:17:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10746:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10746:3:1",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10736:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10736:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10763:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10763:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10798:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10798:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10809:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10809:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10794:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10794:3:1"
																				},
																				"nativeSrc": "10794:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10794:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10818:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10818:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10773:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10773:20:1"
																		},
																		"nativeSrc": "10773:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10773:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "10763:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10763:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "9644:1199:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9732:9:1",
														"nodeType": "YulTypedName",
														"src": "9732:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9743:7:1",
														"nodeType": "YulTypedName",
														"src": "9743:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9755:6:1",
														"nodeType": "YulTypedName",
														"src": "9755:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9763:6:1",
														"nodeType": "YulTypedName",
														"src": "9763:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9771:6:1",
														"nodeType": "YulTypedName",
														"src": "9771:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9779:6:1",
														"nodeType": "YulTypedName",
														"src": "9779:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9787:6:1",
														"nodeType": "YulTypedName",
														"src": "9787:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9795:6:1",
														"nodeType": "YulTypedName",
														"src": "9795:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9803:6:1",
														"nodeType": "YulTypedName",
														"src": "9803:6:1",
														"type": ""
													}
												],
												"src": "9644:1199:1"
											},
											{
												"body": {
													"nativeSrc": "10932:391:1",
													"nodeType": "YulBlock",
													"src": "10932:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10978:83:1",
																"nodeType": "YulBlock",
																"src": "10978:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10980:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10980:77:1"
																			},
																			"nativeSrc": "10980:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10980:79:1"
																		},
																		"nativeSrc": "10980:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10980:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10953:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10949:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10949:3:1"
																		},
																		"nativeSrc": "10949:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10949:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10974:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10945:3:1"
																},
																"nativeSrc": "10945:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10945:32:1"
															},
															"nativeSrc": "10942:119:1",
															"nodeType": "YulIf",
															"src": "10942:119:1"
														},
														{
															"nativeSrc": "11071:117:1",
															"nodeType": "YulBlock",
															"src": "11071:117:1",
															"statements": [
																{
																	"nativeSrc": "11086:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11086:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11100:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11100:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11090:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11090:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11115:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11115:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11150:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11150:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11161:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11161:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11146:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11146:3:1"
																				},
																				"nativeSrc": "11146:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11146:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11170:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11170:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11125:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11125:20:1"
																		},
																		"nativeSrc": "11125:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11125:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11115:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11115:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11198:118:1",
															"nodeType": "YulBlock",
															"src": "11198:118:1",
															"statements": [
																{
																	"nativeSrc": "11213:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11213:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11227:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11227:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11217:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11217:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11243:63:1",
																	"nodeType": "YulAssignment",
																	"src": "11243:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11278:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11278:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11289:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11289:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11274:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11274:3:1"
																				},
																				"nativeSrc": "11274:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11274:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11298:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11298:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11253:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "11253:20:1"
																		},
																		"nativeSrc": "11253:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11253:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11243:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11243:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10849:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10894:9:1",
														"nodeType": "YulTypedName",
														"src": "10894:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10905:7:1",
														"nodeType": "YulTypedName",
														"src": "10905:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10917:6:1",
														"nodeType": "YulTypedName",
														"src": "10917:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10925:6:1",
														"nodeType": "YulTypedName",
														"src": "10925:6:1",
														"type": ""
													}
												],
												"src": "10849:474:1"
											},
											{
												"body": {
													"nativeSrc": "11357:152:1",
													"nodeType": "YulBlock",
													"src": "11357:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11374:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11374:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11377:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11377:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11367:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11367:6:1"
																},
																"nativeSrc": "11367:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11367:88:1"
															},
															"nativeSrc": "11367:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11367:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11471:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11471:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11474:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11474:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11464:6:1"
																},
																"nativeSrc": "11464:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11464:15:1"
															},
															"nativeSrc": "11464:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11464:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11495:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11498:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11498:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11488:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11488:6:1"
																},
																"nativeSrc": "11488:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11488:15:1"
															},
															"nativeSrc": "11488:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11488:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11329:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11329:180:1"
											},
											{
												"body": {
													"nativeSrc": "11566:269:1",
													"nodeType": "YulBlock",
													"src": "11566:269:1",
													"statements": [
														{
															"nativeSrc": "11576:22:1",
															"nodeType": "YulAssignment",
															"src": "11576:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11590:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11590:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11596:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11596:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11586:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11586:3:1"
																},
																"nativeSrc": "11586:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11586:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11576:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11576:6:1"
																}
															]
														},
														{
															"nativeSrc": "11607:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11607:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11637:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11637:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11643:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11643:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11633:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11633:3:1"
																},
																"nativeSrc": "11633:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11633:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11611:18:1",
																	"nodeType": "YulTypedName",
																	"src": "11611:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11684:51:1",
																"nodeType": "YulBlock",
																"src": "11684:51:1",
																"statements": [
																	{
																		"nativeSrc": "11698:27:1",
																		"nodeType": "YulAssignment",
																		"src": "11698:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11712:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11712:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11720:4:1",
																					"nodeType": "YulLiteral",
																					"src": "11720:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11708:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11708:3:1"
																			},
																			"nativeSrc": "11708:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11708:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11698:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11698:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11664:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "11664:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11657:6:1"
																},
																"nativeSrc": "11657:26:1",
																"nodeType": "YulFunctionCall",
																"src": "11657:26:1"
															},
															"nativeSrc": "11654:81:1",
															"nodeType": "YulIf",
															"src": "11654:81:1"
														},
														{
															"body": {
																"nativeSrc": "11787:42:1",
																"nodeType": "YulBlock",
																"src": "11787:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11801:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11801:16:1"
																			},
																			"nativeSrc": "11801:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11801:18:1"
																		},
																		"nativeSrc": "11801:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11801:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11751:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "11751:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11774:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11774:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11782:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11782:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11771:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11771:2:1"
																		},
																		"nativeSrc": "11771:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11771:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11748:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11748:2:1"
																},
																"nativeSrc": "11748:38:1",
																"nodeType": "YulFunctionCall",
																"src": "11748:38:1"
															},
															"nativeSrc": "11745:84:1",
															"nodeType": "YulIf",
															"src": "11745:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11515:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11550:4:1",
														"nodeType": "YulTypedName",
														"src": "11550:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11559:6:1",
														"nodeType": "YulTypedName",
														"src": "11559:6:1",
														"type": ""
													}
												],
												"src": "11515:320:1"
											},
											{
												"body": {
													"nativeSrc": "11869:152:1",
													"nodeType": "YulBlock",
													"src": "11869:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11886:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11886:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11889:77:1",
																		"nodeType": "YulLiteral",
																		"src": "11889:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11879:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11879:6:1"
																},
																"nativeSrc": "11879:88:1",
																"nodeType": "YulFunctionCall",
																"src": "11879:88:1"
															},
															"nativeSrc": "11879:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "11879:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11983:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11983:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11986:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11986:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11976:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11976:6:1"
																},
																"nativeSrc": "11976:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11976:15:1"
															},
															"nativeSrc": "11976:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11976:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12007:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12007:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12010:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12010:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12000:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12000:6:1"
																},
																"nativeSrc": "12000:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12000:15:1"
															},
															"nativeSrc": "12000:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "12000:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11841:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11841:180:1"
											},
											{
												"body": {
													"nativeSrc": "12265:537:1",
													"nodeType": "YulBlock",
													"src": "12265:537:1",
													"statements": [
														{
															"nativeSrc": "12275:27:1",
															"nodeType": "YulAssignment",
															"src": "12275:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12287:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12287:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12298:3:1",
																		"nodeType": "YulLiteral",
																		"src": "12298:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12283:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12283:3:1"
																},
																"nativeSrc": "12283:19:1",
																"nodeType": "YulFunctionCall",
																"src": "12283:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12275:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12356:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12356:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12369:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12369:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12380:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12380:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12365:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12365:3:1"
																		},
																		"nativeSrc": "12365:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12365:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12312:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12312:43:1"
																},
																"nativeSrc": "12312:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12312:71:1"
															},
															"nativeSrc": "12312:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12312:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12437:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12437:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12450:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12450:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12461:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12461:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12446:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12446:3:1"
																		},
																		"nativeSrc": "12446:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12446:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12393:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12393:43:1"
																},
																"nativeSrc": "12393:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12393:72:1"
															},
															"nativeSrc": "12393:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12393:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12519:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12519:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12532:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12532:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12543:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12543:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12528:3:1"
																		},
																		"nativeSrc": "12528:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12528:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12475:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12475:43:1"
																},
																"nativeSrc": "12475:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12475:72:1"
															},
															"nativeSrc": "12475:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12475:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12601:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12601:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12614:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12614:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12625:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12625:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12610:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12610:3:1"
																		},
																		"nativeSrc": "12610:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12610:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12557:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12557:43:1"
																},
																"nativeSrc": "12557:72:1",
																"nodeType": "YulFunctionCall",
																"src": "12557:72:1"
															},
															"nativeSrc": "12557:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "12557:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "12683:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12683:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12696:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12696:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12707:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12707:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12692:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12692:3:1"
																		},
																		"nativeSrc": "12692:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12692:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12639:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12639:43:1"
																},
																"nativeSrc": "12639:73:1",
																"nodeType": "YulFunctionCall",
																"src": "12639:73:1"
															},
															"nativeSrc": "12639:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "12639:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "12766:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12766:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12779:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12779:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12790:3:1",
																				"nodeType": "YulLiteral",
																				"src": "12790:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12775:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12775:3:1"
																		},
																		"nativeSrc": "12775:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12775:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12722:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12722:43:1"
																},
																"nativeSrc": "12722:73:1",
																"nodeType": "YulFunctionCall",
																"src": "12722:73:1"
															},
															"nativeSrc": "12722:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "12722:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12027:775:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12197:9:1",
														"nodeType": "YulTypedName",
														"src": "12197:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "12209:6:1",
														"nodeType": "YulTypedName",
														"src": "12209:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12217:6:1",
														"nodeType": "YulTypedName",
														"src": "12217:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12225:6:1",
														"nodeType": "YulTypedName",
														"src": "12225:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12233:6:1",
														"nodeType": "YulTypedName",
														"src": "12233:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12241:6:1",
														"nodeType": "YulTypedName",
														"src": "12241:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12249:6:1",
														"nodeType": "YulTypedName",
														"src": "12249:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12260:4:1",
														"nodeType": "YulTypedName",
														"src": "12260:4:1",
														"type": ""
													}
												],
												"src": "12027:775:1"
											},
											{
												"body": {
													"nativeSrc": "12934:206:1",
													"nodeType": "YulBlock",
													"src": "12934:206:1",
													"statements": [
														{
															"nativeSrc": "12944:26:1",
															"nodeType": "YulAssignment",
															"src": "12944:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12956:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12956:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12967:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12967:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12952:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12952:3:1"
																},
																"nativeSrc": "12952:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12952:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12944:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12944:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13024:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13024:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13037:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13037:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13048:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13048:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13033:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13033:3:1"
																		},
																		"nativeSrc": "13033:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13033:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12980:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12980:43:1"
																},
																"nativeSrc": "12980:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12980:71:1"
															},
															"nativeSrc": "12980:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12980:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13105:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13105:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13118:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13118:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13129:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13129:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13114:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13114:3:1"
																		},
																		"nativeSrc": "13114:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13114:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13061:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13061:43:1"
																},
																"nativeSrc": "13061:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13061:72:1"
															},
															"nativeSrc": "13061:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13061:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "12808:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12898:9:1",
														"nodeType": "YulTypedName",
														"src": "12898:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12910:6:1",
														"nodeType": "YulTypedName",
														"src": "12910:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12918:6:1",
														"nodeType": "YulTypedName",
														"src": "12918:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12929:4:1",
														"nodeType": "YulTypedName",
														"src": "12929:4:1",
														"type": ""
													}
												],
												"src": "12808:332:1"
											},
											{
												"body": {
													"nativeSrc": "13300:288:1",
													"nodeType": "YulBlock",
													"src": "13300:288:1",
													"statements": [
														{
															"nativeSrc": "13310:26:1",
															"nodeType": "YulAssignment",
															"src": "13310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13322:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13322:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13333:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13333:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13318:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13318:3:1"
																},
																"nativeSrc": "13318:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13310:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13310:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13390:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13390:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13403:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13403:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13414:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13414:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13399:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13399:3:1"
																		},
																		"nativeSrc": "13399:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13399:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13346:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13346:43:1"
																},
																"nativeSrc": "13346:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13346:71:1"
															},
															"nativeSrc": "13346:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13346:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13471:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13471:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13484:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13484:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13495:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13495:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13480:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13480:3:1"
																		},
																		"nativeSrc": "13480:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13480:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13427:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13427:43:1"
																},
																"nativeSrc": "13427:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13427:72:1"
															},
															"nativeSrc": "13427:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13427:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13577:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13577:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13562:3:1"
																		},
																		"nativeSrc": "13562:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13562:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13509:43:1"
																},
																"nativeSrc": "13509:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13509:72:1"
															},
															"nativeSrc": "13509:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13509:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13146:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13256:9:1",
														"nodeType": "YulTypedName",
														"src": "13256:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13268:6:1",
														"nodeType": "YulTypedName",
														"src": "13268:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13276:6:1",
														"nodeType": "YulTypedName",
														"src": "13276:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13284:6:1",
														"nodeType": "YulTypedName",
														"src": "13284:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13295:4:1",
														"nodeType": "YulTypedName",
														"src": "13295:4:1",
														"type": ""
													}
												],
												"src": "13146:442:1"
											},
											{
												"body": {
													"nativeSrc": "13622:152:1",
													"nodeType": "YulBlock",
													"src": "13622:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13639:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13639:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13642:77:1",
																		"nodeType": "YulLiteral",
																		"src": "13642:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13632:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13632:6:1"
																},
																"nativeSrc": "13632:88:1",
																"nodeType": "YulFunctionCall",
																"src": "13632:88:1"
															},
															"nativeSrc": "13632:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "13632:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13736:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13736:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13739:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13739:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13729:6:1"
																},
																"nativeSrc": "13729:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13729:15:1"
															},
															"nativeSrc": "13729:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13729:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13760:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13760:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13763:4:1",
																		"nodeType": "YulLiteral",
																		"src": "13763:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13753:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13753:6:1"
																},
																"nativeSrc": "13753:15:1",
																"nodeType": "YulFunctionCall",
																"src": "13753:15:1"
															},
															"nativeSrc": "13753:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "13753:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13594:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "13594:180:1"
											},
											{
												"body": {
													"nativeSrc": "13824:147:1",
													"nodeType": "YulBlock",
													"src": "13824:147:1",
													"statements": [
														{
															"nativeSrc": "13834:25:1",
															"nodeType": "YulAssignment",
															"src": "13834:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13857:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13857:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13839:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13839:17:1"
																},
																"nativeSrc": "13839:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13839:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13834:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13834:1:1"
																}
															]
														},
														{
															"nativeSrc": "13868:25:1",
															"nodeType": "YulAssignment",
															"src": "13868:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13891:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13891:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13873:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "13873:17:1"
																},
																"nativeSrc": "13873:20:1",
																"nodeType": "YulFunctionCall",
																"src": "13873:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13868:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "13868:1:1"
																}
															]
														},
														{
															"nativeSrc": "13902:16:1",
															"nodeType": "YulAssignment",
															"src": "13902:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13913:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13913:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13916:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13916:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13909:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13909:3:1"
																},
																"nativeSrc": "13909:9:1",
																"nodeType": "YulFunctionCall",
																"src": "13909:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13902:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13902:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13942:22:1",
																"nodeType": "YulBlock",
																"src": "13942:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13944:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "13944:16:1"
																			},
																			"nativeSrc": "13944:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13944:18:1"
																		},
																		"nativeSrc": "13944:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13944:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13934:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "13934:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13937:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13937:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13931:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "13931:2:1"
																},
																"nativeSrc": "13931:10:1",
																"nodeType": "YulFunctionCall",
																"src": "13931:10:1"
															},
															"nativeSrc": "13928:36:1",
															"nodeType": "YulIf",
															"src": "13928:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13780:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13811:1:1",
														"nodeType": "YulTypedName",
														"src": "13811:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13814:1:1",
														"nodeType": "YulTypedName",
														"src": "13814:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13820:3:1",
														"nodeType": "YulTypedName",
														"src": "13820:3:1",
														"type": ""
													}
												],
												"src": "13780:191:1"
											},
											{
												"body": {
													"nativeSrc": "14187:454:1",
													"nodeType": "YulBlock",
													"src": "14187:454:1",
													"statements": [
														{
															"nativeSrc": "14197:27:1",
															"nodeType": "YulAssignment",
															"src": "14197:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14209:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14209:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14220:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14220:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14205:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14205:3:1"
																},
																"nativeSrc": "14205:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14205:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14197:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14197:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14278:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14278:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14291:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14291:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14302:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14302:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14287:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14287:3:1"
																		},
																		"nativeSrc": "14287:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14287:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14234:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14234:43:1"
																},
																"nativeSrc": "14234:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14234:71:1"
															},
															"nativeSrc": "14234:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14234:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14359:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14359:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14372:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14372:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14383:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14383:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14368:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14368:3:1"
																		},
																		"nativeSrc": "14368:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14368:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14315:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14315:43:1"
																},
																"nativeSrc": "14315:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14315:72:1"
															},
															"nativeSrc": "14315:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14315:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14441:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14441:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14454:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14454:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14465:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14465:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14450:3:1"
																		},
																		"nativeSrc": "14450:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14450:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14397:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14397:43:1"
																},
																"nativeSrc": "14397:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14397:72:1"
															},
															"nativeSrc": "14397:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14397:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14523:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14536:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14536:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14547:2:1",
																				"nodeType": "YulLiteral",
																				"src": "14547:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14532:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14532:3:1"
																		},
																		"nativeSrc": "14532:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14532:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14479:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14479:43:1"
																},
																"nativeSrc": "14479:72:1",
																"nodeType": "YulFunctionCall",
																"src": "14479:72:1"
															},
															"nativeSrc": "14479:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "14479:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14605:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14605:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14618:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14618:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14629:3:1",
																				"nodeType": "YulLiteral",
																				"src": "14629:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14614:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14614:3:1"
																		},
																		"nativeSrc": "14614:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14614:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14561:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14561:43:1"
																},
																"nativeSrc": "14561:73:1",
																"nodeType": "YulFunctionCall",
																"src": "14561:73:1"
															},
															"nativeSrc": "14561:73:1",
															"nodeType": "YulExpressionStatement",
															"src": "14561:73:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13977:664:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14127:9:1",
														"nodeType": "YulTypedName",
														"src": "14127:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "14139:6:1",
														"nodeType": "YulTypedName",
														"src": "14139:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14147:6:1",
														"nodeType": "YulTypedName",
														"src": "14147:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14155:6:1",
														"nodeType": "YulTypedName",
														"src": "14155:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14163:6:1",
														"nodeType": "YulTypedName",
														"src": "14163:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14171:6:1",
														"nodeType": "YulTypedName",
														"src": "14171:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14182:4:1",
														"nodeType": "YulTypedName",
														"src": "14182:4:1",
														"type": ""
													}
												],
												"src": "13977:664:1"
											},
											{
												"body": {
													"nativeSrc": "14825:367:1",
													"nodeType": "YulBlock",
													"src": "14825:367:1",
													"statements": [
														{
															"nativeSrc": "14835:27:1",
															"nodeType": "YulAssignment",
															"src": "14835:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14847:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14847:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14858:3:1",
																		"nodeType": "YulLiteral",
																		"src": "14858:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14843:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14843:3:1"
																},
																"nativeSrc": "14843:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14843:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14835:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14835:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14916:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14916:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14929:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14929:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14940:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14940:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14925:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14925:3:1"
																		},
																		"nativeSrc": "14925:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14925:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "14872:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "14872:43:1"
																},
																"nativeSrc": "14872:71:1",
																"nodeType": "YulFunctionCall",
																"src": "14872:71:1"
															},
															"nativeSrc": "14872:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "14872:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14993:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14993:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15006:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15006:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15017:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15017:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15002:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15002:3:1"
																		},
																		"nativeSrc": "15002:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15002:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "14953:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "14953:39:1"
																},
																"nativeSrc": "14953:68:1",
																"nodeType": "YulFunctionCall",
																"src": "14953:68:1"
															},
															"nativeSrc": "14953:68:1",
															"nodeType": "YulExpressionStatement",
															"src": "14953:68:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15075:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15075:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15088:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15088:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15099:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15099:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15084:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15084:3:1"
																		},
																		"nativeSrc": "15084:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15084:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15031:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "15031:43:1"
																},
																"nativeSrc": "15031:72:1",
																"nodeType": "YulFunctionCall",
																"src": "15031:72:1"
															},
															"nativeSrc": "15031:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "15031:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15157:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15157:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15170:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15170:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15181:2:1",
																				"nodeType": "YulLiteral",
																				"src": "15181:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15166:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15166:3:1"
																		},
																		"nativeSrc": "15166:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15166:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "15113:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "15113:43:1"
																},
																"nativeSrc": "15113:72:1",
																"nodeType": "YulFunctionCall",
																"src": "15113:72:1"
															},
															"nativeSrc": "15113:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "15113:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "14647:545:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14773:9:1",
														"nodeType": "YulTypedName",
														"src": "14773:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "14785:6:1",
														"nodeType": "YulTypedName",
														"src": "14785:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14793:6:1",
														"nodeType": "YulTypedName",
														"src": "14793:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14801:6:1",
														"nodeType": "YulTypedName",
														"src": "14801:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14809:6:1",
														"nodeType": "YulTypedName",
														"src": "14809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14820:4:1",
														"nodeType": "YulTypedName",
														"src": "14820:4:1",
														"type": ""
													}
												],
												"src": "14647:545:1"
											},
											{
												"body": {
													"nativeSrc": "15226:152:1",
													"nodeType": "YulBlock",
													"src": "15226:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15243:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15243:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15246:77:1",
																		"nodeType": "YulLiteral",
																		"src": "15246:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15236:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15236:6:1"
																},
																"nativeSrc": "15236:88:1",
																"nodeType": "YulFunctionCall",
																"src": "15236:88:1"
															},
															"nativeSrc": "15236:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "15236:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15340:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15340:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15343:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15343:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15333:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15333:6:1"
																},
																"nativeSrc": "15333:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15333:15:1"
															},
															"nativeSrc": "15333:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15333:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15364:1:1",
																		"nodeType": "YulLiteral",
																		"src": "15364:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15367:4:1",
																		"nodeType": "YulLiteral",
																		"src": "15367:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15357:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15357:6:1"
																},
																"nativeSrc": "15357:15:1",
																"nodeType": "YulFunctionCall",
																"src": "15357:15:1"
															},
															"nativeSrc": "15357:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "15357:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "15198:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "15198:180:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1905": [
									{
										"length": 32,
										"start": 2699
									}
								],
								"1907": [
									{
										"length": 32,
										"start": 2658
									}
								],
								"1909": [
									{
										"length": 32,
										"start": 2572
									}
								],
								"1911": [
									{
										"length": 32,
										"start": 4459
									}
								],
								"1913": [
									{
										"length": 32,
										"start": 4492
									}
								],
								"1916": [
									{
										"length": 32,
										"start": 3160
									}
								],
								"1919": [
									{
										"length": 32,
										"start": 3219
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c80637ecebe0011610095578063a9059cbb11610064578063a9059cbb146102a4578063d505accf146102d4578063dd62ed3e146102f0578063f2fde38b14610320576100fe565b80637ecebe001461021457806384b0196e146102445780638da5cb5b1461026857806395d89b4114610286576100fe565b8063313ce567116100d1578063313ce5671461019e5780633644e515146101bc57806370a08231146101da578063715018a61461020a576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a61033c565b604051610117919061165c565b60405180910390f35b61013a6004803603810190610135919061170d565b6103cc565b6040516101479190611765565b60405180910390f35b6101586103ee565b604051610165919061178d565b60405180910390f35b610188600480360381019061018391906117a6565b6103f7565b6040516101959190611765565b60405180910390f35b6101a6610425565b6040516101b39190611811565b60405180910390f35b6101c461042d565b6040516101d19190611842565b60405180910390f35b6101f460048036038101906101ef919061185b565b61043b565b604051610201919061178d565b60405180910390f35b610212610480565b005b61022e6004803603810190610229919061185b565b610493565b60405161023b919061178d565b60405180910390f35b61024c6104a4565b60405161025f9796959493929190611986565b60405180910390f35b610270610549565b60405161027d9190611a08565b60405180910390f35b61028e610571565b60405161029b919061165c565b60405180910390f35b6102be60048036038101906102b9919061170d565b610601565b6040516102cb9190611765565b60405180910390f35b6102ee60048036038101906102e99190611a75565b610623565b005b61030a60048036038101906103059190611b12565b610768565b604051610317919061178d565b60405180910390f35b61033a6004803603810190610335919061185b565b6107ea565b005b60606003805461034b90611b7d565b80601f016020809104026020016040519081016040528092919081815260200182805461037790611b7d565b80156103c25780601f10610399576101008083540402835291602001916103c2565b820191905f5260205f20905b8154815290600101906020018083116103a557829003601f168201915b5050505050905090565b5f806103d661086e565b90506103e3818585610875565b600191505092915050565b5f600254905090565b5f8061040161086e565b905061040e858285610887565b610419858585610919565b60019150509392505050565b5f6012905090565b5f610436610a09565b905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610488610abf565b6104915f610b46565b565b5f61049d82610c09565b9050919050565b5f6060805f805f60606104b5610c4f565b6104bd610c8a565b46305f801b5f67ffffffffffffffff8111156104dc576104db611bad565b5b60405190808252806020026020018201604052801561050a5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461058090611b7d565b80601f01602080910402602001604051908101604052809291908181526020018280546105ac90611b7d565b80156105f75780601f106105ce576101008083540402835291602001916105f7565b820191905f5260205f20905b8154815290600101906020018083116105da57829003601f168201915b5050505050905090565b5f8061060b61086e565b9050610618818585610919565b600191505092915050565b8342111561066857836040517f6279130200000000000000000000000000000000000000000000000000000000815260040161065f919061178d565b60405180910390fd5b5f7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886106968c610cc5565b896040516020016106ac96959493929190611bda565b6040516020818303038152906040528051906020012090505f6106ce82610d18565b90505f6106dd82878787610d31565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461075157808a6040517f4b800e46000000000000000000000000000000000000000000000000000000008152600401610748929190611c39565b60405180910390fd5b61075c8a8a8a610875565b50505050505050505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107f2610abf565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610862575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108599190611a08565b60405180910390fd5b61086b81610b46565b50565b5f33905090565b6108828383836001610d5f565b505050565b5f6108928484610768565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109135781811015610904578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108fb93929190611c60565b60405180910390fd5b61091284848484035f610d5f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610989575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109809190611a08565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109f9575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109f09190611a08565b60405180910390fd5b610a04838383610f2e565b505050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610a8457507f000000000000000000000000000000000000000000000000000000000000000046145b15610ab1577f00000000000000000000000000000000000000000000000000000000000000009050610abc565b610ab9611147565b90505b90565b610ac761086e565b73ffffffffffffffffffffffffffffffffffffffff16610ae5610549565b73ffffffffffffffffffffffffffffffffffffffff1614610b4457610b0861086e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b3b9190611a08565b60405180910390fd5b565b5f60085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060610c8560057f00000000000000000000000000000000000000000000000000000000000000006111dc90919063ffffffff16565b905090565b6060610cc060067f00000000000000000000000000000000000000000000000000000000000000006111dc90919063ffffffff16565b905090565b5f60075f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f815480929190600101919050559050919050565b5f610d2a610d24610a09565b83611289565b9050919050565b5f805f80610d41888888886112c9565b925092509250610d5182826113b0565b829350505050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dcf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610dc69190611a08565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e3f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610e369190611a08565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610f28578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610f1f919061178d565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f7e578060025f828254610f729190611cc2565b9250508190555061104c565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611007578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610ffe93929190611c60565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611093578060025f82825403925050819055506110dd565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161113a919061178d565b60405180910390a3505050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000046306040516020016111c1959493929190611cf5565b60405160208183030381529060405280519060200120905090565b606060ff5f1b83146111f8576111f183611512565b9050611283565b81805461120490611b7d565b80601f016020809104026020016040519081016040528092919081815260200182805461123090611b7d565b801561127b5780601f106112525761010080835404028352916020019161127b565b820191905f5260205f20905b81548152906001019060200180831161125e57829003601f168201915b505050505090505b92915050565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c1115611305575f6003859250925092506113a6565b5f6001888888886040515f81526020016040526040516113289493929190611d46565b6020604051602081039080840390855afa158015611348573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611399575f60015f801b935093509350506113a6565b805f805f1b935093509350505b9450945094915050565b5f60038111156113c3576113c2611d89565b5b8260038111156113d6576113d5611d89565b5b031561150e57600160038111156113f0576113ef611d89565b5b82600381111561140357611402611d89565b5b0361143a576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600381111561144e5761144d611d89565b5b82600381111561146157611460611d89565b5b036114a557805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161149c919061178d565b60405180910390fd5b6003808111156114b8576114b7611d89565b5b8260038111156114cb576114ca611d89565b5b0361150d57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016115049190611842565b60405180910390fd5b5b5050565b60605f61151e83611584565b90505f602067ffffffffffffffff81111561153c5761153b611bad565b5b6040519080825280601f01601f19166020018201604052801561156e5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f8060ff835f1c169050601f8111156115c9576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f81519050919050565b5f82825260208201905092915050565b5f5b838110156116095780820151818401526020810190506115ee565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61162e826115d2565b61163881856115dc565b93506116488185602086016115ec565b61165181611614565b840191505092915050565b5f6020820190508181035f8301526116748184611624565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6116a982611680565b9050919050565b6116b98161169f565b81146116c3575f80fd5b50565b5f813590506116d4816116b0565b92915050565b5f819050919050565b6116ec816116da565b81146116f6575f80fd5b50565b5f81359050611707816116e3565b92915050565b5f80604083850312156117235761172261167c565b5b5f611730858286016116c6565b9250506020611741858286016116f9565b9150509250929050565b5f8115159050919050565b61175f8161174b565b82525050565b5f6020820190506117785f830184611756565b92915050565b611787816116da565b82525050565b5f6020820190506117a05f83018461177e565b92915050565b5f805f606084860312156117bd576117bc61167c565b5b5f6117ca868287016116c6565b93505060206117db868287016116c6565b92505060406117ec868287016116f9565b9150509250925092565b5f60ff82169050919050565b61180b816117f6565b82525050565b5f6020820190506118245f830184611802565b92915050565b5f819050919050565b61183c8161182a565b82525050565b5f6020820190506118555f830184611833565b92915050565b5f602082840312156118705761186f61167c565b5b5f61187d848285016116c6565b91505092915050565b5f7fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6118ba81611886565b82525050565b6118c98161169f565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611901816116da565b82525050565b5f61191283836118f8565b60208301905092915050565b5f602082019050919050565b5f611934826118cf565b61193e81856118d9565b9350611949836118e9565b805f5b838110156119795781516119608882611907565b975061196b8361191e565b92505060018101905061194c565b5085935050505092915050565b5f60e0820190506119995f83018a6118b1565b81810360208301526119ab8189611624565b905081810360408301526119bf8188611624565b90506119ce606083018761177e565b6119db60808301866118c0565b6119e860a0830185611833565b81810360c08301526119fa818461192a565b905098975050505050505050565b5f602082019050611a1b5f8301846118c0565b92915050565b611a2a816117f6565b8114611a34575f80fd5b50565b5f81359050611a4581611a21565b92915050565b611a548161182a565b8114611a5e575f80fd5b50565b5f81359050611a6f81611a4b565b92915050565b5f805f805f805f60e0888a031215611a9057611a8f61167c565b5b5f611a9d8a828b016116c6565b9750506020611aae8a828b016116c6565b9650506040611abf8a828b016116f9565b9550506060611ad08a828b016116f9565b9450506080611ae18a828b01611a37565b93505060a0611af28a828b01611a61565b92505060c0611b038a828b01611a61565b91505092959891949750929550565b5f8060408385031215611b2857611b2761167c565b5b5f611b35858286016116c6565b9250506020611b46858286016116c6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611b9457607f821691505b602082108103611ba757611ba6611b50565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60c082019050611bed5f830189611833565b611bfa60208301886118c0565b611c0760408301876118c0565b611c14606083018661177e565b611c21608083018561177e565b611c2e60a083018461177e565b979650505050505050565b5f604082019050611c4c5f8301856118c0565b611c5960208301846118c0565b9392505050565b5f606082019050611c735f8301866118c0565b611c80602083018561177e565b611c8d604083018461177e565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611ccc826116da565b9150611cd7836116da565b9250828201905080821115611cef57611cee611c95565b5b92915050565b5f60a082019050611d085f830188611833565b611d156020830187611833565b611d226040830186611833565b611d2f606083018561177e565b611d3c60808301846118c0565b9695505050505050565b5f608082019050611d595f830187611833565b611d666020830186611802565b611d736040830185611833565b611d806060830184611833565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffdfea2646970667358221220a283f1fe54333757acc576d59a1dd509542392ac5d9099e8c596fe11c39397fb64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x320 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x286 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x20A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x33C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x1811 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x42D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x201 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH2 0x480 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH2 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25F SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27D SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH2 0x571 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x170D JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1765 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1A75 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1B12 JUMP JUMPDEST PUSH2 0x768 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x34B SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x377 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x399 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3D6 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP PUSH2 0x3E3 DUP2 DUP6 DUP6 PUSH2 0x875 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x401 PUSH2 0x86E JUMP JUMPDEST SWAP1 POP PUSH2 0x40E DUP6 DUP3 DUP6 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x419 DUP6 DUP6 DUP6 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x436 PUSH2 0xA09 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x488 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x491 PUSH0 PUSH2 0xB46 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x49D DUP3 PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x60 PUSH2 0x4B5 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x4BD PUSH2 0xC8A JUMP JUMPDEST CHAINID ADDRESS PUSH0 DUP1 SHL PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4DC JUMPI PUSH2 0x4DB PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x50A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x580 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5AC SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5F7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5F7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x60B PUSH2 0x86E JUMP JUMPDEST SWAP1 POP PUSH2 0x618 DUP2 DUP6 DUP6 PUSH2 0x919 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0x668 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x6279130200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0x696 DUP13 PUSH2 0xCC5 JUMP JUMPDEST DUP10 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6AC SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH0 PUSH2 0x6CE DUP3 PUSH2 0xD18 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6DD DUP3 DUP8 DUP8 DUP8 PUSH2 0xD31 JUMP JUMPDEST SWAP1 POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x751 JUMPI DUP1 DUP11 PUSH1 0x40 MLOAD PUSH32 0x4B800E4600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x748 SWAP3 SWAP2 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75C DUP11 DUP11 DUP11 PUSH2 0x875 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0xABF JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x862 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86B DUP2 PUSH2 0xB46 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x882 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xD5F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x892 DUP5 DUP5 PUSH2 0x768 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x913 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x904 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x912 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xD5F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x989 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x980 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F0 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA04 DUP4 DUP4 DUP4 PUSH2 0xF2E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xA84 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0xAB1 JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0xABC JUMP JUMPDEST PUSH2 0xAB9 PUSH2 0x1147 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x86E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xAE5 PUSH2 0x549 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB44 JUMPI PUSH2 0xB08 PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3B SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC85 PUSH1 0x5 PUSH32 0x0 PUSH2 0x11DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCC0 PUSH1 0x6 PUSH32 0x0 PUSH2 0x11DC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD2A PUSH2 0xD24 PUSH2 0xA09 JUMP JUMPDEST DUP4 PUSH2 0x1289 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0xD41 DUP9 DUP9 DUP9 DUP9 PUSH2 0x12C9 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0xD51 DUP3 DUP3 PUSH2 0x13B0 JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC6 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP2 SWAP1 PUSH2 0x1A08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xF28 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF1F SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF7E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x1CC2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x104C JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1007 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFFE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1093 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x10DD JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x113A SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x11C1 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH0 SHL DUP4 EQ PUSH2 0x11F8 JUMPI PUSH2 0x11F1 DUP4 PUSH2 0x1512 JUMP JUMPDEST SWAP1 POP PUSH2 0x1283 JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x1204 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1230 SWAP1 PUSH2 0x1B7D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x127B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1252 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x127B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x125E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH0 SHR GT ISZERO PUSH2 0x1305 JUMPI PUSH0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x13A6 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1328 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1348 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1399 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x13A6 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C3 JUMPI PUSH2 0x13C2 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13D6 JUMPI PUSH2 0x13D5 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x150E JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x13EF PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1403 JUMPI PUSH2 0x1402 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x143A JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x144E JUMPI PUSH2 0x144D PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1461 JUMPI PUSH2 0x1460 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x14A5 JUMPI DUP1 PUSH0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149C SWAP2 SWAP1 PUSH2 0x178D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x14B8 JUMPI PUSH2 0x14B7 PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CA PUSH2 0x1D89 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x150D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1504 SWAP2 SWAP1 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x151E DUP4 PUSH2 0x1584 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x153C JUMPI PUSH2 0x153B PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x156E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xFF DUP4 PUSH0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1609 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15EE JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x162E DUP3 PUSH2 0x15D2 JUMP JUMPDEST PUSH2 0x1638 DUP2 DUP6 PUSH2 0x15DC JUMP JUMPDEST SWAP4 POP PUSH2 0x1648 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x1651 DUP2 PUSH2 0x1614 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1674 DUP2 DUP5 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16A9 DUP3 PUSH2 0x1680 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B9 DUP2 PUSH2 0x169F JUMP JUMPDEST DUP2 EQ PUSH2 0x16C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16D4 DUP2 PUSH2 0x16B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EC DUP2 PUSH2 0x16DA JUMP JUMPDEST DUP2 EQ PUSH2 0x16F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1707 DUP2 PUSH2 0x16E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1723 JUMPI PUSH2 0x1722 PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1730 DUP6 DUP3 DUP7 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1741 DUP6 DUP3 DUP7 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175F DUP2 PUSH2 0x174B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1778 PUSH0 DUP4 ADD DUP5 PUSH2 0x1756 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1787 DUP2 PUSH2 0x16DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x177E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17BD JUMPI PUSH2 0x17BC PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17CA DUP7 DUP3 DUP8 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x17DB DUP7 DUP3 DUP8 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17EC DUP7 DUP3 DUP8 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180B DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1824 PUSH0 DUP4 ADD DUP5 PUSH2 0x1802 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x183C DUP2 PUSH2 0x182A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1855 PUSH0 DUP4 ADD DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1870 JUMPI PUSH2 0x186F PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x187D DUP5 DUP3 DUP6 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18BA DUP2 PUSH2 0x1886 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x18C9 DUP2 PUSH2 0x169F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1901 DUP2 PUSH2 0x16DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1912 DUP4 DUP4 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1934 DUP3 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x193E DUP2 DUP6 PUSH2 0x18D9 JUMP JUMPDEST SWAP4 POP PUSH2 0x1949 DUP4 PUSH2 0x18E9 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1979 JUMPI DUP2 MLOAD PUSH2 0x1960 DUP9 DUP3 PUSH2 0x1907 JUMP JUMPDEST SWAP8 POP PUSH2 0x196B DUP4 PUSH2 0x191E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x194C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x1999 PUSH0 DUP4 ADD DUP11 PUSH2 0x18B1 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x19AB DUP2 DUP10 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x19BF DUP2 DUP9 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP PUSH2 0x19CE PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x19DB PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x19E8 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1833 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x19FA DUP2 DUP5 PUSH2 0x192A JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A1B PUSH0 DUP4 ADD DUP5 PUSH2 0x18C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A2A DUP2 PUSH2 0x17F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A34 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A45 DUP2 PUSH2 0x1A21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A54 DUP2 PUSH2 0x182A JUMP JUMPDEST DUP2 EQ PUSH2 0x1A5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A6F DUP2 PUSH2 0x1A4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A8F PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A9D DUP11 DUP3 DUP12 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x1AAE DUP11 DUP3 DUP12 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x1ABF DUP11 DUP3 DUP12 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x1AD0 DUP11 DUP3 DUP12 ADD PUSH2 0x16F9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x1AE1 DUP11 DUP3 DUP12 ADD PUSH2 0x1A37 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x1AF2 DUP11 DUP3 DUP12 ADD PUSH2 0x1A61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x1B03 DUP11 DUP3 DUP12 ADD PUSH2 0x1A61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B28 JUMPI PUSH2 0x1B27 PUSH2 0x167C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B35 DUP6 DUP3 DUP7 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B46 DUP6 DUP3 DUP7 ADD PUSH2 0x16C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B94 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BA7 JUMPI PUSH2 0x1BA6 PUSH2 0x1B50 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1BED PUSH0 DUP4 ADD DUP10 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1BFA PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x1C07 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x1C14 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1C21 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1C2E PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x177E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4C PUSH0 DUP4 ADD DUP6 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x1C59 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1C73 PUSH0 DUP4 ADD DUP7 PUSH2 0x18C0 JUMP JUMPDEST PUSH2 0x1C80 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1C8D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x177E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1CCC DUP3 PUSH2 0x16DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD7 DUP4 PUSH2 0x16DA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CEF JUMPI PUSH2 0x1CEE PUSH2 0x1C95 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D08 PUSH0 DUP4 ADD DUP9 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D15 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D22 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D2F PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x177E JUMP JUMPDEST PUSH2 0x1D3C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x18C0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1D59 PUSH0 DUP4 ADD DUP8 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D66 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1802 JUMP JUMPDEST PUSH2 0x1D73 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1833 JUMP JUMPDEST PUSH2 0x1D80 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 DUP4 CALL INVALID SLOAD CALLER CALLDATACOPY JUMPI 0xAC 0xC5 PUSH23 0xD59A1DD509542392AC5D9099E8C596FE11C39397FB6473 PUSH16 0x6C634300081600330000000000000000 ",
							"sourceMap": "79652:256:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67953:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;70172:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;69023:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;70918:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;68881:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79472:112;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;69178:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;61742:101;;;:::i;:::-;;79222:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;38813:557;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;61087:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;68155:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;69489:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;78496:672;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;69725:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;61992:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;67953:89;67998:13;68030:5;68023:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;67953:89;:::o;70172:186::-;70245:4;70261:13;70277:12;:10;:12::i;:::-;70261:28;;70299:31;70308:5;70315:7;70324:5;70299:8;:31::i;:::-;70347:4;70340:11;;;70172:186;;;;:::o;69023:97::-;69075:7;69101:12;;69094:19;;69023:97;:::o;70918:244::-;71005:4;71021:15;71039:12;:10;:12::i;:::-;71021:30;;71061:37;71077:4;71083:7;71092:5;71061:15;:37::i;:::-;71108:26;71118:4;71124:2;71128:5;71108:9;:26::i;:::-;71151:4;71144:11;;;70918:244;;;;;:::o;68881:82::-;68930:5;68954:2;68947:9;;68881:82;:::o;79472:112::-;79531:7;79557:20;:18;:20::i;:::-;79550:27;;79472:112;:::o;69178:116::-;69243:7;69269:9;:18;69279:7;69269:18;;;;;;;;;;;;;;;;69262:25;;69178:116;;;:::o;61742:101::-;60980:13;:11;:13::i;:::-;61806:30:::1;61833:1;61806:18;:30::i;:::-;61742:101::o:0;79222:143::-;79313:7;79339:19;79352:5;79339:12;:19::i;:::-;79332:26;;79222:143;;;:::o;38813:557::-;38911:13;38938:18;38970:21;39005:15;39034:25;39073:12;39099:27;39202:13;:11;:13::i;:::-;39229:16;:14;:16::i;:::-;39259:13;39294:4;39321:1;39313:10;;39351:1;39337:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39151:212;;;;;;;;;;;;;;;;;;;;;38813:557;;;;;;;:::o;61087:85::-;61133:7;61159:6;;;;;;;;;;;61152:13;;61087:85;:::o;68155:93::-;68202:13;68234:7;68227:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68155:93;:::o;69489:178::-;69558:4;69574:13;69590:12;:10;:12::i;:::-;69574:28;;69612:27;69622:5;69629:2;69633:5;69612:9;:27::i;:::-;69656:4;69649:11;;;69489:178;;;;:::o;78496:672::-;78717:8;78699:15;:26;78695:97;;;78772:8;78748:33;;;;;;;;;;;:::i;:::-;;;;;;;;78695:97;78802:18;77838:95;78861:5;78868:7;78877:5;78884:16;78894:5;78884:9;:16::i;:::-;78902:8;78833:78;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;78823:89;;;;;;78802:110;;78923:12;78938:28;78955:10;78938:16;:28::i;:::-;78923:43;;78977:14;78994:28;79008:4;79014:1;79017;79020;78994:13;:28::i;:::-;78977:45;;79046:5;79036:15;;:6;:15;;;79032:88;;79095:6;79103:5;79074:35;;;;;;;;;;;;:::i;:::-;;;;;;;;79032:88;79130:31;79139:5;79146:7;79155:5;79130:8;:31::i;:::-;78685:483;;;78496:672;;;;;;;:::o;69725:140::-;69805:7;69831:11;:18;69843:5;69831:18;;;;;;;;;;;;;;;:27;69850:7;69831:27;;;;;;;;;;;;;;;;69824:34;;69725:140;;;;:::o;61992:215::-;60980:13;:11;:13::i;:::-;62096:1:::1;62076:22;;:8;:22;;::::0;62072:91:::1;;62149:1;62121:31;;;;;;;;;;;:::i;:::-;;;;;;;;62072:91;62172:28;62191:8;62172:18;:28::i;:::-;61992:215:::0;:::o;59159:96::-;59212:7;59238:10;59231:17;;59159:96;:::o;74868:128::-;74952:37;74961:5;74968:7;74977:5;74984:4;74952:8;:37::i;:::-;74868:128;;;:::o;76542:477::-;76641:24;76668:25;76678:5;76685:7;76668:9;:25::i;:::-;76641:52;;76727:17;76707:16;:37;76703:310;;76783:5;76764:16;:24;76760:130;;;76842:7;76851:16;76869:5;76815:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;76760:130;76931:57;76940:5;76947:7;76975:5;76956:16;:24;76982:5;76931:8;:57::i;:::-;76703:310;76631:388;76542:477;;;:::o;71535:300::-;71634:1;71618:18;;:4;:18;;;71614:86;;71686:1;71659:30;;;;;;;;;;;:::i;:::-;;;;;;;;71614:86;71727:1;71713:16;;:2;:16;;;71709:86;;71781:1;71752:32;;;;;;;;;;;:::i;:::-;;;;;;;;71709:86;71804:24;71812:4;71818:2;71822:5;71804:7;:24::i;:::-;71535:300;;;:::o;37514:262::-;37567:7;37607:11;37590:28;;37598:4;37590:28;;;:63;;;;;37639:14;37622:13;:31;37590:63;37586:184;;;37676:22;37669:29;;;;37586:184;37736:23;:21;:23::i;:::-;37729:30;;37514:262;;:::o;61245:162::-;61315:12;:10;:12::i;:::-;61304:23;;:7;:5;:7::i;:::-;:23;;;61300:101;;61377:12;:10;:12::i;:::-;61350:40;;;;;;;;;;;:::i;:::-;;;;;;;;61300:101;61245:162::o;62361:187::-;62434:16;62453:6;;;;;;;;;;;62434:25;;62478:8;62469:6;;:17;;;;;;;;;;;;;;;;;;62532:8;62501:40;;62522:8;62501:40;;;;;;;;;;;;62424:124;62361:187;:::o;565:107::-;625:7;651;:14;659:5;651:14;;;;;;;;;;;;;;;;644:21;;565:107;;;:::o;39690:126::-;39736:13;39768:41;39795:13;39768:5;:26;;:41;;;;:::i;:::-;39761:48;;39690:126;:::o;40142:135::-;40191:13;40223:47;40253:16;40223:8;:29;;:47;;;;:::i;:::-;40216:54;;40142:135;:::o;786:395::-;846:7;1148;:14;1156:5;1148:14;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1141:23;;786:395;;;:::o;38586:176::-;38663:7;38689:66;38722:20;:18;:20::i;:::-;38744:10;38689:32;:66::i;:::-;38682:73;;38586:176;;;:::o;47122:260::-;47207:7;47227:17;47246:18;47266:16;47286:25;47297:4;47303:1;47306;47309;47286:10;:25::i;:::-;47226:85;;;;;;47321:28;47333:5;47340:8;47321:11;:28::i;:::-;47366:9;47359:16;;;;;47122:260;;;;;;:::o;75828:432::-;75957:1;75940:19;;:5;:19;;;75936:89;;76011:1;75982:32;;;;;;;;;;;:::i;:::-;;;;;;;;75936:89;76057:1;76038:21;;:7;:21;;;76034:90;;76110:1;76082:31;;;;;;;;;;;:::i;:::-;;;;;;;;76034:90;76163:5;76133:11;:18;76145:5;76133:18;;;;;;;;;;;;;;;:27;76152:7;76133:27;;;;;;;;;;;;;;;:35;;;;76182:9;76178:76;;;76228:7;76212:31;;76221:5;76212:31;;;76237:5;76212:31;;;;;;:::i;:::-;;;;;;;;76178:76;75828:432;;;;:::o;72150:1107::-;72255:1;72239:18;;:4;:18;;;72235:540;;72391:5;72375:12;;:21;;;;;;;:::i;:::-;;;;;;;;72235:540;;;72427:19;72449:9;:15;72459:4;72449:15;;;;;;;;;;;;;;;;72427:37;;72496:5;72482:11;:19;72478:115;;;72553:4;72559:11;72572:5;72528:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;72478:115;72745:5;72731:11;:19;72713:9;:15;72723:4;72713:15;;;;;;;;;;;;;;;:37;;;;72413:362;72235:540;72803:1;72789:16;;:2;:16;;;72785:425;;72968:5;72952:12;;:21;;;;;;;;;;;72785:425;;;73180:5;73163:9;:13;73173:2;73163:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;72785:425;73240:2;73225:25;;73234:4;73225:25;;;73244:5;73225:25;;;;;;:::i;:::-;;;;;;;;72150:1107;;;:::o;37782:179::-;37837:7;35748:95;37895:11;37908:14;37924:13;37947:4;37873:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;37863:91;;;;;;37856:98;;37782:179;:::o;9624:267::-;9718:13;7629:66;9776:17;;9766:5;9747:46;9743:142;;9816:15;9825:5;9816:8;:15::i;:::-;9809:22;;;;9743:142;9869:5;9862:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9624:267;;;;;:::o;33399:401::-;33492:14;33601:4;33595:11;33631:10;33626:3;33619:23;33678:15;33671:4;33666:3;33662:14;33655:39;33730:10;33723:4;33718:3;33714:14;33707:34;33779:4;33774:3;33764:20;33754:30;;33570:224;33399:401;;;;:::o;45459:1530::-;45585:7;45594:12;45608:7;46518:66;46513:1;46505:10;;:79;46501:164;;;46616:1;46620:30;46652:1;46600:54;;;;;;;;46501:164;46759:14;46776:24;46786:4;46792:1;46795;46798;46776:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46759:41;;46832:1;46814:20;;:6;:20;;;46810:113;;46866:1;46870:29;46909:1;46901:10;;46850:62;;;;;;;;;46810:113;46941:6;46949:20;46979:1;46971:10;;46933:49;;;;;;;45459:1530;;;;;;;;;:::o;47515:532::-;47610:20;47601:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;47597:444;47646:7;47597:444;47706:29;47697:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;47693:348;;47758:23;;;;;;;;;;;;;;47693:348;47811:35;47802:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;47798:243;;47905:8;47897:17;;47869:46;;;;;;;;;;;:::i;:::-;;;;;;;;47798:243;47945:30;47936:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;47932:109;;48021:8;47998:32;;;;;;;;;;;:::i;:::-;;;;;;;;47932:109;47515:532;;;:::o;8317:405::-;8376:13;8401:11;8415:16;8426:4;8415:10;:16::i;:::-;8401:30;;8519:17;8550:2;8539:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8519:34;;8641:3;8636;8629:16;8681:4;8674;8669:3;8665:14;8658:28;8712:3;8705:10;;;;8317:405;;;:::o;8794:245::-;8855:7;8874:14;8927:4;8918;8891:33;;:40;8874:57;;8954:2;8945:6;:11;8941:69;;;8979:20;;;;;;;;;;;;;;8941:69;9026:6;9019:13;;;8794:245;;;:::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:77::-;4890:7;4919:5;4908:16;;4853:77;;;:::o;4936:118::-;5023:24;5041:5;5023:24;:::i;:::-;5018:3;5011:37;4936:118;;:::o;5060:222::-;5153:4;5191:2;5180:9;5176:18;5168:26;;5204:71;5272:1;5261:9;5257:17;5248:6;5204:71;:::i;:::-;5060:222;;;;:::o;5288:329::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:53;5592:7;5583:6;5572:9;5568:22;5547:53;:::i;:::-;5537:63;;5493:117;5288:329;;;;:::o;5623:149::-;5659:7;5699:66;5692:5;5688:78;5677:89;;5623:149;;;:::o;5778:115::-;5863:23;5880:5;5863:23;:::i;:::-;5858:3;5851:36;5778:115;;:::o;5899:118::-;5986:24;6004:5;5986:24;:::i;:::-;5981:3;5974:37;5899:118;;:::o;6023:114::-;6090:6;6124:5;6118:12;6108:22;;6023:114;;;:::o;6143:184::-;6242:11;6276:6;6271:3;6264:19;6316:4;6311:3;6307:14;6292:29;;6143:184;;;;:::o;6333:132::-;6400:4;6423:3;6415:11;;6453:4;6448:3;6444:14;6436:22;;6333:132;;;:::o;6471:108::-;6548:24;6566:5;6548:24;:::i;:::-;6543:3;6536:37;6471:108;;:::o;6585:179::-;6654:10;6675:46;6717:3;6709:6;6675:46;:::i;:::-;6753:4;6748:3;6744:14;6730:28;;6585:179;;;;:::o;6770:113::-;6840:4;6872;6867:3;6863:14;6855:22;;6770:113;;;:::o;6919:732::-;7038:3;7067:54;7115:5;7067:54;:::i;:::-;7137:86;7216:6;7211:3;7137:86;:::i;:::-;7130:93;;7247:56;7297:5;7247:56;:::i;:::-;7326:7;7357:1;7342:284;7367:6;7364:1;7361:13;7342:284;;;7443:6;7437:13;7470:63;7529:3;7514:13;7470:63;:::i;:::-;7463:70;;7556:60;7609:6;7556:60;:::i;:::-;7546:70;;7402:224;7389:1;7386;7382:9;7377:14;;7342:284;;;7346:14;7642:3;7635:10;;7043:608;;;6919:732;;;;:::o;7657:1215::-;8006:4;8044:3;8033:9;8029:19;8021:27;;8058:69;8124:1;8113:9;8109:17;8100:6;8058:69;:::i;:::-;8174:9;8168:4;8164:20;8159:2;8148:9;8144:18;8137:48;8202:78;8275:4;8266:6;8202:78;:::i;:::-;8194:86;;8327:9;8321:4;8317:20;8312:2;8301:9;8297:18;8290:48;8355:78;8428:4;8419:6;8355:78;:::i;:::-;8347:86;;8443:72;8511:2;8500:9;8496:18;8487:6;8443:72;:::i;:::-;8525:73;8593:3;8582:9;8578:19;8569:6;8525:73;:::i;:::-;8608;8676:3;8665:9;8661:19;8652:6;8608:73;:::i;:::-;8729:9;8723:4;8719:20;8713:3;8702:9;8698:19;8691:49;8757:108;8860:4;8851:6;8757:108;:::i;:::-;8749:116;;7657:1215;;;;;;;;;;:::o;8878:222::-;8971:4;9009:2;8998:9;8994:18;8986:26;;9022:71;9090:1;9079:9;9075:17;9066:6;9022:71;:::i;:::-;8878:222;;;;:::o;9106:118::-;9177:22;9193:5;9177:22;:::i;:::-;9170:5;9167:33;9157:61;;9214:1;9211;9204:12;9157:61;9106:118;:::o;9230:135::-;9274:5;9312:6;9299:20;9290:29;;9328:31;9353:5;9328:31;:::i;:::-;9230:135;;;;:::o;9371:122::-;9444:24;9462:5;9444:24;:::i;:::-;9437:5;9434:35;9424:63;;9483:1;9480;9473:12;9424:63;9371:122;:::o;9499:139::-;9545:5;9583:6;9570:20;9561:29;;9599:33;9626:5;9599:33;:::i;:::-;9499:139;;;;:::o;9644:1199::-;9755:6;9763;9771;9779;9787;9795;9803;9852:3;9840:9;9831:7;9827:23;9823:33;9820:120;;;9859:79;;:::i;:::-;9820:120;9979:1;10004:53;10049:7;10040:6;10029:9;10025:22;10004:53;:::i;:::-;9994:63;;9950:117;10106:2;10132:53;10177:7;10168:6;10157:9;10153:22;10132:53;:::i;:::-;10122:63;;10077:118;10234:2;10260:53;10305:7;10296:6;10285:9;10281:22;10260:53;:::i;:::-;10250:63;;10205:118;10362:2;10388:53;10433:7;10424:6;10413:9;10409:22;10388:53;:::i;:::-;10378:63;;10333:118;10490:3;10517:51;10560:7;10551:6;10540:9;10536:22;10517:51;:::i;:::-;10507:61;;10461:117;10617:3;10644:53;10689:7;10680:6;10669:9;10665:22;10644:53;:::i;:::-;10634:63;;10588:119;10746:3;10773:53;10818:7;10809:6;10798:9;10794:22;10773:53;:::i;:::-;10763:63;;10717:119;9644:1199;;;;;;;;;;:::o;10849:474::-;10917:6;10925;10974:2;10962:9;10953:7;10949:23;10945:32;10942:119;;;10980:79;;:::i;:::-;10942:119;11100:1;11125:53;11170:7;11161:6;11150:9;11146:22;11125:53;:::i;:::-;11115:63;;11071:117;11227:2;11253:53;11298:7;11289:6;11278:9;11274:22;11253:53;:::i;:::-;11243:63;;11198:118;10849:474;;;;;:::o;11329:180::-;11377:77;11374:1;11367:88;11474:4;11471:1;11464:15;11498:4;11495:1;11488:15;11515:320;11559:6;11596:1;11590:4;11586:12;11576:22;;11643:1;11637:4;11633:12;11664:18;11654:81;;11720:4;11712:6;11708:17;11698:27;;11654:81;11782:2;11774:6;11771:14;11751:18;11748:38;11745:84;;11801:18;;:::i;:::-;11745:84;11566:269;11515:320;;;:::o;11841:180::-;11889:77;11886:1;11879:88;11986:4;11983:1;11976:15;12010:4;12007:1;12000:15;12027:775;12260:4;12298:3;12287:9;12283:19;12275:27;;12312:71;12380:1;12369:9;12365:17;12356:6;12312:71;:::i;:::-;12393:72;12461:2;12450:9;12446:18;12437:6;12393:72;:::i;:::-;12475;12543:2;12532:9;12528:18;12519:6;12475:72;:::i;:::-;12557;12625:2;12614:9;12610:18;12601:6;12557:72;:::i;:::-;12639:73;12707:3;12696:9;12692:19;12683:6;12639:73;:::i;:::-;12722;12790:3;12779:9;12775:19;12766:6;12722:73;:::i;:::-;12027:775;;;;;;;;;:::o;12808:332::-;12929:4;12967:2;12956:9;12952:18;12944:26;;12980:71;13048:1;13037:9;13033:17;13024:6;12980:71;:::i;:::-;13061:72;13129:2;13118:9;13114:18;13105:6;13061:72;:::i;:::-;12808:332;;;;;:::o;13146:442::-;13295:4;13333:2;13322:9;13318:18;13310:26;;13346:71;13414:1;13403:9;13399:17;13390:6;13346:71;:::i;:::-;13427:72;13495:2;13484:9;13480:18;13471:6;13427:72;:::i;:::-;13509;13577:2;13566:9;13562:18;13553:6;13509:72;:::i;:::-;13146:442;;;;;;:::o;13594:180::-;13642:77;13639:1;13632:88;13739:4;13736:1;13729:15;13763:4;13760:1;13753:15;13780:191;13820:3;13839:20;13857:1;13839:20;:::i;:::-;13834:25;;13873:20;13891:1;13873:20;:::i;:::-;13868:25;;13916:1;13913;13909:9;13902:16;;13937:3;13934:1;13931:10;13928:36;;;13944:18;;:::i;:::-;13928:36;13780:191;;;;:::o;13977:664::-;14182:4;14220:3;14209:9;14205:19;14197:27;;14234:71;14302:1;14291:9;14287:17;14278:6;14234:71;:::i;:::-;14315:72;14383:2;14372:9;14368:18;14359:6;14315:72;:::i;:::-;14397;14465:2;14454:9;14450:18;14441:6;14397:72;:::i;:::-;14479;14547:2;14536:9;14532:18;14523:6;14479:72;:::i;:::-;14561:73;14629:3;14618:9;14614:19;14605:6;14561:73;:::i;:::-;13977:664;;;;;;;;:::o;14647:545::-;14820:4;14858:3;14847:9;14843:19;14835:27;;14872:71;14940:1;14929:9;14925:17;14916:6;14872:71;:::i;:::-;14953:68;15017:2;15006:9;15002:18;14993:6;14953:68;:::i;:::-;15031:72;15099:2;15088:9;15084:18;15075:6;15031:72;:::i;:::-;15113;15181:2;15170:9;15166:18;15157:6;15113:72;:::i;:::-;14647:545;;;;;;;:::o;15198:180::-;15246:77;15243:1;15236:88;15343:4;15340:1;15333:15;15367:4;15364:1;15357:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1532000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2896",
								"decimals()": "361",
								"eip712Domain()": "infinite",
								"name()": "infinite",
								"nonces(address)": "2894",
								"owner()": "2582",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "160"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 79706,
									"end": 79906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79820,
									"end": 79832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "PUSH",
									"source": 0,
									"value": "5069676D656E7400000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78429,
									"end": 78433,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "PUSH",
									"source": 0,
									"value": "3100000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "5069676D656E7400000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "PUSH",
									"source": 0,
									"value": "50474D5400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67849,
									"end": 67854,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67841,
									"end": 67846,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 67841,
									"end": 67854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67841,
									"end": 67854,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67874,
									"end": 67881,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 67864,
									"end": 67871,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 67864,
									"end": 67881,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 67864,
									"end": 67881,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 67775,
									"end": 67888,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37070,
									"end": 37115,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 37101,
									"end": 37114,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 37070,
									"end": 37074,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37070,
									"end": 37100,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 37070,
									"end": 37100,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37070,
									"end": 37100,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 37070,
									"end": 37100,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37070,
									"end": 37115,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37070,
									"end": 37115,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37070,
									"end": 37115,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37070,
									"end": 37115,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 37070,
									"end": 37115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37070,
									"end": 37115,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 37070,
									"end": 37115,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37062,
									"end": 37115,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 37062,
									"end": 37115,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37062,
									"end": 37115,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37062,
									"end": 37115,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37062,
									"end": 37115,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37062,
									"end": 37115,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37136,
									"end": 37187,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 37170,
									"end": 37186,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 37136,
									"end": 37143,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 37136,
									"end": 37169,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 37136,
									"end": 37169,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37136,
									"end": 37169,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 37136,
									"end": 37169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37136,
									"end": 37187,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37136,
									"end": 37187,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37136,
									"end": 37187,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37136,
									"end": 37187,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 37136,
									"end": 37187,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37136,
									"end": 37187,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 37136,
									"end": 37187,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37125,
									"end": 37187,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 37125,
									"end": 37187,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37125,
									"end": 37187,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37125,
									"end": 37187,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37125,
									"end": 37187,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37125,
									"end": 37187,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37227,
									"end": 37231,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37211,
									"end": 37233,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37211,
									"end": 37233,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37211,
									"end": 37233,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37211,
									"end": 37233,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37211,
									"end": 37233,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37211,
									"end": 37233,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37197,
									"end": 37233,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 37197,
									"end": 37233,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37197,
									"end": 37233,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37197,
									"end": 37233,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37197,
									"end": 37233,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37197,
									"end": 37233,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37276,
									"end": 37283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37260,
									"end": 37285,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37260,
									"end": 37285,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37260,
									"end": 37285,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37260,
									"end": 37285,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37260,
									"end": 37285,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37260,
									"end": 37285,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37243,
									"end": 37285,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 37243,
									"end": 37285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37243,
									"end": 37285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37243,
									"end": 37285,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37243,
									"end": 37285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37243,
									"end": 37285,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37313,
									"end": 37326,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 37296,
									"end": 37326,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 37296,
									"end": 37326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37296,
									"end": 37326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37296,
									"end": 37326,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37296,
									"end": 37326,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37296,
									"end": 37326,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37361,
									"end": 37384,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 37361,
									"end": 37382,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 37361,
									"end": 37382,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37361,
									"end": 37382,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 37361,
									"end": 37384,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37361,
									"end": 37384,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 37361,
									"end": 37384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37361,
									"end": 37384,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 37361,
									"end": 37384,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37336,
									"end": 37384,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 37336,
									"end": 37384,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37336,
									"end": 37384,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37336,
									"end": 37384,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37336,
									"end": 37384,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37336,
									"end": 37384,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37416,
									"end": 37420,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37394,
									"end": 37421,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 36997,
									"end": 37428,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 78390,
									"end": 78442,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60746,
									"end": 60747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60722,
									"end": 60748,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60722,
									"end": 60748,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60722,
									"end": 60734,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60722,
									"end": 60748,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 60722,
									"end": 60748,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 60722,
									"end": 60748,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60718,
									"end": 60813,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 60718,
									"end": 60813,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60799,
									"end": 60800,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 60771,
									"end": 60802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 60771,
									"end": 60802,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60718,
									"end": 60813,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 60718,
									"end": 60813,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60822,
									"end": 60854,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60841,
									"end": 60853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 60822,
									"end": 60840,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 60822,
									"end": 60840,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60822,
									"end": 60840,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 60822,
									"end": 60854,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 60822,
									"end": 60854,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 60822,
									"end": 60854,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 60822,
									"end": 60854,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 60822,
									"end": 60854,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60674,
									"end": 60861,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79848,
									"end": 79899,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 79854,
									"end": 79864,
									"modifierDepth": 3,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 79888,
									"end": 79898,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 79888,
									"end": 79896,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 79888,
									"end": 79896,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79888,
									"end": 79896,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 79888,
									"end": 79898,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79888,
									"end": 79898,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 79888,
									"end": 79898,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79888,
									"end": 79898,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 79888,
									"end": 79898,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79882,
									"end": 79884,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 79882,
									"end": 79898,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 79882,
									"end": 79898,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79882,
									"end": 79898,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79882,
									"end": 79898,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 79882,
									"end": 79898,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79882,
									"end": 79898,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 79882,
									"end": 79898,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79866,
									"end": 79879,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "5A38CCC3000"
								},
								{
									"begin": 79866,
									"end": 79898,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 79866,
									"end": 79898,
									"modifierDepth": 3,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 79866,
									"end": 79898,
									"modifierDepth": 3,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 79866,
									"end": 79898,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 79866,
									"end": 79898,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79866,
									"end": 79898,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 79866,
									"end": 79898,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79848,
									"end": 79853,
									"modifierDepth": 3,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 79848,
									"end": 79853,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79848,
									"end": 79853,
									"modifierDepth": 3,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 79848,
									"end": 79899,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 79848,
									"end": 79899,
									"modifierDepth": 3,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 79848,
									"end": 79899,
									"jumpType": "[in]",
									"modifierDepth": 3,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 79848,
									"end": 79899,
									"modifierDepth": 3,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 79848,
									"end": 79899,
									"modifierDepth": 3,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79706,
									"end": 79906,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9153,
									"end": 9493,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 9153,
									"end": 9493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9249,
									"end": 9260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9298,
									"end": 9300,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9282,
									"end": 9287,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9276,
									"end": 9295,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9276,
									"end": 9300,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 9272,
									"end": 9487,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 9272,
									"end": 9487,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 9272,
									"end": 9487,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 9337,
									"end": 9342,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9323,
									"end": 9336,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 9323,
									"end": 9336,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9323,
									"end": 9336,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9323,
									"end": 9343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 9323,
									"end": 9343,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9316,
									"end": 9343,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9316,
									"end": 9343,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9316,
									"end": 9343,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 9316,
									"end": 9343,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9272,
									"end": 9487,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 9272,
									"end": 9487,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9415,
									"end": 9420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9406,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 9400,
									"end": 9405,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9399,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 9374,
									"end": 9399,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9374,
									"end": 9399,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9406,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9374,
									"end": 9406,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9406,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 9374,
									"end": 9406,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9412,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9374,
									"end": 9412,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9374,
									"end": 9420,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9374,
									"end": 9420,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7629,
									"end": 7695,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 9458,
									"end": 9475,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9458,
									"end": 9475,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9434,
									"end": 9476,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9434,
									"end": 9476,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9153,
									"end": 9493,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 9153,
									"end": 9493,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9153,
									"end": 9493,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9153,
									"end": 9493,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9153,
									"end": 9493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9153,
									"end": 9493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9153,
									"end": 9493,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37782,
									"end": 37961,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 37782,
									"end": 37961,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37837,
									"end": 37844,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35748,
									"end": 35843,
									"name": "PUSH",
									"source": 0,
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 37895,
									"end": 37906,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 37895,
									"end": 37906,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37908,
									"end": 37922,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 37908,
									"end": 37922,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37924,
									"end": 37937,
									"name": "CHAINID",
									"source": 0
								},
								{
									"begin": 37947,
									"end": 37951,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 37873,
									"end": 37953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37873,
									"end": 37953,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37863,
									"end": 37954,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37863,
									"end": 37954,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 37863,
									"end": 37954,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37863,
									"end": 37954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 37863,
									"end": 37954,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 37863,
									"end": 37954,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 37856,
									"end": 37954,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37856,
									"end": 37954,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37782,
									"end": 37961,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 37782,
									"end": 37961,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 62361,
									"end": 62548,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 62361,
									"end": 62548,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62434,
									"end": 62450,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62453,
									"end": 62459,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62434,
									"end": 62459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62434,
									"end": 62459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62478,
									"end": 62486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62475,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 62469,
									"end": 62475,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 62469,
									"end": 62486,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62532,
									"end": 62540,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62522,
									"end": 62530,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 62501,
									"end": 62541,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 62424,
									"end": 62548,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62361,
									"end": 62548,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 62361,
									"end": 62548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 68881,
									"end": 68963,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 68881,
									"end": 68963,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 68930,
									"end": 68935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 68954,
									"end": 68956,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 68947,
									"end": 68956,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 68947,
									"end": 68956,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 68881,
									"end": 68963,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 68881,
									"end": 68963,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73600,
									"end": 73808,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 73600,
									"end": 73808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73689,
									"end": 73690,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73670,
									"end": 73691,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 73670,
									"end": 73691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73670,
									"end": 73677,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 73670,
									"end": 73691,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 73670,
									"end": 73691,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73670,
									"end": 73691,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73666,
									"end": 73757,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 73666,
									"end": 73757,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 73743,
									"end": 73744,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 73714,
									"end": 73746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "tag",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73714,
									"end": 73746,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 73666,
									"end": 73757,
									"name": "tag",
									"source": 0,
									"value": "50"
								},
								{
									"begin": 73666,
									"end": 73757,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73766,
									"end": 73801,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 73782,
									"end": 73783,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73786,
									"end": 73793,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73795,
									"end": 73800,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73766,
									"end": 73773,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 73766,
									"end": 73773,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73766,
									"end": 73773,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 73766,
									"end": 73801,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73766,
									"end": 73801,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 73766,
									"end": 73801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73766,
									"end": 73801,
									"name": "tag",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 73766,
									"end": 73801,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73600,
									"end": 73808,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73600,
									"end": 73808,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73600,
									"end": 73808,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7947,
									"end": 8233,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 7947,
									"end": 8233,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8012,
									"end": 8023,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8035,
									"end": 8052,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8061,
									"end": 8064,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8035,
									"end": 8065,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8035,
									"end": 8065,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8093,
									"end": 8095,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 8079,
									"end": 8083,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8079,
									"end": 8090,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8079,
									"end": 8095,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 8075,
									"end": 8147,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8075,
									"end": 8147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 8075,
									"end": 8147,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8132,
									"end": 8135,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "PUSH",
									"source": 0,
									"value": "305A27A900000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "57"
								},
								{
									"begin": 8118,
									"end": 8136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8118,
									"end": 8136,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8075,
									"end": 8147,
									"name": "tag",
									"source": 0,
									"value": "55"
								},
								{
									"begin": 8075,
									"end": 8147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8213,
									"end": 8217,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8213,
									"end": 8224,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8204,
									"end": 8208,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8196,
									"end": 8209,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 8196,
									"end": 8209,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8196,
									"end": 8209,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 8196,
									"end": 8209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8196,
									"end": 8209,
									"name": "tag",
									"source": 0,
									"value": "58"
								},
								{
									"begin": 8196,
									"end": 8209,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8188,
									"end": 8210,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8188,
									"end": 8210,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8188,
									"end": 8224,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8180,
									"end": 8225,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8180,
									"end": 8225,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8156,
									"end": 8226,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8156,
									"end": 8226,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8156,
									"end": 8226,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7947,
									"end": 8233,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7947,
									"end": 8233,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7947,
									"end": 8233,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7947,
									"end": 8233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 5457,
									"end": 5659,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 5457,
									"end": 5659,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 5525,
									"end": 5545,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5633,
									"end": 5643,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5623,
									"end": 5643,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5623,
									"end": 5643,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5457,
									"end": 5659,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5457,
									"end": 5659,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5457,
									"end": 5659,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 5457,
									"end": 5659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72150,
									"end": 73257,
									"name": "tag",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 72150,
									"end": 73257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72255,
									"end": 72256,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72239,
									"end": 72257,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72239,
									"end": 72257,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72239,
									"end": 72243,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72239,
									"end": 72257,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72239,
									"end": 72257,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72239,
									"end": 72257,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 72235,
									"end": 72775,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 72235,
									"end": 72775,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72391,
									"end": 72396,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72387,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 72375,
									"end": 72387,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 72375,
									"end": 72396,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 72375,
									"end": 72396,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72235,
									"end": 72775,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 72235,
									"end": 72775,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72235,
									"end": 72775,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 72235,
									"end": 72775,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72427,
									"end": 72446,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72449,
									"end": 72458,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72459,
									"end": 72463,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72449,
									"end": 72464,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 72427,
									"end": 72464,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72427,
									"end": 72464,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72496,
									"end": 72501,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72482,
									"end": 72493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72482,
									"end": 72501,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 72478,
									"end": 72593,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 72478,
									"end": 72593,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 72478,
									"end": 72593,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72553,
									"end": 72557,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72559,
									"end": 72570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72572,
									"end": 72577,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "68"
								},
								{
									"begin": 72528,
									"end": 72578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72528,
									"end": 72578,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 72478,
									"end": 72593,
									"name": "tag",
									"source": 0,
									"value": "66"
								},
								{
									"begin": 72478,
									"end": 72593,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72745,
									"end": 72750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72731,
									"end": 72742,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72731,
									"end": 72750,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72723,
									"end": 72727,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72713,
									"end": 72728,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72750,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72750,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72750,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 72713,
									"end": 72750,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72413,
									"end": 72775,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72235,
									"end": 72775,
									"name": "tag",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 72235,
									"end": 72775,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72803,
									"end": 72804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72789,
									"end": 72805,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72789,
									"end": 72805,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72789,
									"end": 72791,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72789,
									"end": 72805,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 72789,
									"end": 72805,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 72789,
									"end": 72805,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 72785,
									"end": 73210,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 72785,
									"end": 73210,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72968,
									"end": 72973,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72964,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 72952,
									"end": 72964,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 72952,
									"end": 72973,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72785,
									"end": 73210,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 72785,
									"end": 73210,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 72785,
									"end": 73210,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 72785,
									"end": 73210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73180,
									"end": 73185,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73172,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73173,
									"end": 73175,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 73163,
									"end": 73185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72785,
									"end": 73210,
									"name": "tag",
									"source": 0,
									"value": "70"
								},
								{
									"begin": 72785,
									"end": 73210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73240,
									"end": 73242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73234,
									"end": 73238,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 73244,
									"end": 73249,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 73225,
									"end": 73250,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "tag",
									"source": 0,
									"value": "71"
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73225,
									"end": 73250,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 72150,
									"end": 73257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72150,
									"end": 73257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72150,
									"end": 73257,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 72150,
									"end": 73257,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "94"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "163"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7009,
									"end": 7017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7056,
									"end": 7061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7049,
									"end": 7062,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7136,
									"end": 7141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7167,
									"end": 7173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7213,
									"end": 7228,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7316,
									"end": 7319,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7326,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7306,
									"end": 7310,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7303,
									"end": 7327,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 7330,
									"end": 7348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7370,
									"end": 7378,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7366,
									"end": 7382,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7795,
									"end": 7799,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7800,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "tag",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7839,
									"end": 7843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7850,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 7898,
									"end": 7906,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 7875,
									"end": 7907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "tag",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8174,
									"end": 8182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "tag",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "tag",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 8423,
									"end": 8431,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8420,
									"end": 8437,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8440,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "tag",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "tag",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8489,
									"end": 8497,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8486,
									"end": 8487,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8482,
									"end": 8498,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8524,
									"end": 8527,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8517,
									"end": 8522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8514,
									"end": 8528,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8531,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "tag",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "tag",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8688,
									"end": 8690,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8678,
									"end": 8686,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8675,
									"end": 8691,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 8663,
									"end": 8667,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8660,
									"end": 8673,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8638,
									"end": 8640,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 8628,
									"end": 8636,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8625,
									"end": 8641,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8620,
									"end": 8622,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8611,
									"end": 8623,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8607,
									"end": 8642,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8591,
									"end": 8702,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8744,
									"end": 8752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8734,
									"end": 8753,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8772,
									"end": 8777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "218"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8786,
									"end": 8804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "tag",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "tag",
									"source": 1,
									"value": "218"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "tag",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 8897,
									"end": 8900,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8895,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8881,
									"end": 8885,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8878,
									"end": 8879,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 8859,
									"end": 8901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "tag",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8924,
									"end": 8938,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8917,
									"end": 8922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8914,
									"end": 8939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "221"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "tag",
									"source": 1,
									"value": "221"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8984,
									"end": 8989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8980,
									"end": 8996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9043,
									"end": 9050,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9158,
									"end": 9163,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 9200,
									"end": 9204,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9182,
									"end": 9205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "tag",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "226"
								},
								{
									"begin": 9242,
									"end": 9250,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 9226,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "tag",
									"source": 1,
									"value": "226"
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "227"
								},
								{
									"begin": 9307,
									"end": 9373,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9297,
									"end": 9305,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 9270,
									"end": 9374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "tag",
									"source": 1,
									"value": "227"
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "229"
								},
								{
									"begin": 9468,
									"end": 9469,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9450,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "tag",
									"source": 1,
									"value": "229"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "230"
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9484,
									"end": 9504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "tag",
									"source": 1,
									"value": "230"
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9532,
									"end": 9541,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 9579,
									"end": 9590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 9561,
									"end": 9591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "tag",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9740,
									"end": 9741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9731,
									"end": 9738,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9727,
									"end": 9742,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9721,
									"end": 9743,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 9701,
									"end": 9702,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9674,
									"end": 9757,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "233"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 9770,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "tag",
									"source": 1,
									"value": "233"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "tag",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9435,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9840,
									"end": 9847,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9869,
									"end": 9874,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9858,
									"end": 9874,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9858,
									"end": 9874,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9880,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "tag",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "236"
								},
								{
									"begin": 9991,
									"end": 9996,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 9973,
									"end": 9997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "tag",
									"source": 1,
									"value": "236"
								},
								{
									"begin": 9973,
									"end": 9997,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9968,
									"end": 9971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9886,
									"end": 10004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "238"
								},
								{
									"begin": 10115,
									"end": 10120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 10097,
									"end": 10121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "tag",
									"source": 1,
									"value": "238"
								},
								{
									"begin": 10097,
									"end": 10121,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10092,
									"end": 10095,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10085,
									"end": 10122,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10010,
									"end": 10128,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10339,
									"end": 10343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10377,
									"end": 10380,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 10366,
									"end": 10375,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10362,
									"end": 10381,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10354,
									"end": 10381,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10354,
									"end": 10381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "240"
								},
								{
									"begin": 10459,
									"end": 10460,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10448,
									"end": 10457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10444,
									"end": 10461,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10435,
									"end": 10441,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10391,
									"end": 10462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "tag",
									"source": 1,
									"value": "240"
								},
								{
									"begin": 10391,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "241"
								},
								{
									"begin": 10540,
									"end": 10542,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10529,
									"end": 10538,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10525,
									"end": 10543,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10516,
									"end": 10522,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10472,
									"end": 10544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "tag",
									"source": 1,
									"value": "241"
								},
								{
									"begin": 10472,
									"end": 10544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "242"
								},
								{
									"begin": 10622,
									"end": 10624,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10611,
									"end": 10620,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10607,
									"end": 10625,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10598,
									"end": 10604,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "107"
								},
								{
									"begin": 10554,
									"end": 10626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "tag",
									"source": 1,
									"value": "242"
								},
								{
									"begin": 10554,
									"end": 10626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "243"
								},
								{
									"begin": 10704,
									"end": 10706,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 10693,
									"end": 10702,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10689,
									"end": 10707,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10686,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 10636,
									"end": 10708,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "tag",
									"source": 1,
									"value": "243"
								},
								{
									"begin": 10636,
									"end": 10708,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "244"
								},
								{
									"begin": 10786,
									"end": 10789,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 10775,
									"end": 10784,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10771,
									"end": 10790,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10762,
									"end": 10768,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 10718,
									"end": 10791,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "tag",
									"source": 1,
									"value": "244"
								},
								{
									"begin": 10718,
									"end": 10791,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10134,
									"end": 10798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10888,
									"end": 10899,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10922,
									"end": 10928,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10917,
									"end": 10920,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10910,
									"end": 10929,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10962,
									"end": 10966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10957,
									"end": 10960,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10953,
									"end": 10967,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10938,
									"end": 10967,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10938,
									"end": 10967,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10804,
									"end": 10973,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11060,
									"end": 11061,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "tag",
									"source": 1,
									"value": "247"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11084,
									"end": 11090,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11081,
									"end": 11082,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11078,
									"end": 11091,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "249"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 11169,
									"end": 11170,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 11164,
									"end": 11167,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11160,
									"end": 11171,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11154,
									"end": 11172,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 11150,
									"end": 11151,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11145,
									"end": 11148,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11141,
									"end": 11152,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11134,
									"end": 11173,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11106,
									"end": 11108,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11103,
									"end": 11104,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11099,
									"end": 11109,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11094,
									"end": 11109,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11094,
									"end": 11109,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "247"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "tag",
									"source": 1,
									"value": "249"
								},
								{
									"begin": 11070,
									"end": 11183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11217,
									"end": 11218,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11208,
									"end": 11214,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11203,
									"end": 11206,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11199,
									"end": 11215,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11192,
									"end": 11219,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11041,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10979,
									"end": 11225,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11272,
									"end": 11278,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11323,
									"end": 11325,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 11319,
									"end": 11326,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 11314,
									"end": 11316,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 11307,
									"end": 11312,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11303,
									"end": 11317,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11299,
									"end": 11327,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 11289,
									"end": 11327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11289,
									"end": 11327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11231,
									"end": 11333,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11427,
									"end": 11430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11455,
									"end": 11494,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "252"
								},
								{
									"begin": 11488,
									"end": 11493,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11455,
									"end": 11494,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 11455,
									"end": 11494,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11455,
									"end": 11494,
									"name": "tag",
									"source": 1,
									"value": "252"
								},
								{
									"begin": 11455,
									"end": 11494,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11510,
									"end": 11581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "253"
								},
								{
									"begin": 11574,
									"end": 11580,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11569,
									"end": 11572,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11510,
									"end": 11581,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 11510,
									"end": 11581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11510,
									"end": 11581,
									"name": "tag",
									"source": 1,
									"value": "253"
								},
								{
									"begin": 11510,
									"end": 11581,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11503,
									"end": 11581,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 11503,
									"end": 11581,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11590,
									"end": 11655,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "254"
								},
								{
									"begin": 11648,
									"end": 11654,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11643,
									"end": 11646,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 11636,
									"end": 11640,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11629,
									"end": 11634,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 11625,
									"end": 11641,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11590,
									"end": 11655,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 11590,
									"end": 11655,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11590,
									"end": 11655,
									"name": "tag",
									"source": 1,
									"value": "254"
								},
								{
									"begin": 11590,
									"end": 11655,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11680,
									"end": 11709,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "255"
								},
								{
									"begin": 11702,
									"end": 11708,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11680,
									"end": 11709,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 11680,
									"end": 11709,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11680,
									"end": 11709,
									"name": "tag",
									"source": 1,
									"value": "255"
								},
								{
									"begin": 11680,
									"end": 11709,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11675,
									"end": 11678,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11671,
									"end": 11710,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11664,
									"end": 11710,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11664,
									"end": 11710,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11431,
									"end": 11716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11339,
									"end": 11716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11835,
									"end": 11839,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11873,
									"end": 11875,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 11862,
									"end": 11871,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11858,
									"end": 11876,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11850,
									"end": 11876,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11850,
									"end": 11876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11922,
									"end": 11931,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11916,
									"end": 11920,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11912,
									"end": 11932,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 11908,
									"end": 11909,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11897,
									"end": 11906,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11893,
									"end": 11910,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 11886,
									"end": 11933,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 11950,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "257"
								},
								{
									"begin": 12023,
									"end": 12027,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12014,
									"end": 12020,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11950,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 11950,
									"end": 12028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11950,
									"end": 12028,
									"name": "tag",
									"source": 1,
									"value": "257"
								},
								{
									"begin": 11950,
									"end": 12028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11942,
									"end": 12028,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11942,
									"end": 12028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11722,
									"end": 12035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "tag",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12092,
									"end": 12098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12126,
									"end": 12131,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12120,
									"end": 12132,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 12110,
									"end": 12132,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12110,
									"end": 12132,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12041,
									"end": 12139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12196,
									"end": 12200,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12219,
									"end": 12222,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12211,
									"end": 12222,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12211,
									"end": 12222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12249,
									"end": 12253,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12244,
									"end": 12247,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12240,
									"end": 12254,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12232,
									"end": 12254,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12232,
									"end": 12254,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12145,
									"end": 12261,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12310,
									"end": 12321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12346,
									"end": 12375,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "261"
								},
								{
									"begin": 12370,
									"end": 12373,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12364,
									"end": 12374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 12346,
									"end": 12375,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 12346,
									"end": 12375,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12346,
									"end": 12375,
									"name": "tag",
									"source": 1,
									"value": "261"
								},
								{
									"begin": 12346,
									"end": 12375,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12409,
									"end": 12414,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 12385,
									"end": 12414,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12385,
									"end": 12414,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12322,
									"end": 12421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12267,
									"end": 12421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12511,
									"end": 12516,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12542,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "263"
								},
								{
									"begin": 12574,
									"end": 12579,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12542,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "113"
								},
								{
									"begin": 12542,
									"end": 12580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12542,
									"end": 12580,
									"name": "tag",
									"source": 1,
									"value": "263"
								},
								{
									"begin": 12542,
									"end": 12580,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12605,
									"end": 12610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12632,
									"end": 12672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "264"
								},
								{
									"begin": 12666,
									"end": 12671,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 12632,
									"end": 12672,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 12632,
									"end": 12672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12632,
									"end": 12672,
									"name": "tag",
									"source": 1,
									"value": "264"
								},
								{
									"begin": 12632,
									"end": 12672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12620,
									"end": 12672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12620,
									"end": 12672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12691,
									"end": 12726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "265"
								},
								{
									"begin": 12717,
									"end": 12725,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12691,
									"end": 12726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 12691,
									"end": 12726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12691,
									"end": 12726,
									"name": "tag",
									"source": 1,
									"value": "265"
								},
								{
									"begin": 12691,
									"end": 12726,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12682,
									"end": 12726,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12682,
									"end": 12726,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12750,
									"end": 12752,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12742,
									"end": 12748,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12739,
									"end": 12753,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "266"
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 12821,
									"end": 12990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "267"
								},
								{
									"begin": 12906,
									"end": 12972,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12876,
									"end": 12882,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12872,
									"end": 12874,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12868,
									"end": 12883,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 12865,
									"end": 12866,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 12861,
									"end": 12884,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 12821,
									"end": 12990,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 12821,
									"end": 12990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12821,
									"end": 12990,
									"name": "tag",
									"source": 1,
									"value": "267"
								},
								{
									"begin": 12821,
									"end": 12990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12798,
									"end": 12803,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12777,
									"end": 13004,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 12768,
									"end": 13004,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12768,
									"end": 13004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "tag",
									"source": 1,
									"value": "266"
								},
								{
									"begin": 12736,
									"end": 13014,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12517,
									"end": 13021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12517,
									"end": 13021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12427,
									"end": 13021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13067,
									"end": 13070,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13086,
									"end": 13106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "269"
								},
								{
									"begin": 13104,
									"end": 13105,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13086,
									"end": 13106,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 13086,
									"end": 13106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13086,
									"end": 13106,
									"name": "tag",
									"source": 1,
									"value": "269"
								},
								{
									"begin": 13086,
									"end": 13106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13081,
									"end": 13106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13081,
									"end": 13106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13120,
									"end": 13140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "270"
								},
								{
									"begin": 13138,
									"end": 13139,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13120,
									"end": 13140,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 13120,
									"end": 13140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13120,
									"end": 13140,
									"name": "tag",
									"source": 1,
									"value": "270"
								},
								{
									"begin": 13120,
									"end": 13140,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13115,
									"end": 13140,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13115,
									"end": 13140,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13163,
									"end": 13164,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13160,
									"end": 13161,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13156,
									"end": 13165,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13149,
									"end": 13165,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13149,
									"end": 13165,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13184,
									"end": 13187,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 13181,
									"end": 13182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13178,
									"end": 13188,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "271"
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 13191,
									"end": 13209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "272"
								},
								{
									"begin": 13191,
									"end": 13209,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 13191,
									"end": 13209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13191,
									"end": 13209,
									"name": "tag",
									"source": 1,
									"value": "272"
								},
								{
									"begin": 13191,
									"end": 13209,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "tag",
									"source": 1,
									"value": "271"
								},
								{
									"begin": 13175,
									"end": 13211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13027,
									"end": 13218,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13373,
									"end": 13377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13411,
									"end": 13413,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 13400,
									"end": 13409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13396,
									"end": 13414,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13388,
									"end": 13414,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13388,
									"end": 13414,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "274"
								},
								{
									"begin": 13492,
									"end": 13493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13481,
									"end": 13490,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13477,
									"end": 13494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13468,
									"end": 13474,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 13424,
									"end": 13495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "tag",
									"source": 1,
									"value": "274"
								},
								{
									"begin": 13424,
									"end": 13495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13505,
									"end": 13577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "275"
								},
								{
									"begin": 13573,
									"end": 13575,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13562,
									"end": 13571,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13558,
									"end": 13576,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13549,
									"end": 13555,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 13505,
									"end": 13577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13505,
									"end": 13577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13505,
									"end": 13577,
									"name": "tag",
									"source": 1,
									"value": "275"
								},
								{
									"begin": 13505,
									"end": 13577,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13587,
									"end": 13659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "276"
								},
								{
									"begin": 13655,
									"end": 13657,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13644,
									"end": 13653,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13640,
									"end": 13658,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13631,
									"end": 13637,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13587,
									"end": 13659,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13587,
									"end": 13659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13587,
									"end": 13659,
									"name": "tag",
									"source": 1,
									"value": "276"
								},
								{
									"begin": 13587,
									"end": 13659,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13224,
									"end": 13666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13765,
									"end": 13769,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13803,
									"end": 13805,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13792,
									"end": 13801,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13788,
									"end": 13806,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13780,
									"end": 13806,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13780,
									"end": 13806,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13816,
									"end": 13887,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "278"
								},
								{
									"begin": 13884,
									"end": 13885,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13873,
									"end": 13882,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13869,
									"end": 13886,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13860,
									"end": 13866,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13816,
									"end": 13887,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 13816,
									"end": 13887,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13816,
									"end": 13887,
									"name": "tag",
									"source": 1,
									"value": "278"
								},
								{
									"begin": 13816,
									"end": 13887,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13672,
									"end": 13894,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "140"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1919"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1916"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1913"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1911"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1909"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1907"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1905"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79652,
									"end": 79908,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a283f1fe54333757acc576d59a1dd509542392ac5d9099e8c596fe11c39397fb64736f6c63430008160033",
									".code": [
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "7ECEBE00"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "84B0196E"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "3644E515"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79652,
											"end": 79908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 67953,
											"end": 68042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 67953,
											"end": 68042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 70172,
											"end": 70358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 70172,
											"end": 70358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 70172,
											"end": 70358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 69023,
											"end": 69120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 69023,
											"end": 69120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 70918,
											"end": 71162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 70918,
											"end": 71162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 70918,
											"end": 71162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 68881,
											"end": 68963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 68881,
											"end": 68963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 79472,
											"end": 79584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 79472,
											"end": 79584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 69178,
											"end": 69294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 69178,
											"end": 69294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 69178,
											"end": 69294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 61742,
											"end": 61843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79222,
											"end": 79365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 79222,
											"end": 79365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 79222,
											"end": 79365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 38813,
											"end": 39370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 38813,
											"end": 39370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 61087,
											"end": 61172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 61087,
											"end": 61172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 68155,
											"end": 68248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 68155,
											"end": 68248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 69489,
											"end": 69667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 69489,
											"end": 69667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 69489,
											"end": 69667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 78496,
											"end": 79168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 78496,
											"end": 79168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 69725,
											"end": 69865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 69725,
											"end": 69865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 69725,
											"end": 69865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 61992,
											"end": 62207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 61992,
											"end": 62207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67998,
											"end": 68011,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 68030,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 68023,
											"end": 68035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 68023,
											"end": 68035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68023,
											"end": 68035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67953,
											"end": 68042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70245,
											"end": 70249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70261,
											"end": 70274,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70277,
											"end": 70289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 70277,
											"end": 70287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 70277,
											"end": 70289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70277,
											"end": 70289,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 70277,
											"end": 70289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70261,
											"end": 70289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70261,
											"end": 70289,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70299,
											"end": 70330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 70308,
											"end": 70313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70315,
											"end": 70322,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70324,
											"end": 70329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70299,
											"end": 70307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 70299,
											"end": 70330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70299,
											"end": 70330,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 70299,
											"end": 70330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70347,
											"end": 70351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70340,
											"end": 70351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70340,
											"end": 70351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70340,
											"end": 70351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70172,
											"end": 70358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69075,
											"end": 69082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69101,
											"end": 69113,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 69101,
											"end": 69113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69094,
											"end": 69113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69094,
											"end": 69113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69023,
											"end": 69120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71005,
											"end": 71009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71021,
											"end": 71036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71039,
											"end": 71051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 71039,
											"end": 71049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 71039,
											"end": 71051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71039,
											"end": 71051,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 71039,
											"end": 71051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71021,
											"end": 71051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71021,
											"end": 71051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71061,
											"end": 71098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 71077,
											"end": 71081,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 71083,
											"end": 71090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71092,
											"end": 71097,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 71061,
											"end": 71076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 71061,
											"end": 71098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71061,
											"end": 71098,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 71061,
											"end": 71098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71108,
											"end": 71134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 71118,
											"end": 71122,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 71124,
											"end": 71126,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 71128,
											"end": 71133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 71108,
											"end": 71117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 71108,
											"end": 71134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71108,
											"end": 71134,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 71108,
											"end": 71134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71151,
											"end": 71155,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 71144,
											"end": 71155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71144,
											"end": 71155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71144,
											"end": 71155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70918,
											"end": 71162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68930,
											"end": 68935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68954,
											"end": 68956,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 68947,
											"end": 68956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68947,
											"end": 68956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68881,
											"end": 68963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79531,
											"end": 79538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79557,
											"end": 79577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 79557,
											"end": 79575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 79557,
											"end": 79577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79557,
											"end": 79577,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 79557,
											"end": 79577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79550,
											"end": 79577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79550,
											"end": 79577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79472,
											"end": 79584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69243,
											"end": 69250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69269,
											"end": 69278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69279,
											"end": 69286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69269,
											"end": 69287,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69262,
											"end": 69287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69262,
											"end": 69287,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69178,
											"end": 69294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 61742,
											"end": 61843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60980,
											"end": 60993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60980,
											"end": 60991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 60980,
											"end": 60993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60980,
											"end": 60993,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 60980,
											"end": 60993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61806,
											"end": 61836,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61833,
											"end": 61834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61806,
											"end": 61824,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 61806,
											"end": 61836,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61806,
											"end": 61836,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 61806,
											"end": 61836,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61742,
											"end": 61843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79313,
											"end": 79320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79339,
											"end": 79358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 79352,
											"end": 79357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79339,
											"end": 79351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 79339,
											"end": 79358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79339,
											"end": 79358,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 79339,
											"end": 79358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79332,
											"end": 79358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79332,
											"end": 79358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79222,
											"end": 79365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38911,
											"end": 38924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38938,
											"end": 38956,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 38970,
											"end": 38991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39005,
											"end": 39020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39034,
											"end": 39059,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39073,
											"end": 39085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39099,
											"end": 39126,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39202,
											"end": 39215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 39202,
											"end": 39213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 39202,
											"end": 39215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39202,
											"end": 39215,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 39202,
											"end": 39215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39229,
											"end": 39245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 39229,
											"end": 39243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 39229,
											"end": 39245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39229,
											"end": 39245,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 39229,
											"end": 39245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39259,
											"end": 39272,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 39294,
											"end": 39298,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39321,
											"end": 39322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39313,
											"end": 39323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39313,
											"end": 39323,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 39351,
											"end": 39352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 39337,
											"end": 39353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39337,
											"end": 39353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "PUSH",
											"source": 0,
											"value": "F00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 39151,
											"end": 39363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 38813,
											"end": 39370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61133,
											"end": 61140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61159,
											"end": 61165,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61152,
											"end": 61165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61152,
											"end": 61165,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61087,
											"end": 61172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68202,
											"end": 68215,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 68234,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 68227,
											"end": 68241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 68227,
											"end": 68241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68227,
											"end": 68241,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68155,
											"end": 68248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69558,
											"end": 69562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69574,
											"end": 69587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69590,
											"end": 69602,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 69590,
											"end": 69600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 69590,
											"end": 69602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69590,
											"end": 69602,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 69590,
											"end": 69602,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69574,
											"end": 69602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69574,
											"end": 69602,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69612,
											"end": 69639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 69622,
											"end": 69627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69629,
											"end": 69631,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69633,
											"end": 69638,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 69612,
											"end": 69621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 69612,
											"end": 69639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69612,
											"end": 69639,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 69612,
											"end": 69639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69656,
											"end": 69660,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69649,
											"end": 69660,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69649,
											"end": 69660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69649,
											"end": 69660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69489,
											"end": 69667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78717,
											"end": 78725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78699,
											"end": 78714,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 78699,
											"end": 78725,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 78695,
											"end": 78792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78695,
											"end": 78792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 78695,
											"end": 78792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78772,
											"end": 78780,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "PUSH",
											"source": 0,
											"value": "6279130200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 78748,
											"end": 78781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78748,
											"end": 78781,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78695,
											"end": 78792,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 78695,
											"end": 78792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78802,
											"end": 78820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77838,
											"end": 77933,
											"name": "PUSH",
											"source": 0,
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 78861,
											"end": 78866,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78868,
											"end": 78875,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78877,
											"end": 78882,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78884,
											"end": 78900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 78894,
											"end": 78899,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 78884,
											"end": 78893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 78884,
											"end": 78900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78884,
											"end": 78900,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 78884,
											"end": 78900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78902,
											"end": 78910,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 78833,
											"end": 78911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78833,
											"end": 78911,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78823,
											"end": 78912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78823,
											"end": 78912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78823,
											"end": 78912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78823,
											"end": 78912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78823,
											"end": 78912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78823,
											"end": 78912,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78802,
											"end": 78912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78802,
											"end": 78912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78923,
											"end": 78935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78938,
											"end": 78966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 78955,
											"end": 78965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78938,
											"end": 78954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 78938,
											"end": 78966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78938,
											"end": 78966,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 78938,
											"end": 78966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78923,
											"end": 78966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78923,
											"end": 78966,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78977,
											"end": 78991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78994,
											"end": 79022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 79008,
											"end": 79012,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79014,
											"end": 79015,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 79017,
											"end": 79018,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 79020,
											"end": 79021,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78994,
											"end": 79007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 78994,
											"end": 79022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78994,
											"end": 79022,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 78994,
											"end": 79022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78977,
											"end": 79022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78977,
											"end": 79022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79046,
											"end": 79051,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 79036,
											"end": 79051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79036,
											"end": 79051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79036,
											"end": 79042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79036,
											"end": 79051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79036,
											"end": 79051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79036,
											"end": 79051,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 79032,
											"end": 79120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 79032,
											"end": 79120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79095,
											"end": 79101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79103,
											"end": 79108,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "PUSH",
											"source": 0,
											"value": "4B800E4600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 79074,
											"end": 79109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79032,
											"end": 79120,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 79032,
											"end": 79120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79130,
											"end": 79161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 79139,
											"end": 79144,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79146,
											"end": 79153,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79155,
											"end": 79160,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 79130,
											"end": 79138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 79130,
											"end": 79161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79130,
											"end": 79161,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 79130,
											"end": 79161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78685,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78685,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78685,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78496,
											"end": 79168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69805,
											"end": 69812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69831,
											"end": 69842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69843,
											"end": 69848,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69831,
											"end": 69849,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69850,
											"end": 69857,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 69831,
											"end": 69858,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 69824,
											"end": 69858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69824,
											"end": 69858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69725,
											"end": 69865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60980,
											"end": 60993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 60980,
											"end": 60991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 60980,
											"end": 60993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60980,
											"end": 60993,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 60980,
											"end": 60993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62096,
											"end": 62097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62076,
											"end": 62098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62076,
											"end": 62098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62076,
											"end": 62098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62076,
											"end": 62098,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62072,
											"end": 62163,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 62072,
											"end": 62163,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 62149,
											"end": 62150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 62121,
											"end": 62152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62121,
											"end": 62152,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 62072,
											"end": 62163,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 62072,
											"end": 62163,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62172,
											"end": 62200,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 62191,
											"end": 62199,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62172,
											"end": 62190,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 62172,
											"end": 62200,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62172,
											"end": 62200,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 62172,
											"end": 62200,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61992,
											"end": 62207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59159,
											"end": 59255,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 59159,
											"end": 59255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59212,
											"end": 59219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59238,
											"end": 59248,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59231,
											"end": 59248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59231,
											"end": 59248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59159,
											"end": 59255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59159,
											"end": 59255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74868,
											"end": 74996,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 74868,
											"end": 74996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74952,
											"end": 74989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 74961,
											"end": 74966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74968,
											"end": 74975,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74977,
											"end": 74982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74984,
											"end": 74988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74952,
											"end": 74960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 74952,
											"end": 74989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74952,
											"end": 74989,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 74952,
											"end": 74989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74868,
											"end": 74996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74868,
											"end": 74996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74868,
											"end": 74996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74868,
											"end": 74996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76542,
											"end": 77019,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 76542,
											"end": 77019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76641,
											"end": 76665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76668,
											"end": 76693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 76678,
											"end": 76683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76685,
											"end": 76692,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76668,
											"end": 76677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 76668,
											"end": 76693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76668,
											"end": 76693,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 76668,
											"end": 76693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76641,
											"end": 76693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76641,
											"end": 76693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76727,
											"end": 76744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76707,
											"end": 76723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76707,
											"end": 76744,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 76703,
											"end": 77013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 76703,
											"end": 77013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76783,
											"end": 76788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76764,
											"end": 76780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76764,
											"end": 76788,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76760,
											"end": 76890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76760,
											"end": 76890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 76760,
											"end": 76890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76842,
											"end": 76849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76851,
											"end": 76867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76869,
											"end": 76874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 76815,
											"end": 76875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76815,
											"end": 76875,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76760,
											"end": 76890,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 76760,
											"end": 76890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76931,
											"end": 76988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 76940,
											"end": 76945,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76947,
											"end": 76954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76975,
											"end": 76980,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76956,
											"end": 76972,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76956,
											"end": 76980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76982,
											"end": 76987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76931,
											"end": 76939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 76931,
											"end": 76988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76931,
											"end": 76988,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 76931,
											"end": 76988,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76703,
											"end": 77013,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 76703,
											"end": 77013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76631,
											"end": 77019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76542,
											"end": 77019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76542,
											"end": 77019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76542,
											"end": 77019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76542,
											"end": 77019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71535,
											"end": 71835,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 71535,
											"end": 71835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71634,
											"end": 71635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71618,
											"end": 71636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71618,
											"end": 71636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71618,
											"end": 71622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71618,
											"end": 71636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71618,
											"end": 71636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71618,
											"end": 71636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71614,
											"end": 71700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 71614,
											"end": 71700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71686,
											"end": 71687,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 71659,
											"end": 71689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71659,
											"end": 71689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71614,
											"end": 71700,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 71614,
											"end": 71700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71727,
											"end": 71728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71713,
											"end": 71729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71713,
											"end": 71729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71713,
											"end": 71715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71713,
											"end": 71729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71713,
											"end": 71729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71713,
											"end": 71729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71709,
											"end": 71795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 71709,
											"end": 71795,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71781,
											"end": 71782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 71752,
											"end": 71784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71752,
											"end": 71784,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71709,
											"end": 71795,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 71709,
											"end": 71795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71804,
											"end": 71828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 71812,
											"end": 71816,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71818,
											"end": 71820,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71822,
											"end": 71827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71804,
											"end": 71811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 71804,
											"end": 71828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71804,
											"end": 71828,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 71804,
											"end": 71828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71535,
											"end": 71835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71535,
											"end": 71835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71535,
											"end": 71835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71535,
											"end": 71835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37514,
											"end": 37776,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 37514,
											"end": 37776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37567,
											"end": 37574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37607,
											"end": 37618,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1909"
										},
										{
											"begin": 37590,
											"end": 37618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37590,
											"end": 37618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37598,
											"end": 37602,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37590,
											"end": 37618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37618,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 37590,
											"end": 37653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37639,
											"end": 37653,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1907"
										},
										{
											"begin": 37622,
											"end": 37635,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 37622,
											"end": 37653,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37590,
											"end": 37653,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 37590,
											"end": 37653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37586,
											"end": 37770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37586,
											"end": 37770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 37586,
											"end": 37770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37676,
											"end": 37698,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1905"
										},
										{
											"begin": 37669,
											"end": 37698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37669,
											"end": 37698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37669,
											"end": 37698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 37669,
											"end": 37698,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37586,
											"end": 37770,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 37586,
											"end": 37770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37736,
											"end": 37759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 37736,
											"end": 37757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37736,
											"end": 37759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37736,
											"end": 37759,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 37736,
											"end": 37759,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37729,
											"end": 37759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37729,
											"end": 37759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37514,
											"end": 37776,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 37514,
											"end": 37776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37514,
											"end": 37776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37514,
											"end": 37776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61245,
											"end": 61407,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 61245,
											"end": 61407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61315,
											"end": 61327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 61315,
											"end": 61325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 61315,
											"end": 61327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61315,
											"end": 61327,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 61315,
											"end": 61327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61304,
											"end": 61327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61304,
											"end": 61327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61304,
											"end": 61311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 61304,
											"end": 61309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 61304,
											"end": 61311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61304,
											"end": 61311,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 61304,
											"end": 61311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61304,
											"end": 61327,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 61304,
											"end": 61327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 61304,
											"end": 61327,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 61300,
											"end": 61401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 61300,
											"end": 61401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 61377,
											"end": 61389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 61377,
											"end": 61387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 61377,
											"end": 61389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61377,
											"end": 61389,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 61377,
											"end": 61389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 61350,
											"end": 61390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61350,
											"end": 61390,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 61300,
											"end": 61401,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 61300,
											"end": 61401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61245,
											"end": 61407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 62361,
											"end": 62548,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 62361,
											"end": 62548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 62434,
											"end": 62450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62453,
											"end": 62459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62434,
											"end": 62459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62434,
											"end": 62459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62478,
											"end": 62486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62475,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 62469,
											"end": 62475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 62469,
											"end": 62486,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62532,
											"end": 62540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62522,
											"end": 62530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 62501,
											"end": 62541,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 62424,
											"end": 62548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62361,
											"end": 62548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 62361,
											"end": 62548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 672,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 565,
											"end": 672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 658,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 651,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 651,
											"end": 665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 651,
											"end": 665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 651,
											"end": 665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 644,
											"end": 665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 644,
											"end": 665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39690,
											"end": 39816,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 39690,
											"end": 39816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39736,
											"end": 39749,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 39768,
											"end": 39809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 39795,
											"end": 39808,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 39768,
											"end": 39773,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1916"
										},
										{
											"begin": 39768,
											"end": 39794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 39768,
											"end": 39794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39768,
											"end": 39809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39768,
											"end": 39809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39768,
											"end": 39809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 39768,
											"end": 39809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39768,
											"end": 39809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39768,
											"end": 39809,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 39768,
											"end": 39809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39761,
											"end": 39809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39690,
											"end": 39816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39690,
											"end": 39816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40142,
											"end": 40277,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 40142,
											"end": 40277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40191,
											"end": 40204,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40223,
											"end": 40270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 40253,
											"end": 40269,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 40223,
											"end": 40231,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1919"
										},
										{
											"begin": 40223,
											"end": 40252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 40223,
											"end": 40252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40223,
											"end": 40270,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40223,
											"end": 40270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40223,
											"end": 40270,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 40223,
											"end": 40270,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40223,
											"end": 40270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40223,
											"end": 40270,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 40223,
											"end": 40270,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40216,
											"end": 40270,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40216,
											"end": 40270,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40142,
											"end": 40277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40142,
											"end": 40277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 1181,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 786,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 846,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1155,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1156,
											"end": 1161,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1148,
											"end": 1164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 1181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 786,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 786,
											"end": 1181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 786,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38586,
											"end": 38762,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 38586,
											"end": 38762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38663,
											"end": 38670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38689,
											"end": 38755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 38722,
											"end": 38742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38722,
											"end": 38740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 38722,
											"end": 38742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38722,
											"end": 38742,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 38722,
											"end": 38742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38744,
											"end": 38754,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 38689,
											"end": 38755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38689,
											"end": 38755,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 38689,
											"end": 38755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38682,
											"end": 38755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38682,
											"end": 38755,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38586,
											"end": 38762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38586,
											"end": 38762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38586,
											"end": 38762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38586,
											"end": 38762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47122,
											"end": 47382,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 47122,
											"end": 47382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47207,
											"end": 47214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47227,
											"end": 47244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47246,
											"end": 47264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47266,
											"end": 47282,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47286,
											"end": 47311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 47297,
											"end": 47301,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47303,
											"end": 47304,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47306,
											"end": 47307,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47309,
											"end": 47310,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 47286,
											"end": 47296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 47286,
											"end": 47311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47286,
											"end": 47311,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 47286,
											"end": 47311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47311,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47311,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47311,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47226,
											"end": 47311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47321,
											"end": 47349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 47333,
											"end": 47338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47340,
											"end": 47348,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47321,
											"end": 47332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 47321,
											"end": 47349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47321,
											"end": 47349,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 47321,
											"end": 47349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47366,
											"end": 47375,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47359,
											"end": 47375,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47359,
											"end": 47375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47359,
											"end": 47375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47359,
											"end": 47375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47359,
											"end": 47375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47122,
											"end": 47382,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 47122,
											"end": 47382,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 47122,
											"end": 47382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47122,
											"end": 47382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47122,
											"end": 47382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47122,
											"end": 47382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47122,
											"end": 47382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75828,
											"end": 76260,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 75828,
											"end": 76260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75957,
											"end": 75958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75940,
											"end": 75959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75940,
											"end": 75959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75940,
											"end": 75945,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75940,
											"end": 75959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75940,
											"end": 75959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75940,
											"end": 75959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75936,
											"end": 76025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 75936,
											"end": 76025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76011,
											"end": 76012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 75982,
											"end": 76014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75982,
											"end": 76014,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75936,
											"end": 76025,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 75936,
											"end": 76025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76057,
											"end": 76058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76038,
											"end": 76059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76038,
											"end": 76059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76059,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76038,
											"end": 76059,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76038,
											"end": 76059,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76034,
											"end": 76124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 76034,
											"end": 76124,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76110,
											"end": 76111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 76082,
											"end": 76113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76082,
											"end": 76113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76034,
											"end": 76124,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 76034,
											"end": 76124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76163,
											"end": 76168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76144,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76145,
											"end": 76150,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76133,
											"end": 76151,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76152,
											"end": 76159,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76133,
											"end": 76160,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76168,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76133,
											"end": 76168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76182,
											"end": 76191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76178,
											"end": 76254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76178,
											"end": 76254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 76178,
											"end": 76254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76228,
											"end": 76235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76221,
											"end": 76226,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 76237,
											"end": 76242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 76212,
											"end": 76243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76212,
											"end": 76243,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 76178,
											"end": 76254,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 76178,
											"end": 76254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75828,
											"end": 76260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75828,
											"end": 76260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75828,
											"end": 76260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75828,
											"end": 76260,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75828,
											"end": 76260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72150,
											"end": 73257,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 72150,
											"end": 73257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72255,
											"end": 72256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72239,
											"end": 72257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72239,
											"end": 72257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72239,
											"end": 72257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72239,
											"end": 72257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72235,
											"end": 72775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 72235,
											"end": 72775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72391,
											"end": 72396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72387,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72375,
											"end": 72387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 72375,
											"end": 72396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72375,
											"end": 72396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72235,
											"end": 72775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 72235,
											"end": 72775,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72235,
											"end": 72775,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 72235,
											"end": 72775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72427,
											"end": 72446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72449,
											"end": 72458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72459,
											"end": 72463,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72449,
											"end": 72464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72427,
											"end": 72464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72427,
											"end": 72464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72496,
											"end": 72501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72482,
											"end": 72493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72482,
											"end": 72501,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72478,
											"end": 72593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72478,
											"end": 72593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 72478,
											"end": 72593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72553,
											"end": 72557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72559,
											"end": 72570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72572,
											"end": 72577,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 72528,
											"end": 72578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72528,
											"end": 72578,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 72478,
											"end": 72593,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 72478,
											"end": 72593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72745,
											"end": 72750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72731,
											"end": 72742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72731,
											"end": 72750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72723,
											"end": 72727,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72713,
											"end": 72728,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72750,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72713,
											"end": 72750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72413,
											"end": 72775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72235,
											"end": 72775,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 72235,
											"end": 72775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72803,
											"end": 72804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72789,
											"end": 72805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72789,
											"end": 72805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72789,
											"end": 72791,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72789,
											"end": 72805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 72789,
											"end": 72805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72789,
											"end": 72805,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72785,
											"end": 73210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 72785,
											"end": 73210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72968,
											"end": 72973,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72964,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 72952,
											"end": 72964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 72952,
											"end": 72973,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72785,
											"end": 73210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 72785,
											"end": 73210,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72785,
											"end": 73210,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 72785,
											"end": 73210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73180,
											"end": 73185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73173,
											"end": 73175,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 73163,
											"end": 73185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72785,
											"end": 73210,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 72785,
											"end": 73210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73240,
											"end": 73242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73234,
											"end": 73238,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 73244,
											"end": 73249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 73225,
											"end": 73250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73225,
											"end": 73250,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 72150,
											"end": 73257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72150,
											"end": 73257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72150,
											"end": 73257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72150,
											"end": 73257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37782,
											"end": 37961,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 37782,
											"end": 37961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37837,
											"end": 37844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35748,
											"end": 35843,
											"name": "PUSH",
											"source": 0,
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 37895,
											"end": 37906,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1911"
										},
										{
											"begin": 37908,
											"end": 37922,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1913"
										},
										{
											"begin": 37924,
											"end": 37937,
											"name": "CHAINID",
											"source": 0
										},
										{
											"begin": 37947,
											"end": 37951,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 37873,
											"end": 37953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37873,
											"end": 37953,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37863,
											"end": 37954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37863,
											"end": 37954,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37863,
											"end": 37954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37863,
											"end": 37954,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37863,
											"end": 37954,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37863,
											"end": 37954,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37856,
											"end": 37954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37856,
											"end": 37954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37782,
											"end": 37961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37782,
											"end": 37961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9891,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9624,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9718,
											"end": 9731,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7629,
											"end": 7695,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9776,
											"end": 9793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9776,
											"end": 9793,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 9766,
											"end": 9771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9747,
											"end": 9793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9743,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 9743,
											"end": 9885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9825,
											"end": 9830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 9816,
											"end": 9831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9816,
											"end": 9831,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 9816,
											"end": 9831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9831,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9809,
											"end": 9831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9809,
											"end": 9831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9743,
											"end": 9885,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 9743,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9869,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9862,
											"end": 9874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 9862,
											"end": 9874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9862,
											"end": 9874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9891,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 9624,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9891,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33399,
											"end": 33800,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 33399,
											"end": 33800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33492,
											"end": 33506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33601,
											"end": 33605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33595,
											"end": 33606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33631,
											"end": 33641,
											"name": "PUSH",
											"source": 0,
											"value": "1901000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33626,
											"end": 33629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33619,
											"end": 33642,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33678,
											"end": 33693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33671,
											"end": 33675,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 33666,
											"end": 33669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33662,
											"end": 33676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33655,
											"end": 33694,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33730,
											"end": 33740,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33723,
											"end": 33727,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 33718,
											"end": 33721,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33714,
											"end": 33728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33707,
											"end": 33741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33779,
											"end": 33783,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 33774,
											"end": 33777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33764,
											"end": 33784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33784,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33754,
											"end": 33784,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33570,
											"end": 33794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33399,
											"end": 33800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33399,
											"end": 33800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33399,
											"end": 33800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33399,
											"end": 33800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33399,
											"end": 33800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45585,
											"end": 45592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45594,
											"end": 45606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45608,
											"end": 45615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46518,
											"end": 46584,
											"name": "PUSH",
											"source": 0,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 46513,
											"end": 46514,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46505,
											"end": 46515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46505,
											"end": 46515,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 46505,
											"end": 46584,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46501,
											"end": 46665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46501,
											"end": 46665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 46501,
											"end": 46665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46616,
											"end": 46617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46620,
											"end": 46650,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 46652,
											"end": 46653,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46600,
											"end": 46654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46600,
											"end": 46654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46600,
											"end": 46654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46600,
											"end": 46654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46600,
											"end": 46654,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46600,
											"end": 46654,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46600,
											"end": 46654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 46600,
											"end": 46654,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46501,
											"end": 46665,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 46501,
											"end": 46665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46759,
											"end": 46773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46786,
											"end": 46790,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46792,
											"end": 46793,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46795,
											"end": 46796,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46798,
											"end": 46799,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 46776,
											"end": 46800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46759,
											"end": 46800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46759,
											"end": 46800,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46832,
											"end": 46833,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46814,
											"end": 46834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46814,
											"end": 46834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46814,
											"end": 46820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46814,
											"end": 46834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46814,
											"end": 46834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46814,
											"end": 46834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46810,
											"end": 46923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 46810,
											"end": 46923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46866,
											"end": 46867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46870,
											"end": 46899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46909,
											"end": 46910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46901,
											"end": 46911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46901,
											"end": 46911,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 46850,
											"end": 46912,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46810,
											"end": 46923,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 46810,
											"end": 46923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46949,
											"end": 46969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46979,
											"end": 46980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46971,
											"end": 46981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46971,
											"end": 46981,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 46933,
											"end": 46982,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46933,
											"end": 46982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46933,
											"end": 46982,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46933,
											"end": 46982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46933,
											"end": 46982,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46933,
											"end": 46982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46933,
											"end": 46982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45459,
											"end": 46989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47515,
											"end": 48047,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 47515,
											"end": 48047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47610,
											"end": 47630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47601,
											"end": 47630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47606,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47601,
											"end": 47630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47601,
											"end": 47630,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47597,
											"end": 48041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 47653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 47597,
											"end": 48041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47706,
											"end": 47735,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47697,
											"end": 47735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47697,
											"end": 47735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47697,
											"end": 47735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47693,
											"end": 48041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 47693,
											"end": 48041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "PUSH",
											"source": 0,
											"value": "F645EEDF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47758,
											"end": 47781,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47693,
											"end": 48041,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 47693,
											"end": 48041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47811,
											"end": 47846,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47802,
											"end": 47846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47807,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47802,
											"end": 47846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47802,
											"end": 47846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47798,
											"end": 48041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 47798,
											"end": 48041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47905,
											"end": 47913,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47897,
											"end": 47914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47897,
											"end": 47914,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "PUSH",
											"source": 0,
											"value": "FCE698F700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 47869,
											"end": 47915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47869,
											"end": 47915,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47798,
											"end": 48041,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 47798,
											"end": 48041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 47975,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47936,
											"end": 47975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 47936,
											"end": 47975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 48041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 47932,
											"end": 48041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48021,
											"end": 48029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "PUSH",
											"source": 0,
											"value": "D78BCE0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 47998,
											"end": 48030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47998,
											"end": 48030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47932,
											"end": 48041,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 47932,
											"end": 48041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47515,
											"end": 48047,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 47515,
											"end": 48047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47515,
											"end": 48047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47515,
											"end": 48047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47515,
											"end": 48047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8317,
											"end": 8722,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8317,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8376,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8401,
											"end": 8412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8415,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 8426,
											"end": 8430,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 8415,
											"end": 8431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8415,
											"end": 8431,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 8415,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8401,
											"end": 8431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8550,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8539,
											"end": 8553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8636,
											"end": 8639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8629,
											"end": 8645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8681,
											"end": 8685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8669,
											"end": 8672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8665,
											"end": 8679,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8712,
											"end": 8715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8715,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8317,
											"end": 8722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8317,
											"end": 8722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8317,
											"end": 8722,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8317,
											"end": 8722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 9039,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 8794,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8855,
											"end": 8862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8874,
											"end": 8888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8927,
											"end": 8931,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8918,
											"end": 8922,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8891,
											"end": 8924,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 8891,
											"end": 8931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8945,
											"end": 8951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8956,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9010,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8941,
											"end": 9010,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "PUSH",
											"source": 0,
											"value": "B3512B0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8979,
											"end": 8999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8941,
											"end": 9010,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 8941,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9026,
											"end": 9032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9019,
											"end": 9032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 9039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 9039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 9039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8794,
											"end": 9039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4924,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5023,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 5023,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5048,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5194,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 5272,
											"end": 5273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5254,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5204,
											"end": 5275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 5204,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5060,
											"end": 5282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5382,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5371,
											"end": 5394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5399,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5402,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 5402,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 5364,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5493,
											"end": 5610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "FF00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5692,
											"end": 5697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 5880,
											"end": 5885,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 5863,
											"end": 5886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 5863,
											"end": 5886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 6004,
											"end": 6009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5986,
											"end": 6010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 5986,
											"end": 6010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 5984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5974,
											"end": 6011,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5899,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6090,
											"end": 6096,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6242,
											"end": 6253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6311,
											"end": 6314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6292,
											"end": 6321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6143,
											"end": 6327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6423,
											"end": 6426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6415,
											"end": 6426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6451,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6436,
											"end": 6458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6548,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 6548,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6573,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6654,
											"end": 6664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 6717,
											"end": 6720,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6675,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 6675,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6753,
											"end": 6757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6748,
											"end": 6751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6744,
											"end": 6758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 6758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 6844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6867,
											"end": 6870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6863,
											"end": 6877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6770,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7067,
											"end": 7121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 7067,
											"end": 7121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7211,
											"end": 7214,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7137,
											"end": 7223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 7137,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7130,
											"end": 7223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 7297,
											"end": 7302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 7247,
											"end": 7303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 7247,
											"end": 7303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7333,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7374,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7514,
											"end": 7527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7470,
											"end": 7533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 7470,
											"end": 7533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 7609,
											"end": 7615,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7556,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 7556,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7402,
											"end": 7626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7389,
											"end": 7390,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7386,
											"end": 7387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7377,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 7342,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7642,
											"end": 7645,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7043,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6919,
											"end": 7651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8006,
											"end": 8010,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8047,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8033,
											"end": 8042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8029,
											"end": 8048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8124,
											"end": 8125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8109,
											"end": 8126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8100,
											"end": 8106,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 8058,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 8058,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8174,
											"end": 8183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8164,
											"end": 8184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8159,
											"end": 8161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8137,
											"end": 8185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8272,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8202,
											"end": 8280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 8202,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8336,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8337,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8301,
											"end": 8310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8297,
											"end": 8315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8290,
											"end": 8338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8425,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 8355,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 8355,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8347,
											"end": 8433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8500,
											"end": 8509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8493,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8443,
											"end": 8515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 8443,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 8593,
											"end": 8596,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8582,
											"end": 8591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 8525,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 8525,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8665,
											"end": 8674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8658,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 8608,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 8608,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8723,
											"end": 8727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8719,
											"end": 8739,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8716,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 8702,
											"end": 8711,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8691,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 8860,
											"end": 8864,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8851,
											"end": 8857,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 8757,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 8757,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7657,
											"end": 8872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 8975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9009,
											"end": 9011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8998,
											"end": 9007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8994,
											"end": 9012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 9012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 9090,
											"end": 9091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9079,
											"end": 9088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9075,
											"end": 9092,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9072,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9022,
											"end": 9093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 9022,
											"end": 9093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8878,
											"end": 9100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 9193,
											"end": 9198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9177,
											"end": 9199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 9177,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9170,
											"end": 9175,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9200,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9214,
											"end": 9215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9211,
											"end": 9212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 9157,
											"end": 9218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9106,
											"end": 9224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9274,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9319,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9319,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 9353,
											"end": 9358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 9328,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 9328,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9230,
											"end": 9365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 9462,
											"end": 9467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9444,
											"end": 9468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 9444,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9437,
											"end": 9442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9434,
											"end": 9469,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 9424,
											"end": 9487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9371,
											"end": 9493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9589,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9570,
											"end": 9590,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9561,
											"end": 9590,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 9626,
											"end": 9631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 9599,
											"end": 9632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 9599,
											"end": 9632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9779,
											"end": 9785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9787,
											"end": 9793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9795,
											"end": 9801,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9840,
											"end": 9849,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9838,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9827,
											"end": 9850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9823,
											"end": 9856,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 9859,
											"end": 9938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 9859,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 9820,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9979,
											"end": 9980,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10049,
											"end": 10056,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10038,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10025,
											"end": 10047,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10004,
											"end": 10057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10004,
											"end": 10057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10057,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9994,
											"end": 10057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 10067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10106,
											"end": 10108,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 10177,
											"end": 10184,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10168,
											"end": 10174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10132,
											"end": 10185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 10132,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10185,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10185,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 10305,
											"end": 10312,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10296,
											"end": 10302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10294,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10260,
											"end": 10313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 10260,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10205,
											"end": 10323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10362,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 10433,
											"end": 10440,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10424,
											"end": 10430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10422,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 10388,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 10388,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10378,
											"end": 10441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10451,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 10560,
											"end": 10567,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10551,
											"end": 10557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10540,
											"end": 10549,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 10517,
											"end": 10568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 10517,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10568,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10507,
											"end": 10568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10461,
											"end": 10578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10620,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 10689,
											"end": 10696,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10680,
											"end": 10686,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10669,
											"end": 10678,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10644,
											"end": 10697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 10644,
											"end": 10697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10634,
											"end": 10697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10588,
											"end": 10707,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 10749,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 10818,
											"end": 10825,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10798,
											"end": 10807,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 10794,
											"end": 10816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 10773,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 10773,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10763,
											"end": 10826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10717,
											"end": 10836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9644,
											"end": 10843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10925,
											"end": 10931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10974,
											"end": 10976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10962,
											"end": 10971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10949,
											"end": 10972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10945,
											"end": 10977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 10980,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 10980,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 10942,
											"end": 11061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 11170,
											"end": 11177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11150,
											"end": 11159,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11146,
											"end": 11168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 11125,
											"end": 11178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 11125,
											"end": 11178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11071,
											"end": 11188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11227,
											"end": 11229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 11298,
											"end": 11305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11274,
											"end": 11296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 11253,
											"end": 11306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 11253,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11198,
											"end": 11316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 11323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11329,
											"end": 11509,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 11329,
											"end": 11509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11377,
											"end": 11454,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11367,
											"end": 11455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11474,
											"end": 11478,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11471,
											"end": 11472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11464,
											"end": 11479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11498,
											"end": 11502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11495,
											"end": 11496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11488,
											"end": 11503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11590,
											"end": 11594,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11586,
											"end": 11598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11576,
											"end": 11598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11637,
											"end": 11641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11645,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11664,
											"end": 11682,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11720,
											"end": 11724,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11712,
											"end": 11718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11708,
											"end": 11725,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11698,
											"end": 11725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 11654,
											"end": 11735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11782,
											"end": 11784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11771,
											"end": 11785,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11751,
											"end": 11769,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11748,
											"end": 11786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 11801,
											"end": 11819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 11801,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 11745,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11566,
											"end": 11835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 12021,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 11841,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11889,
											"end": 11966,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11886,
											"end": 11887,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11879,
											"end": 11967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11986,
											"end": 11990,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11983,
											"end": 11984,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11976,
											"end": 11991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12010,
											"end": 12014,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12007,
											"end": 12008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12000,
											"end": 12015,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12260,
											"end": 12264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12301,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 12287,
											"end": 12296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12275,
											"end": 12302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12275,
											"end": 12302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 12380,
											"end": 12381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12378,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12365,
											"end": 12382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12356,
											"end": 12362,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 12312,
											"end": 12383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 12312,
											"end": 12383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 12461,
											"end": 12463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12450,
											"end": 12459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 12393,
											"end": 12465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 12393,
											"end": 12465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 12543,
											"end": 12545,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12532,
											"end": 12541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12528,
											"end": 12546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12519,
											"end": 12525,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 12475,
											"end": 12547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 12475,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12601,
											"end": 12607,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 12557,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12711,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12683,
											"end": 12689,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 12639,
											"end": 12712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 12639,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 12790,
											"end": 12793,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 12779,
											"end": 12788,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12775,
											"end": 12794,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12766,
											"end": 12772,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 12722,
											"end": 12795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 12722,
											"end": 12795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12967,
											"end": 12969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12956,
											"end": 12965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12944,
											"end": 12970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 13048,
											"end": 13049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13037,
											"end": 13046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13033,
											"end": 13050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13030,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 12980,
											"end": 13051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 12980,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 13129,
											"end": 13131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13118,
											"end": 13127,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13114,
											"end": 13132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13105,
											"end": 13111,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 13061,
											"end": 13133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 13061,
											"end": 13133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12808,
											"end": 13140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13295,
											"end": 13299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13333,
											"end": 13335,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13322,
											"end": 13331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13318,
											"end": 13336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13310,
											"end": 13336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13310,
											"end": 13336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 13414,
											"end": 13415,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13403,
											"end": 13412,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13399,
											"end": 13416,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13390,
											"end": 13396,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 13346,
											"end": 13417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 13346,
											"end": 13417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 13495,
											"end": 13497,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13484,
											"end": 13493,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13480,
											"end": 13498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13471,
											"end": 13477,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 13427,
											"end": 13499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 13427,
											"end": 13499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 13577,
											"end": 13579,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13566,
											"end": 13575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13562,
											"end": 13580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13553,
											"end": 13559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 13509,
											"end": 13581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 13509,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13594,
											"end": 13774,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13594,
											"end": 13774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13719,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13639,
											"end": 13640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13632,
											"end": 13720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13739,
											"end": 13743,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13736,
											"end": 13737,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13729,
											"end": 13744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13763,
											"end": 13767,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13753,
											"end": 13768,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13820,
											"end": 13823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 13857,
											"end": 13858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 13839,
											"end": 13859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 13839,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13859,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13834,
											"end": 13859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 13891,
											"end": 13892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 13873,
											"end": 13893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 13873,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 13893,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13868,
											"end": 13893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13913,
											"end": 13914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13909,
											"end": 13918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 13918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 13918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13937,
											"end": 13940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 13935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13931,
											"end": 13941,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 13944,
											"end": 13962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 13928,
											"end": 13964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13780,
											"end": 13971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14182,
											"end": 14186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14223,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14205,
											"end": 14224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 14302,
											"end": 14303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14291,
											"end": 14300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14287,
											"end": 14304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14278,
											"end": 14284,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 14234,
											"end": 14305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 14234,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 14383,
											"end": 14385,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14372,
											"end": 14381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14368,
											"end": 14386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14359,
											"end": 14365,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 14315,
											"end": 14387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 14315,
											"end": 14387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 14465,
											"end": 14467,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14454,
											"end": 14463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14450,
											"end": 14468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14441,
											"end": 14447,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 14397,
											"end": 14469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 14397,
											"end": 14469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 14547,
											"end": 14549,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14536,
											"end": 14545,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14532,
											"end": 14550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14523,
											"end": 14529,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 14479,
											"end": 14551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 14479,
											"end": 14551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 14629,
											"end": 14632,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14618,
											"end": 14627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14614,
											"end": 14633,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14605,
											"end": 14611,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 14561,
											"end": 14634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 14561,
											"end": 14634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13977,
											"end": 14641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14820,
											"end": 14824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14858,
											"end": 14861,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14847,
											"end": 14856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14843,
											"end": 14862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14835,
											"end": 14862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 14940,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14929,
											"end": 14938,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14925,
											"end": 14942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14916,
											"end": 14922,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 14872,
											"end": 14943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 14872,
											"end": 14943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 15017,
											"end": 15019,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15006,
											"end": 15015,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14993,
											"end": 14999,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 14953,
											"end": 15021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 14953,
											"end": 15021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 15099,
											"end": 15101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15088,
											"end": 15097,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15084,
											"end": 15102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15081,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 15031,
											"end": 15103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 15031,
											"end": 15103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 15181,
											"end": 15183,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15170,
											"end": 15179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15166,
											"end": 15184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 15113,
											"end": 15185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 15113,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14647,
											"end": 15192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15198,
											"end": 15378,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 15198,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15323,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15243,
											"end": 15244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15236,
											"end": 15324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15343,
											"end": 15347,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 15340,
											"end": 15341,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15333,
											"end": 15348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15367,
											"end": 15371,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15364,
											"end": 15365,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15357,
											"end": 15372,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contract-4b98807483_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"eip712Domain()": "84b0196e",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"owner()": "8da5cb5b",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"ERC2612ExpiredSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC2612InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC2612ExpiredSignature(uint256)\":[{\"details\":\"Permit deadline has expired.\"}],\"ERC2612InvalidSigner(address,address)\":[{\"details\":\"Mismatched signature.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"Pigment\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2917,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2923,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2925,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2927,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2929,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1921,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_nameFallback",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1923,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_versionFallback",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 13,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_nonces",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2664,
								"contract": "contract-4b98807483_flattened.sol:Pigment",
								"label": "_owner",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ShortStrings": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidShortString",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "StringTooLong",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-4b98807483_flattened.sol\":7494:10547  library ShortStrings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-4b98807483_flattened.sol\":7494:10547  library ShortStrings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fba90d125dc9616d40446b87fcaf396ac2c9d578ad557810ddc8e5511ef1423c64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fba90d125dc9616d40446b87fcaf396ac2c9d578ad557810ddc8e5511ef1423c64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xA9 0xD SLT 0x5D 0xC9 PUSH2 0x6D40 PREVRANDAO PUSH12 0x87FCAF396AC2C9D578AD5578 LT 0xDD 0xC8 0xE5 MLOAD 0x1E CALL TIMESTAMP EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "7494:3053:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fba90d125dc9616d40446b87fcaf396ac2c9d578ad557810ddc8e5511ef1423c64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFB 0xA9 0xD SLT 0x5D 0xC9 PUSH2 0x6D40 PREVRANDAO PUSH12 0x87FCAF396AC2C9D578AD5578 LT 0xDD 0xC8 0xE5 MLOAD 0x1E CALL TIMESTAMP EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "7494:3053:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"byteLength(ShortString)": "infinite",
								"byteLengthWithFallback(ShortString,string storage pointer)": "infinite",
								"toShortString(string memory)": "infinite",
								"toShortStringWithFallback(string memory,string storage pointer)": "infinite",
								"toString(ShortString)": "infinite",
								"toStringWithFallback(ShortString,string storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7494,
									"end": 10547,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fba90d125dc9616d40446b87fcaf396ac2c9d578ad557810ddc8e5511ef1423c64736f6c63430008160033",
									".code": [
										{
											"begin": 7494,
											"end": 10547,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 10547,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 10547,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7494,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 10547,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 10547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 10547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7494,
											"end": 10547,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-4b98807483_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"ShortStrings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-4b98807483_flattened.sol\":10800:11847  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-4b98807483_flattened.sol\":10800:11847  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201a352a02779569ab03c26e7a692c66affb4bce3a072a82fc0129de040158729a64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201a352a02779569ab03c26e7a692c66affb4bce3a072a82fc0129de040158729a64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLDATALOAD 0x2A MUL PUSH24 0x9569AB03C26E7A692C66AFFB4BCE3A072A82FC0129DE0401 PC PUSH19 0x9A64736F6C6343000816003300000000000000 ",
							"sourceMap": "10800:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201a352a02779569ab03c26e7a692c66affb4bce3a072a82fc0129de040158729a64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE CALLDATALOAD 0x2A MUL PUSH24 0x9569AB03C26E7A692C66AFFB4BCE3A072A82FC0129DE0401 PC PUSH19 0x9A64736F6C6343000816003300000000000000 ",
							"sourceMap": "10800:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10800,
									"end": 11847,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201a352a02779569ab03c26e7a692c66affb4bce3a072a82fc0129de040158729a64736f6c63430008160033",
									".code": [
										{
											"begin": 10800,
											"end": 11847,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 10800,
											"end": 11847,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10800,
											"end": 11847,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10800,
											"end": 11847,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10800,
											"end": 11847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10800,
											"end": 11847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10800,
											"end": 11847,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10800,
											"end": 11847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10800,
											"end": 11847,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-4b98807483_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-4b98807483_flattened.sol\":3567:6252  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-4b98807483_flattened.sol\":3567:6252  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205fbdcfb3198a272aee8a69a5af22480c2caeb820371bd2bbde1901123867ae5064736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205fbdcfb3198a272aee8a69a5af22480c2caeb820371bd2bbde1901123867ae5064736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 0xBD 0xCF 0xB3 NOT DUP11 0x27 0x2A 0xEE DUP11 PUSH10 0xA5AF22480C2CAEB82037 SHL 0xD2 0xBB 0xDE NOT ADD SLT CODESIZE PUSH8 0xAE5064736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "3567:2685:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205fbdcfb3198a272aee8a69a5af22480c2caeb820371bd2bbde1901123867ae5064736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH0 0xBD 0xCF 0xB3 NOT DUP11 0x27 0x2A 0xEE DUP11 PUSH10 0xA5AF22480C2CAEB82037 SHL 0xD2 0xBB 0xDE NOT ADD SLT CODESIZE PUSH8 0xAE5064736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "3567:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3567,
									"end": 6252,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205fbdcfb3198a272aee8a69a5af22480c2caeb820371bd2bbde1901123867ae5064736f6c63430008160033",
									".code": [
										{
											"begin": 3567,
											"end": 6252,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 6252,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 6252,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3567,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3567,
											"end": 6252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 6252,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-4b98807483_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contract-4b98807483_flattened.sol\":27188:30035  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contract-4b98807483_flattened.sol\":27188:30035  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220712a4bff4223955e9630419418b0aece4c4fa1be7ee6e221c81ad81e946cbaa564736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220712a4bff4223955e9630419418b0aece4c4fa1be7ee6e221c81ad81e946cbaa564736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x2A4BFF4223955E9630419418B0AECE4C4FA1 0xBE PUSH31 0xE6E221C81AD81E946CBAA564736F6C63430008160033000000000000000000 ",
							"sourceMap": "27188:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220712a4bff4223955e9630419418b0aece4c4fa1be7ee6e221c81ad81e946cbaa564736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x2A4BFF4223955E9630419418B0AECE4C4FA1 0xBE PUSH31 0xE6E221C81AD81E946CBAA564736F6C63430008160033000000000000000000 ",
							"sourceMap": "27188:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 27188,
									"end": 30035,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220712a4bff4223955e9630419418b0aece4c4fa1be7ee6e221c81ad81e946cbaa564736f6c63430008160033",
									".code": [
										{
											"begin": 27188,
											"end": 30035,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 27188,
											"end": 30035,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 27188,
											"end": 30035,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27188,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27188,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27188,
											"end": 30035,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27188,
											"end": 30035,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27188,
											"end": 30035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27188,
											"end": 30035,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contract-4b98807483_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contract-4b98807483_flattened.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contract-4b98807483_flattened.sol\":{\"keccak256\":\"0xbbafe13b6a833603d039b4f4d8e75e608f5d57eee2f07d95cc9911ddbef7e026\",\"urls\":[\"bzz-raw://9220f1ae12e98e2adbd8a01f99f17785b88a22bbf033640c9482b75156761dad\",\"dweb:/ipfs/QmUu6YZXkBW9JaaxnhAyBhck1eB5Kz9DPYCjXXQyArvhdJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contract-4b98807483_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contract-4b98807483_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contract-4b98807483_flattened.sol": {
				"ast": {
					"absolutePath": "contract-4b98807483_flattened.sol",
					"exportedSymbols": {
						"Context": [
							2658
						],
						"ECDSA": [
							2458
						],
						"EIP712": [
							2111
						],
						"ERC20": [
							3409
						],
						"ERC20Permit": [
							3552
						],
						"IERC1155Errors": [
							2629
						],
						"IERC20": [
							2880
						],
						"IERC20Errors": [
							2534
						],
						"IERC20Metadata": [
							2903
						],
						"IERC20Permit": [
							2493
						],
						"IERC5267": [
							91
						],
						"IERC721Errors": [
							2582
						],
						"Math": [
							1571
						],
						"MessageHashUtils": [
							1892
						],
						"Nonces": [
							67
						],
						"Ownable": [
							2803
						],
						"Pigment": [
							3587
						],
						"ShortString": [
							203
						],
						"ShortStrings": [
							414
						],
						"SignedMath": [
							518
						],
						"StorageSlot": [
							200
						],
						"Strings": [
							1821
						]
					},
					"id": 3588,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Nonces",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "152:83:0",
								"text": " @dev Provides tracking nonces for addresses. Nonces will only increment."
							},
							"fullyImplemented": true,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "Nonces",
							"nameLocation": "254:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "267:90:0",
										"text": " @dev The nonce used for an `account` is not the expected current nonce."
									},
									"errorSelector": "752d88c0",
									"id": 9,
									"name": "InvalidAccountNonce",
									"nameLocation": "368:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "currentNonce",
												"nameLocation": "413:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:39:0"
									},
									"src": "362:65:0"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "_nonces",
									"nameLocation": "477:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 67,
									"src": "433:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 12,
										"keyName": "account",
										"keyNameLocation": "449:7:0",
										"keyType": {
											"id": 10,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "441:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "433:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 11,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "460:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "634:38:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 21,
														"name": "_nonces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "651:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 23,
													"indexExpression": {
														"id": 22,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "659:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "651:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 24,
												"nodeType": "Return",
												"src": "644:21:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "491:69:0",
										"text": " @dev Returns the next unused nonce for an address."
									},
									"functionSelector": "7ecebe00",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "574:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "589:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "581:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "580:15:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "625:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:9:0"
									},
									"scope": 67,
									"src": "565:107:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "855:326:0",
										"statements": [
											{
												"id": 39,
												"nodeType": "UncheckedBlock",
												"src": "1058:117:0",
												"statements": [
													{
														"expression": {
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "1148:16:0",
															"subExpression": {
																"baseExpression": {
																	"id": 34,
																	"name": "_nonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1148:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 36,
																"indexExpression": {
																	"id": 35,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1156:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "1148:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 33,
														"id": 38,
														"nodeType": "Return",
														"src": "1141:23:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "678:103:0",
										"text": " @dev Consumes a nonce.\n Returns the current value and increments nonce."
									},
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useNonce",
									"nameLocation": "795:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "813:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "805:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:15:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "846:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:9:0"
									},
									"scope": 67,
									"src": "786:395:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1365:149:0",
										"statements": [
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "1383:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 65,
														"src": "1375:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"arguments": [
														{
															"id": 52,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1403:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 51,
														"name": "_useNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "1393:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1393:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1375:34:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 55,
														"name": "nonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "1423:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 56,
														"name": "current",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1423:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 64,
												"nodeType": "IfStatement",
												"src": "1419:89:0",
												"trueBody": {
													"id": 63,
													"nodeType": "Block",
													"src": "1441:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 59,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "1482:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 60,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "1489:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 58,
																	"name": "InvalidAccountNonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1462:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) pure"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1462:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 62,
															"nodeType": "RevertStatement",
															"src": "1455:42:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1187:100:0",
										"text": " @dev Same as {_useNonce} but checking that `nonce` is the next valid for `owner`."
									},
									"id": 66,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_useCheckedNonce",
									"nameLocation": "1301:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1326:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1318:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "1341:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "1333:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1317:30:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:0:0"
									},
									"scope": 67,
									"src": "1292:222:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "236:1280:0",
							"usedErrors": [
								9
							],
							"usedEvents": []
						},
						{
							"id": 68,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1658:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC5267",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "IERC5267",
							"nameLocation": "1694:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1709:84:0",
										"text": " @dev MAY be emitted to signal that the domain could have changed."
									},
									"eventSelector": "0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31",
									"id": 71,
									"name": "EIP712DomainChanged",
									"nameLocation": "1804:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1823:2:0"
									},
									"src": "1798:28:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "1832:140:0",
										"text": " @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."
									},
									"functionSelector": "84b0196e",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "1986:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1998:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "2068:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2061:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 74,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "2061:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2102:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2088:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2134:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2120:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 78,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2120:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "2163:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2155:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 80,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "2192:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2184:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "2231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2223:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "2266:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2249:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 86,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 87,
													"nodeType": "ArrayTypeName",
													"src": "2249:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2047:239:0"
									},
									"scope": 91,
									"src": "1977:310:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3588,
							"src": "1684:605:0",
							"usedErrors": [],
							"usedEvents": [
								71
							]
						},
						{
							"id": 92,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "2515:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 93,
								"nodeType": "StructuredDocumentation",
								"src": "2541:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 200,
							"linearizedBaseContracts": [
								200
							],
							"name": "StorageSlot",
							"nameLocation": "3575:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 96,
									"members": [
										{
											"constant": false,
											"id": 95,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3630:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 96,
											"src": "3622:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 94,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3622:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "3600:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3593:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 99,
									"members": [
										{
											"constant": false,
											"id": 98,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3682:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 99,
											"src": "3677:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 97,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3677:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "3655:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3648:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 102,
									"members": [
										{
											"constant": false,
											"id": 101,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3737:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 102,
											"src": "3729:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 100,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3729:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "3707:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3700:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 105,
									"members": [
										{
											"constant": false,
											"id": 104,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3792:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 105,
											"src": "3784:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3784:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "3762:11:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3755:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 108,
									"members": [
										{
											"constant": false,
											"id": 107,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3845:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 108,
											"src": "3838:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 106,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "3838:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "3817:10:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3810:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 111,
									"members": [
										{
											"constant": false,
											"id": 110,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "3896:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 111,
											"src": "3890:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 109,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "3890:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "3870:9:0",
									"nodeType": "StructDefinition",
									"scope": 200,
									"src": "3863:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "4090:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4152:38:0",
													"nodeType": "YulBlock",
													"src": "4152:38:0",
													"statements": [
														{
															"nativeSrc": "4166:14:0",
															"nodeType": "YulAssignment",
															"src": "4166:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4176:4:0",
																"nodeType": "YulIdentifier",
																"src": "4176:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4166:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4166:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 118,
														"isOffset": false,
														"isSlot": true,
														"src": "4166:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 114,
														"isOffset": false,
														"isSlot": false,
														"src": "4176:4:0",
														"valueSize": 1
													}
												],
												"id": 120,
												"nodeType": "InlineAssembly",
												"src": "4143:47:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3914:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "4015:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4038:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4030:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4029:14:0"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4087:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "4067:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$96_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 117,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 116,
														"name": "AddressSlot",
														"nameLocations": [
															"4067:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 96,
														"src": "4067:11:0"
													},
													"referencedDeclaration": 96,
													"src": "4067:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$96_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:23:0"
									},
									"scope": 200,
									"src": "4006:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "4378:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4440:38:0",
													"nodeType": "YulBlock",
													"src": "4440:38:0",
													"statements": [
														{
															"nativeSrc": "4454:14:0",
															"nodeType": "YulAssignment",
															"src": "4454:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4464:4:0",
																"nodeType": "YulIdentifier",
																"src": "4464:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4454:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4454:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 129,
														"isOffset": false,
														"isSlot": true,
														"src": "4454:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "4464:4:0",
														"valueSize": 1
													}
												],
												"id": 131,
												"nodeType": "InlineAssembly",
												"src": "4431:47:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4202:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "4303:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4326:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4318:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 124,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4317:14:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4375:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4355:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$99_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 128,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 127,
														"name": "BooleanSlot",
														"nameLocations": [
															"4355:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 99,
														"src": "4355:11:0"
													},
													"referencedDeclaration": 99,
													"src": "4355:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$99_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4354:23:0"
									},
									"scope": 200,
									"src": "4294:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "4666:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4728:38:0",
													"nodeType": "YulBlock",
													"src": "4728:38:0",
													"statements": [
														{
															"nativeSrc": "4742:14:0",
															"nodeType": "YulAssignment",
															"src": "4742:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "4752:4:0",
																"nodeType": "YulIdentifier",
																"src": "4752:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4742:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "4742:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": true,
														"src": "4742:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 136,
														"isOffset": false,
														"isSlot": false,
														"src": "4752:4:0",
														"valueSize": 1
													}
												],
												"id": 142,
												"nodeType": "InlineAssembly",
												"src": "4719:47:0"
											}
										]
									},
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4490:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "4591:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4606:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 135,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4605:14:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4663:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4643:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$102_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 139,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 138,
														"name": "Bytes32Slot",
														"nameLocations": [
															"4643:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 102,
														"src": "4643:11:0"
													},
													"referencedDeclaration": 102,
													"src": "4643:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$102_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4642:23:0"
									},
									"scope": 200,
									"src": "4582:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "4954:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5016:38:0",
													"nodeType": "YulBlock",
													"src": "5016:38:0",
													"statements": [
														{
															"nativeSrc": "5030:14:0",
															"nodeType": "YulAssignment",
															"src": "5030:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5040:4:0",
																"nodeType": "YulIdentifier",
																"src": "5040:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5030:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5030:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 151,
														"isOffset": false,
														"isSlot": true,
														"src": "5030:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 147,
														"isOffset": false,
														"isSlot": false,
														"src": "5040:4:0",
														"valueSize": 1
													}
												],
												"id": 153,
												"nodeType": "InlineAssembly",
												"src": "5007:47:0"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "4778:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "4879:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "4902:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4894:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 146,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4893:14:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4951:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "4931:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$105_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 149,
														"name": "Uint256Slot",
														"nameLocations": [
															"4931:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 105,
														"src": "4931:11:0"
													},
													"referencedDeclaration": 105,
													"src": "4931:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$105_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4930:23:0"
									},
									"scope": 200,
									"src": "4870:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5239:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5301:38:0",
													"nodeType": "YulBlock",
													"src": "5301:38:0",
													"statements": [
														{
															"nativeSrc": "5315:14:0",
															"nodeType": "YulAssignment",
															"src": "5315:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5325:4:0",
																"nodeType": "YulIdentifier",
																"src": "5325:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5315:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 162,
														"isOffset": false,
														"isSlot": true,
														"src": "5315:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 158,
														"isOffset": false,
														"isSlot": false,
														"src": "5325:4:0",
														"valueSize": 1
													}
												],
												"id": 164,
												"nodeType": "InlineAssembly",
												"src": "5292:47:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5066:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "5166:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5180:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 157,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5179:14:0"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5236:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5217:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 160,
														"name": "StringSlot",
														"nameLocations": [
															"5217:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 108,
														"src": "5217:10:0"
													},
													"referencedDeclaration": 108,
													"src": "5217:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5216:22:0"
									},
									"scope": 200,
									"src": "5157:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5547:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5609:44:0",
													"nodeType": "YulBlock",
													"src": "5609:44:0",
													"statements": [
														{
															"nativeSrc": "5623:20:0",
															"nodeType": "YulAssignment",
															"src": "5623:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "5633:10:0",
																"nodeType": "YulIdentifier",
																"src": "5633:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5623:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5623:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 173,
														"isOffset": false,
														"isSlot": true,
														"src": "5623:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 169,
														"isOffset": false,
														"isSlot": true,
														"src": "5633:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 175,
												"nodeType": "InlineAssembly",
												"src": "5600:53:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5351:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "5466:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "5495:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5480:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 168,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5479:22:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5544:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5525:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 171,
														"name": "StringSlot",
														"nameLocations": [
															"5525:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 108,
														"src": "5525:10:0"
													},
													"referencedDeclaration": 108,
													"src": "5525:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:22:0"
									},
									"scope": 200,
									"src": "5457:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "5835:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "5897:38:0",
													"nodeType": "YulBlock",
													"src": "5897:38:0",
													"statements": [
														{
															"nativeSrc": "5911:14:0",
															"nodeType": "YulAssignment",
															"src": "5911:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "5921:4:0",
																"nodeType": "YulIdentifier",
																"src": "5921:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "5911:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "5911:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 184,
														"isOffset": false,
														"isSlot": true,
														"src": "5911:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 180,
														"isOffset": false,
														"isSlot": false,
														"src": "5921:4:0",
														"valueSize": 1
													}
												],
												"id": 186,
												"nodeType": "InlineAssembly",
												"src": "5888:47:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5665:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "5764:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "5785:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5777:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 179,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5776:14:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5832:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "5814:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 182,
														"name": "BytesSlot",
														"nameLocations": [
															"5814:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "5814:9:0"
													},
													"referencedDeclaration": 111,
													"src": "5814:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5813:21:0"
									},
									"scope": 200,
									"src": "5755:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6138:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "6200:44:0",
													"nodeType": "YulBlock",
													"src": "6200:44:0",
													"statements": [
														{
															"nativeSrc": "6214:20:0",
															"nodeType": "YulAssignment",
															"src": "6214:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "6224:10:0",
																"nodeType": "YulIdentifier",
																"src": "6224:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "6214:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "6214:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 195,
														"isOffset": false,
														"isSlot": true,
														"src": "6214:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 191,
														"isOffset": false,
														"isSlot": true,
														"src": "6224:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 197,
												"nodeType": "InlineAssembly",
												"src": "6191:53:0"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "5947:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "6060:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "6087:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6073:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6073:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6072:21:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6135:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6117:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 194,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 193,
														"name": "BytesSlot",
														"nameLocations": [
															"6117:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 111,
														"src": "6117:9:0"
													},
													"referencedDeclaration": 111,
													"src": "6117:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$111_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6116:21:0"
									},
									"scope": 200,
									"src": "6051:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "3567:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6392:24:0"
						},
						{
							"canonicalName": "ShortString",
							"id": 203,
							"name": "ShortString",
							"nameLocation": "6592:11:0",
							"nodeType": "UserDefinedValueTypeDefinition",
							"src": "6587:28:0",
							"underlyingType": {
								"id": 202,
								"name": "bytes32",
								"nodeType": "ElementaryTypeName",
								"src": "6607:7:0",
								"typeDescriptions": {
									"typeIdentifier": "t_bytes32",
									"typeString": "bytes32"
								}
							}
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ShortStrings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "6617:876:0",
								"text": " @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 414,
							"linearizedBaseContracts": [
								414
							],
							"name": "ShortStrings",
							"nameLocation": "7502:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 207,
									"mutability": "constant",
									"name": "FALLBACK_SENTINEL",
									"nameLocation": "7609:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 414,
									"src": "7584:111:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 205,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "7584:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646",
										"id": 206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7629:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_255_by_1",
											"typeString": "int_const 255"
										},
										"value": "0x00000000000000000000000000000000000000000000000000000000000000FF"
									},
									"visibility": "private"
								},
								{
									"errorSelector": "305a27a9",
									"id": 211,
									"name": "StringTooLong",
									"nameLocation": "7708:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "7729:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "7722:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7722:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7721:12:0"
									},
									"src": "7702:32:0"
								},
								{
									"errorSelector": "b3512b0c",
									"id": 213,
									"name": "InvalidShortString",
									"nameLocation": "7745:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7763:2:0"
									},
									"src": "7739:27:0"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "8025:208:0",
										"statements": [
											{
												"assignments": [
													223
												],
												"declarations": [
													{
														"constant": false,
														"id": 223,
														"mutability": "mutable",
														"name": "bstr",
														"nameLocation": "8048:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 256,
														"src": "8035:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 222,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8035:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 228,
												"initialValue": {
													"arguments": [
														{
															"id": 226,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8061:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8055:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 224,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "8055:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8055:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8035:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 229,
															"name": "bstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "8079:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8084:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8079:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8093:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "8079:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 238,
												"nodeType": "IfStatement",
												"src": "8075:72:0",
												"trueBody": {
													"id": 237,
													"nodeType": "Block",
													"src": "8097:50:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 234,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "8132:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 233,
																	"name": "StringTooLong",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "8118:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8118:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 236,
															"nodeType": "RevertStatement",
															"src": "8111:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 247,
																						"name": "bstr",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 223,
																						"src": "8204:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 246,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8196:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes32_$",
																						"typeString": "type(bytes32)"
																					},
																					"typeName": {
																						"id": 245,
																						"name": "bytes32",
																						"nodeType": "ElementaryTypeName",
																						"src": "8196:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8196:13:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8188:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 243,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "8188:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8188:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "|",
																	"rightExpression": {
																		"expression": {
																			"id": 250,
																			"name": "bstr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "8213:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8218:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "8213:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8188:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8180:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 241,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8180:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8180:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 239,
															"name": "ShortString",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "8163:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																"typeString": "type(ShortString)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8175:4:0",
														"memberName": "wrap",
														"nodeType": "MemberAccess",
														"src": "8163:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (bytes32) pure returns (ShortString)"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"functionReturnParameters": 221,
												"id": 255,
												"nodeType": "Return",
												"src": "8156:70:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "7772:170:0",
										"text": " @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortString",
									"nameLocation": "7956:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "7984:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "7970:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 215,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7970:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:19:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8012:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 219,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 218,
														"name": "ShortString",
														"nameLocations": [
															"8012:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "8012:11:0"
													},
													"referencedDeclaration": 203,
													"src": "8012:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:13:0"
									},
									"scope": 414,
									"src": "7947:286:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "8391:331:0",
										"statements": [
											{
												"assignments": [
													267
												],
												"declarations": [
													{
														"constant": false,
														"id": 267,
														"mutability": "mutable",
														"name": "len",
														"nameLocation": "8409:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "8401:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8401:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"arguments": [
														{
															"id": 269,
															"name": "sstr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8426:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														],
														"id": 268,
														"name": "byteLength",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "8415:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_uint256_$",
															"typeString": "function (ShortString) pure returns (uint256)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8415:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8401:30:0"
											},
											{
												"assignments": [
													273
												],
												"declarations": [
													{
														"constant": false,
														"id": 273,
														"mutability": "mutable",
														"name": "str",
														"nameLocation": "8533:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 282,
														"src": "8519:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 272,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8519:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 278,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3332",
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8550:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "32"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															}
														],
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8539:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 274,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "8543:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8539:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8519:34:0"
											},
											{
												"AST": {
													"nativeSrc": "8615:81:0",
													"nodeType": "YulBlock",
													"src": "8615:81:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "8636:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "8636:3:0"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8641:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "8641:3:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8629:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8629:6:0"
																},
																"nativeSrc": "8629:16:0",
																"nodeType": "YulFunctionCall",
																"src": "8629:16:0"
															},
															"nativeSrc": "8629:16:0",
															"nodeType": "YulExpressionStatement",
															"src": "8629:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "str",
																				"nativeSrc": "8669:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "8669:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8674:4:0",
																				"nodeType": "YulLiteral",
																				"src": "8674:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8665:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "8665:3:0"
																		},
																		"nativeSrc": "8665:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "8665:14:0"
																	},
																	{
																		"name": "sstr",
																		"nativeSrc": "8681:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "8681:4:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8658:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8658:6:0"
																},
																"nativeSrc": "8658:28:0",
																"nodeType": "YulFunctionCall",
																"src": "8658:28:0"
															},
															"nativeSrc": "8658:28:0",
															"nodeType": "YulExpressionStatement",
															"src": "8658:28:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 267,
														"isOffset": false,
														"isSlot": false,
														"src": "8641:3:0",
														"valueSize": 1
													},
													{
														"declaration": 261,
														"isOffset": false,
														"isSlot": false,
														"src": "8681:4:0",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "8636:3:0",
														"valueSize": 1
													},
													{
														"declaration": 273,
														"isOffset": false,
														"isSlot": false,
														"src": "8669:3:0",
														"valueSize": 1
													}
												],
												"id": 279,
												"nodeType": "InlineAssembly",
												"src": "8606:90:0"
											},
											{
												"expression": {
													"id": 280,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 273,
													"src": "8712:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 265,
												"id": 281,
												"nodeType": "Return",
												"src": "8705:10:0"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "8239:73:0",
										"text": " @dev Decode a `ShortString` back to a \"normal\" string."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "8326:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "8347:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "8335:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 259,
														"name": "ShortString",
														"nameLocations": [
															"8335:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "8335:11:0"
													},
													"referencedDeclaration": 203,
													"src": "8335:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8334:18:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "8376:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8375:15:0"
									},
									"scope": 414,
									"src": "8317:405:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "8864:175:0",
										"statements": [
											{
												"assignments": [
													293
												],
												"declarations": [
													{
														"constant": false,
														"id": 293,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8882:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "8874:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8874:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 298,
																		"name": "sstr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "8918:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"expression": {
																		"id": 296,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "8899:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8911:6:0",
																	"memberName": "unwrap",
																	"nodeType": "MemberAccess",
																	"src": "8899:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																		"typeString": "function (ShortString) pure returns (bytes32)"
																	}
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8899:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8891:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 294,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8891:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8891:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"hexValue": "30784646",
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8927:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "0xFF"
													},
													"src": "8891:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8874:57:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 304,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "8945:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3331",
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8954:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31_by_1",
															"typeString": "int_const 31"
														},
														"value": "31"
													},
													"src": "8945:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 311,
												"nodeType": "IfStatement",
												"src": "8941:69:0",
												"trueBody": {
													"id": 310,
													"nodeType": "Block",
													"src": "8958:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 307,
																	"name": "InvalidShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 213,
																	"src": "8979:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8979:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 309,
															"nodeType": "RevertStatement",
															"src": "8972:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 312,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 293,
													"src": "9026:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 291,
												"id": 313,
												"nodeType": "Return",
												"src": "9019:13:0"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "8728:61:0",
										"text": " @dev Return the length of a `ShortString`."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLength",
									"nameLocation": "8803:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "sstr",
												"nameLocation": "8826:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "8814:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 285,
														"name": "ShortString",
														"nameLocations": [
															"8814:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "8814:11:0"
													},
													"referencedDeclaration": 203,
													"src": "8814:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8813:18:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "8855:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:9:0"
									},
									"scope": 414,
									"src": "8794:245:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "9262:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 328,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "9282:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9276:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 326,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "9276:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9276:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9289:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9276:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9298:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "9276:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "9360:127:0",
													"statements": [
														{
															"expression": {
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 341,
																				"name": "store",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 320,
																				"src": "9400:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_storage_ptr",
																					"typeString": "string storage pointer"
																				}
																			],
																			"expression": {
																				"id": 338,
																				"name": "StorageSlot",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 200,
																				"src": "9374:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_StorageSlot_$200_$",
																					"typeString": "type(library StorageSlot)"
																				}
																			},
																			"id": 340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9386:13:0",
																			"memberName": "getStringSlot",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 177,
																			"src": "9374:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$108_storage_ptr_$",
																				"typeString": "function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"
																			}
																		},
																		"id": 342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9374:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StringSlot_$108_storage_ptr",
																			"typeString": "struct StorageSlot.StringSlot storage pointer"
																		}
																	},
																	"id": 343,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9407:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 107,
																	"src": "9374:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 344,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 318,
																	"src": "9415:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"src": "9374:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 346,
															"nodeType": "ExpressionStatement",
															"src": "9374:46:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 349,
																		"name": "FALLBACK_SENTINEL",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "9458:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"id": 347,
																		"name": "ShortString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "9441:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																			"typeString": "type(ShortString)"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "9453:4:0",
																	"memberName": "wrap",
																	"nodeType": "MemberAccess",
																	"src": "9441:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$203_$",
																		"typeString": "function (bytes32) pure returns (ShortString)"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9441:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 325,
															"id": 351,
															"nodeType": "Return",
															"src": "9434:42:0"
														}
													]
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "9272:215:0",
												"trueBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "9302:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 334,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "9337:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 333,
																	"name": "toShortString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "9323:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$",
																		"typeString": "function (string memory) pure returns (ShortString)"
																	}
																},
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9323:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															},
															"functionReturnParameters": 325,
															"id": 336,
															"nodeType": "Return",
															"src": "9316:27:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "9045:103:0",
										"text": " @dev Encode a string into a `ShortString`, or write it to storage if it is too long."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toShortStringWithFallback",
									"nameLocation": "9162:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9202:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9188:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9188:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "9224:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9209:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 319,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9209:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9187:43:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9249:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 323,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 322,
														"name": "ShortString",
														"nameLocations": [
															"9249:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "9249:11:0"
													},
													"referencedDeclaration": 203,
													"src": "9249:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9248:13:0"
									},
									"scope": 414,
									"src": "9153:340:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 381,
										"nodeType": "Block",
										"src": "9733:158:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 368,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "9766:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 366,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "9747:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "9759:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "9747:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9747:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 370,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "9776:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "9747:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 379,
													"nodeType": "Block",
													"src": "9848:37:0",
													"statements": [
														{
															"expression": {
																"id": 377,
																"name": "store",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "9869:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage_ptr",
																	"typeString": "string storage pointer"
																}
															},
															"functionReturnParameters": 365,
															"id": 378,
															"nodeType": "Return",
															"src": "9862:12:0"
														}
													]
												},
												"id": 380,
												"nodeType": "IfStatement",
												"src": "9743:142:0",
												"trueBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "9795:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "9825:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 372,
																	"name": "toString",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "9816:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_string_memory_ptr_$",
																		"typeString": "function (ShortString) pure returns (string memory)"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9816:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 365,
															"id": 375,
															"nodeType": "Return",
															"src": "9809:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "9499:120:0",
										"text": " @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."
									},
									"id": 382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringWithFallback",
									"nameLocation": "9633:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9666:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9654:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "ShortString",
														"nameLocations": [
															"9654:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "9654:11:0"
													},
													"referencedDeclaration": 203,
													"src": "9654:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "9688:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9673:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 360,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9673:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9653:41:0"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "9718:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9718:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9717:15:0"
									},
									"scope": 414,
									"src": "9624:267:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "10371:174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10404:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																	"typeString": "ShortString"
																}
															],
															"expression": {
																"id": 393,
																"name": "ShortString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "10385:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_userDefinedValueType$_ShortString_$203_$",
																	"typeString": "type(ShortString)"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "10397:6:0",
															"memberName": "unwrap",
															"nodeType": "MemberAccess",
															"src": "10385:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_bytes32_$",
																"typeString": "function (ShortString) pure returns (bytes32)"
															}
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10385:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 397,
														"name": "FALLBACK_SENTINEL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "10414:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "10385:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 410,
													"nodeType": "Block",
													"src": "10488:51:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 406,
																			"name": "store",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "10515:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_storage_ptr",
																				"typeString": "string storage pointer"
																			}
																		],
																		"id": 405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10509:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 404,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "10509:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10509:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes storage pointer"
																	}
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10522:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10509:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 392,
															"id": 409,
															"nodeType": "Return",
															"src": "10502:26:0"
														}
													]
												},
												"id": 411,
												"nodeType": "IfStatement",
												"src": "10381:158:0",
												"trueBody": {
													"id": 403,
													"nodeType": "Block",
													"src": "10433:49:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 400,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "10465:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																			"typeString": "ShortString"
																		}
																	],
																	"id": 399,
																	"name": "byteLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "10454:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$returns$_t_uint256_$",
																		"typeString": "function (ShortString) pure returns (uint256)"
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10454:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 392,
															"id": 402,
															"nodeType": "Return",
															"src": "10447:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "9897:364:0",
										"text": " @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "byteLengthWithFallback",
									"nameLocation": "10275:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10310:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10298:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
													"typeString": "ShortString"
												},
												"typeName": {
													"id": 385,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 384,
														"name": "ShortString",
														"nameLocations": [
															"10298:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "10298:11:0"
													},
													"referencedDeclaration": 203,
													"src": "10298:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "10332:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10317:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10317:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10297:41:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "10362:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10362:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10361:9:0"
									},
									"scope": 414,
									"src": "10266:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "7494:3053:0",
							"usedErrors": [
								211,
								213
							],
							"usedEvents": []
						},
						{
							"id": 415,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10693:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 416,
								"nodeType": "StructuredDocumentation",
								"src": "10719:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 518,
							"linearizedBaseContracts": [
								518
							],
							"name": "SignedMath",
							"nameLocation": "10808:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "10960:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 426,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "10977:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 427,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "10981:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "10977:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 430,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 421,
														"src": "10989:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10977:13:0",
													"trueExpression": {
														"id": 429,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "10985:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 425,
												"id": 432,
												"nodeType": "Return",
												"src": "10970:20:0"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "10825:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "10905:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10916:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10909:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 418,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10909:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10926:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10919:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 420,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10919:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10908:20:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "10952:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 423,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "10952:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10951:8:0"
									},
									"scope": 518,
									"src": "10896:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "11139:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 444,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "11156:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 445,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "11160:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "11156:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 448,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 439,
														"src": "11168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11156:13:0",
													"trueExpression": {
														"id": 447,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "11164:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 443,
												"id": 450,
												"nodeType": "Return",
												"src": "11149:20:0"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "11003:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "11084:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11095:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11088:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 436,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11088:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11105:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11098:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 438,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11098:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11087:20:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "11131:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 441,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11131:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11130:8:0"
									},
									"scope": 518,
									"src": "11075:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "11381:162:0",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "11450:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "11443:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 462,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "11443:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 476,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 464,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 455,
																	"src": "11455:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 465,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "11459:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "11455:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 467,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11454:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "11466:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 469,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "11470:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "11466:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 471,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11465:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11476:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11465:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 474,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11464:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "11454:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11443:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 477,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "11495:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 482,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 463,
																						"src": "11515:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 481,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "11507:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 480,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "11507:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "11507:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11521:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "11507:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11500:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 478,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11500:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11500:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 487,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 455,
																				"src": "11529:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 488,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "11533:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "11529:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 490,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11528:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "11500:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 492,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11499:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "11495:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 461,
												"id": 494,
												"nodeType": "Return",
												"src": "11488:48:0"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "11182:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "11322:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11337:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11330:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 454,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11330:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11347:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11340:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 456,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11329:20:0"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "11373:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 459,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11373:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11372:8:0"
									},
									"scope": 518,
									"src": "11313:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "11687:158:0",
										"statements": [
											{
												"id": 515,
												"nodeType": "UncheckedBlock",
												"src": "11697:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 506,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "11812:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11817:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "11812:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "11825:2:0",
																		"subExpression": {
																			"id": 510,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "11826:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "11812:15:0",
																	"trueExpression": {
																		"id": 509,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "11821:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11804:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 504,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11804:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11804:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 503,
														"id": 514,
														"nodeType": "Return",
														"src": "11797:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "11549:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "11641:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11652:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11645:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 498,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "11645:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11644:10:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11678:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11677:9:0"
									},
									"scope": 518,
									"src": "11632:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "10800:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 519,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11981:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 520,
								"nodeType": "StructuredDocumentation",
								"src": "12007:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1571,
							"linearizedBaseContracts": [
								1571
							],
							"name": "Math",
							"nameLocation": "12089:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "12100:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 523,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "12161:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12181:2:0"
									},
									"src": "12155:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 528,
									"members": [
										{
											"id": 524,
											"name": "Floor",
											"nameLocation": "12214:5:0",
											"nodeType": "EnumValue",
											"src": "12214:5:0"
										},
										{
											"id": 525,
											"name": "Ceil",
											"nameLocation": "12257:4:0",
											"nodeType": "EnumValue",
											"src": "12257:4:0"
										},
										{
											"id": 526,
											"name": "Trunc",
											"nameLocation": "12299:5:0",
											"nodeType": "EnumValue",
											"src": "12299:5:0"
										},
										{
											"id": 527,
											"name": "Expand",
											"nameLocation": "12329:6:0",
											"nodeType": "EnumValue",
											"src": "12329:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "12195:8:0",
									"nodeType": "EnumDefinition",
									"src": "12190:169:0"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "12539:140:0",
										"statements": [
											{
												"id": 558,
												"nodeType": "UncheckedBlock",
												"src": "12549:124:0",
												"statements": [
													{
														"assignments": [
															541
														],
														"declarations": [
															{
																"constant": false,
																"id": 541,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "12581:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 558,
																"src": "12573:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12573:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 545,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 542,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "12585:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 543,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "12589:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12585:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12573:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "12608:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "12612:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12608:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 553,
														"nodeType": "IfStatement",
														"src": "12604:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12623:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12630:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 551,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 539,
															"id": 552,
															"nodeType": "Return",
															"src": "12615:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12654:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 555,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 541,
																	"src": "12660:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 556,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12653:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 539,
														"id": 557,
														"nodeType": "Return",
														"src": "12646:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "12365:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "12472:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12498:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12490:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12478:22:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12524:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12524:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "12530:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12530:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12523:15:0"
									},
									"scope": 1571,
									"src": "12463:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "12862:113:0",
										"statements": [
											{
												"id": 586,
												"nodeType": "UncheckedBlock",
												"src": "12872:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 565,
																"src": "12900:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 573,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "12904:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 579,
														"nodeType": "IfStatement",
														"src": "12896:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12915:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12922:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 577,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12914:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 571,
															"id": 578,
															"nodeType": "Return",
															"src": "12907:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12946:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 581,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "12952:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 582,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 565,
																		"src": "12956:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12952:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 584,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12945:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 571,
														"id": 585,
														"nodeType": "Return",
														"src": "12938:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "12685:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "12795:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12810:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12802:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12801:22:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12847:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12847:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "12853:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12846:15:0"
									},
									"scope": 1571,
									"src": "12786:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "13161:417:0",
										"statements": [
											{
												"id": 628,
												"nodeType": "UncheckedBlock",
												"src": "13171:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13429:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13434:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13429:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 607,
														"nodeType": "IfStatement",
														"src": "13425:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13445:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13451:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 605,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13444:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 599,
															"id": 606,
															"nodeType": "Return",
															"src": "13437:16:0"
														}
													},
													{
														"assignments": [
															609
														],
														"declarations": [
															{
																"constant": false,
																"id": 609,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "13475:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 628,
																"src": "13467:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 608,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13467:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 613,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 610,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "13479:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 611,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13483:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13479:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13467:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 614,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "13502:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 615,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "13506:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13502:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 617,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13502:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 623,
														"nodeType": "IfStatement",
														"src": "13498:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13522:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13529:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 621,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13521:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 599,
															"id": 622,
															"nodeType": "Return",
															"src": "13514:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13553:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 625,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "13559:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 626,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13552:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 599,
														"id": 627,
														"nodeType": "Return",
														"src": "13545:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "12981:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "13094:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13109:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13101:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13120:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13112:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13100:22:0"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13146:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 595,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13146:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "13152:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13145:15:0"
									},
									"scope": 1571,
									"src": "13085:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "13765:114:0",
										"statements": [
											{
												"id": 656,
												"nodeType": "UncheckedBlock",
												"src": "13775:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 642,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "13803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13808:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13803:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 649,
														"nodeType": "IfStatement",
														"src": "13799:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13819:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13826:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 647,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13818:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 641,
															"id": 648,
															"nodeType": "Return",
															"src": "13811:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13850:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 651,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 633,
																		"src": "13856:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 652,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "13860:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13856:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 654,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "13849:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 641,
														"id": 655,
														"nodeType": "Return",
														"src": "13842:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "13584:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "13698:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13713:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13705:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13724:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13716:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13704:22:0"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13750:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13750:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "13756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13749:15:0"
									},
									"scope": 1571,
									"src": "13689:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "14076:114:0",
										"statements": [
											{
												"id": 684,
												"nodeType": "UncheckedBlock",
												"src": "14086:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 663,
																"src": "14114:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14119:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14114:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 677,
														"nodeType": "IfStatement",
														"src": "14110:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14130:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14137:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 675,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14129:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 669,
															"id": 676,
															"nodeType": "Return",
															"src": "14122:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14161:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 679,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "14167:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 680,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "14171:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14167:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 682,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14160:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 669,
														"id": 683,
														"nodeType": "Return",
														"src": "14153:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "13885:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "14009:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14024:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14016:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14035:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14027:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14015:22:0"
									},
									"returnParameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14061:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 665,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14061:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "14067:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14060:15:0"
									},
									"scope": 1571,
									"src": "14000:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "14327:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 696,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "14344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 697,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "14348:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14344:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "14356:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14344:13:0",
													"trueExpression": {
														"id": 699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "14352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 695,
												"id": 702,
												"nodeType": "Return",
												"src": "14337:20:0"
											}
										]
									},
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "14196:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "14269:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14281:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14273:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14292:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14284:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14284:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14272:22:0"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "14318:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14317:9:0"
									},
									"scope": 1571,
									"src": "14260:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "14502:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "14519:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "14523:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14519:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "14531:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "14519:13:0",
													"trueExpression": {
														"id": 717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "14527:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 713,
												"id": 720,
												"nodeType": "Return",
												"src": "14512:20:0"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "14370:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "14444:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14456:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14448:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14467:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14459:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14447:22:0"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "14493:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14492:9:0"
									},
									"scope": 1571,
									"src": "14435:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "14723:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 732,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "14778:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 733,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "14782:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14778:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 735,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "14777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 736,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "14788:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 737,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "14792:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14788:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 739,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14797:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "14787:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14777:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 731,
												"id": 743,
												"nodeType": "Return",
												"src": "14770:28:0"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "14545:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "14661:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "14677:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14669:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "14688:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14680:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14668:22:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "14714:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14713:9:0"
									},
									"scope": 1571,
									"src": "14652:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "15097:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 755,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "15111:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15116:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15111:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "15107:127:0",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "15119:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 758,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 748,
																	"src": "15218:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 759,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 750,
																	"src": "15222:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15218:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 754,
															"id": 761,
															"nodeType": "Return",
															"src": "15211:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 764,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "15322:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15327:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "15322:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "15336:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15340:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "15336:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 771,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15335:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 772,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 750,
																"src": "15345:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15349:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "15335:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "15322:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15331:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 777,
												"nodeType": "Return",
												"src": "15315:35:0"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "14811:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "15035:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15051:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15043:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15054:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15042:22:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "15088:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15087:9:0"
									},
									"scope": 1571,
									"src": "15026:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "15779:4018:0",
										"statements": [
											{
												"id": 903,
												"nodeType": "UncheckedBlock",
												"src": "15789:4002:0",
												"statements": [
													{
														"assignments": [
															792
														],
														"declarations": [
															{
																"constant": false,
																"id": 792,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "16118:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "16110:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 791,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16110:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 796,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 793,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "16126:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 794,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "16130:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16126:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16110:21:0"
													},
													{
														"assignments": [
															798
														],
														"declarations": [
															{
																"constant": false,
																"id": 798,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "16198:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "16190:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 797,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16190:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 799,
														"nodeType": "VariableDeclarationStatement",
														"src": "16190:13:0"
													},
													{
														"AST": {
															"nativeSrc": "16270:122:0",
															"nodeType": "YulBlock",
															"src": "16270:122:0",
															"statements": [
																{
																	"nativeSrc": "16288:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16288:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "16305:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "16305:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "16308:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "16308:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16315:1:0",
																						"nodeType": "YulLiteral",
																						"src": "16315:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "16311:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "16311:3:0"
																				},
																				"nativeSrc": "16311:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16311:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "16298:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "16298:6:0"
																		},
																		"nativeSrc": "16298:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16298:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "16292:2:0",
																			"nodeType": "YulTypedName",
																			"src": "16292:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16335:43:0",
																	"nodeType": "YulAssignment",
																	"src": "16335:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "16352:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "16352:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "16356:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "16356:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "16348:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "16348:3:0"
																				},
																				"nativeSrc": "16348:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16348:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "16367:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "16367:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "16371:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "16371:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "16364:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "16364:2:0"
																				},
																				"nativeSrc": "16364:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "16364:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16344:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "16344:3:0"
																		},
																		"nativeSrc": "16344:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "16344:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "16335:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "16335:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "16356:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "16371:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "16335:5:0",
																"valueSize": 1
															},
															{
																"declaration": 782,
																"isOffset": false,
																"isSlot": false,
																"src": "16305:1:0",
																"valueSize": 1
															},
															{
																"declaration": 784,
																"isOffset": false,
																"isSlot": false,
																"src": "16308:1:0",
																"valueSize": 1
															}
														],
														"id": 800,
														"nodeType": "InlineAssembly",
														"src": "16261:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "16473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16482:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16473:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 809,
														"nodeType": "IfStatement",
														"src": "16469:368:0",
														"trueBody": {
															"id": 808,
															"nodeType": "Block",
															"src": "16485:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 804,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 792,
																			"src": "16803:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 805,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "16811:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16803:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 790,
																	"id": 807,
																	"nodeType": "Return",
																	"src": "16796:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "16943:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 811,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "16958:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16943:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 817,
														"nodeType": "IfStatement",
														"src": "16939:88:0",
														"trueBody": {
															"id": 816,
															"nodeType": "Block",
															"src": "16965:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 813,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "16990:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16990:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 815,
																	"nodeType": "RevertStatement",
																	"src": "16983:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															819
														],
														"declarations": [
															{
																"constant": false,
																"id": 819,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "17290:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "17282:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17282:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 820,
														"nodeType": "VariableDeclarationStatement",
														"src": "17282:17:0"
													},
													{
														"AST": {
															"nativeSrc": "17322:291:0",
															"nodeType": "YulBlock",
															"src": "17322:291:0",
															"statements": [
																{
																	"nativeSrc": "17391:38:0",
																	"nodeType": "YulAssignment",
																	"src": "17391:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "17411:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "17411:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "17414:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "17414:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "17417:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "17417:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "17404:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "17404:6:0"
																		},
																		"nativeSrc": "17404:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17404:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "17391:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "17391:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "17511:41:0",
																	"nodeType": "YulAssignment",
																	"src": "17511:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "17524:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "17524:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "17534:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "17534:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "17545:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "17545:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "17531:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "17531:2:0"
																				},
																				"nativeSrc": "17531:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "17531:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17520:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17520:3:0"
																		},
																		"nativeSrc": "17520:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17520:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "17511:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "17511:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "17569:30:0",
																	"nodeType": "YulAssignment",
																	"src": "17569:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "17582:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "17582:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "17589:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "17589:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17578:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17578:3:0"
																		},
																		"nativeSrc": "17578:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17578:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "17569:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "17569:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17417:11:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17545:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17569:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "17582:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "17511:5:0",
																"valueSize": 1
															},
															{
																"declaration": 798,
																"isOffset": false,
																"isSlot": false,
																"src": "17524:5:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17391:9:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17534:9:0",
																"valueSize": 1
															},
															{
																"declaration": 819,
																"isOffset": false,
																"isSlot": false,
																"src": "17589:9:0",
																"valueSize": 1
															},
															{
																"declaration": 782,
																"isOffset": false,
																"isSlot": false,
																"src": "17411:1:0",
																"valueSize": 1
															},
															{
																"declaration": 784,
																"isOffset": false,
																"isSlot": false,
																"src": "17414:1:0",
																"valueSize": 1
															}
														],
														"id": 821,
														"nodeType": "InlineAssembly",
														"src": "17313:300:0"
													},
													{
														"assignments": [
															823
														],
														"declarations": [
															{
																"constant": false,
																"id": 823,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "17825:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "17817:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 822,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17817:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 830,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "17832:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17847:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 826,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "17851:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17847:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 828,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17846:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17832:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17817:46:0"
													},
													{
														"AST": {
															"nativeSrc": "17886:362:0",
															"nodeType": "YulBlock",
															"src": "17886:362:0",
															"statements": [
																{
																	"nativeSrc": "17951:37:0",
																	"nodeType": "YulAssignment",
																	"src": "17951:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "17970:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "17970:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "17983:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "17983:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "17966:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "17966:3:0"
																		},
																		"nativeSrc": "17966:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "17966:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "17951:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "17951:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "18055:25:0",
																	"nodeType": "YulAssignment",
																	"src": "18055:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "18068:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "18068:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "18075:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "18075:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "18064:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18064:3:0"
																		},
																		"nativeSrc": "18064:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18064:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "18055:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "18055:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "18195:39:0",
																	"nodeType": "YulAssignment",
																	"src": "18195:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "18215:1:0",
																								"nodeType": "YulLiteral",
																								"src": "18215:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "18218:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "18218:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "18211:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "18211:3:0"
																						},
																						"nativeSrc": "18211:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "18211:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "18225:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "18225:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "18207:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "18207:3:0"
																				},
																				"nativeSrc": "18207:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "18207:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18232:1:0",
																				"nodeType": "YulLiteral",
																				"src": "18232:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18203:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "18203:3:0"
																		},
																		"nativeSrc": "18203:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "18203:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "18195:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "18195:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17951:11:0",
																"valueSize": 1
															},
															{
																"declaration": 786,
																"isOffset": false,
																"isSlot": false,
																"src": "17970:11:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "18055:5:0",
																"valueSize": 1
															},
															{
																"declaration": 792,
																"isOffset": false,
																"isSlot": false,
																"src": "18068:5:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "17983:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18075:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18195:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18218:4:0",
																"valueSize": 1
															},
															{
																"declaration": 823,
																"isOffset": false,
																"isSlot": false,
																"src": "18225:4:0",
																"valueSize": 1
															}
														],
														"id": 831,
														"nodeType": "InlineAssembly",
														"src": "17877:371:0"
													},
													{
														"expression": {
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 832,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "18314:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 833,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "18323:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 834,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "18331:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18323:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18314:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 837,
														"nodeType": "ExpressionStatement",
														"src": "18314:21:0"
													},
													{
														"assignments": [
															839
														],
														"declarations": [
															{
																"constant": false,
																"id": 839,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "18661:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 903,
																"src": "18653:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 838,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18653:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 846,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18672:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 841,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "18676:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "18672:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18671:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18691:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "18671:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18653:39:0"
													},
													{
														"expression": {
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 847,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "18909:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18920:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 849,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "18924:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 850,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "18938:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18924:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18920:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18909:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 854,
														"nodeType": "ExpressionStatement",
														"src": "18909:36:0"
													},
													{
														"expression": {
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 855,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "18978:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18989:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 857,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "18993:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 858,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "18993:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18989:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "18978:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 862,
														"nodeType": "ExpressionStatement",
														"src": "18978:36:0"
													},
													{
														"expression": {
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 863,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19048:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19059:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 865,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19063:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 866,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19077:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19063:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19059:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19048:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 870,
														"nodeType": "ExpressionStatement",
														"src": "19048:36:0"
													},
													{
														"expression": {
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 871,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19118:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19129:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 873,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19133:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 874,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19147:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19133:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19129:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19118:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 878,
														"nodeType": "ExpressionStatement",
														"src": "19118:36:0"
													},
													{
														"expression": {
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 879,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19188:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19199:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 881,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19203:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 882,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19217:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19203:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19199:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19188:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 886,
														"nodeType": "ExpressionStatement",
														"src": "19188:36:0"
													},
													{
														"expression": {
															"id": 893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 887,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "19259:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19270:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 889,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "19274:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 890,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 839,
																		"src": "19288:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19274:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19270:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19259:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 894,
														"nodeType": "ExpressionStatement",
														"src": "19259:36:0"
													},
													{
														"expression": {
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 895,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "19729:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 896,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "19738:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 897,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "19746:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19738:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19729:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 900,
														"nodeType": "ExpressionStatement",
														"src": "19729:24:0"
													},
													{
														"expression": {
															"id": 901,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "19774:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 790,
														"id": 902,
														"nodeType": "Return",
														"src": "19767:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "15363:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "15690:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "15705:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15697:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "15716:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15708:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "15727:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15719:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15696:43:0"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "15771:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "15763:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15763:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15762:16:0"
									},
									"scope": 1571,
									"src": "15681:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "20039:192:0",
										"statements": [
											{
												"assignments": [
													921
												],
												"declarations": [
													{
														"constant": false,
														"id": 921,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20057:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 947,
														"src": "20049:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"arguments": [
														{
															"id": 923,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "20073:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 924,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "20076:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 925,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "20079:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															905,
															948
														],
														"referencedDeclaration": 905,
														"src": "20066:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20066:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20049:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 929,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "20122:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$528",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$528",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 928,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "20105:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20105:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 932,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "20142:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 933,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "20145:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 934,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "20148:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 931,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "20135:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20135:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20163:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20135:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20105:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "20101:101:0",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "20166:36:0",
													"statements": [
														{
															"expression": {
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 939,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "20180:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20190:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20180:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 942,
															"nodeType": "ExpressionStatement",
															"src": "20180:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 945,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 921,
													"src": "20218:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 919,
												"id": 946,
												"nodeType": "Return",
												"src": "20211:13:0"
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "19803:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "19938:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "19953:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19945:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "19964:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19956:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "19975:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19967:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19997:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "19988:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 914,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 913,
														"name": "Rounding",
														"nameLocations": [
															"19988:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "19988:8:0"
													},
													"referencedDeclaration": 528,
													"src": "19988:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19944:62:0"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "20030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20029:9:0"
									},
									"scope": 1571,
									"src": "19929:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "20522:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 956,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "20536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20541:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "20532:45:0",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "20544:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20565:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 955,
															"id": 960,
															"nodeType": "Return",
															"src": "20558:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21264:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1059,
														"src": "21256:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21256:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 973,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21273:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 967,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 951,
																			"src": "21284:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 966,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1227,
																			1262
																		],
																		"referencedDeclaration": 1227,
																		"src": "21279:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21279:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21290:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21279:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 971,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "21278:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21273:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21256:36:0"
											},
											{
												"id": 1058,
												"nodeType": "UncheckedBlock",
												"src": "21693:408:0",
												"statements": [
													{
														"expression": {
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 974,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21717:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 979,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 975,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21727:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 976,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21736:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 977,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21740:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21736:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21727:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 980,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21726:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21751:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21726:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21717:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 984,
														"nodeType": "ExpressionStatement",
														"src": "21717:35:0"
													},
													{
														"expression": {
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 985,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21766:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 986,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21776:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 987,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21785:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 988,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21789:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21785:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21776:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 991,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21775:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21800:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21775:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21766:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 995,
														"nodeType": "ExpressionStatement",
														"src": "21766:35:0"
													},
													{
														"expression": {
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 996,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21815:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 997,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21825:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1000,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 998,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21834:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 999,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21838:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21834:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21825:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1002,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21824:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21849:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21824:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21815:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1006,
														"nodeType": "ExpressionStatement",
														"src": "21815:35:0"
													},
													{
														"expression": {
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21864:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1008,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21874:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1009,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21883:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1010,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21887:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21883:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21874:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1013,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21873:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21898:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21873:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21864:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1017,
														"nodeType": "ExpressionStatement",
														"src": "21864:35:0"
													},
													{
														"expression": {
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1018,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21913:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1019,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21923:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1020,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21932:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1021,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21936:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21932:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21923:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1024,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21922:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21947:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21922:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21913:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1028,
														"nodeType": "ExpressionStatement",
														"src": "21913:35:0"
													},
													{
														"expression": {
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1029,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "21962:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1030,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "21972:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1031,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "21981:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1032,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "21985:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21981:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "21972:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "21971:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21996:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "21971:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21962:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1039,
														"nodeType": "ExpressionStatement",
														"src": "21962:35:0"
													},
													{
														"expression": {
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1040,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "22011:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1041,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 964,
																				"src": "22021:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1042,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "22030:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1043,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 964,
																					"src": "22034:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22030:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22021:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1046,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22020:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22045:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22020:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22011:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1050,
														"nodeType": "ExpressionStatement",
														"src": "22011:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1052,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "22071:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1053,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "22079:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1054,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "22083:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "22079:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1051,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "22067:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22067:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 955,
														"id": 1057,
														"nodeType": "Return",
														"src": "22060:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "20237:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20474:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "20479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20478:11:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "20513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20512:9:0"
									},
									"scope": 1571,
									"src": "20465:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "22283:164:0",
										"statements": [
											{
												"id": 1093,
												"nodeType": "UncheckedBlock",
												"src": "22293:148:0",
												"statements": [
													{
														"assignments": [
															1072
														],
														"declarations": [
															{
																"constant": false,
																"id": 1072,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22325:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1093,
																"src": "22317:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1071,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22317:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1076,
														"initialValue": {
															"arguments": [
																{
																	"id": 1074,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "22339:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1073,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1060,
																	1095
																],
																"referencedDeclaration": 1060,
																"src": "22334:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22334:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22317:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1077,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "22362:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1079,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1066,
																						"src": "22389:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1078,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "22372:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1080,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22372:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1083,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1081,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1072,
																						"src": "22402:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1082,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1072,
																						"src": "22411:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22402:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1084,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1063,
																					"src": "22420:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22402:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22372:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22428:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22372:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22424:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22371:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22362:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1070,
														"id": 1092,
														"nodeType": "Return",
														"src": "22355:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "22113:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "22216:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "22229:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22221:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22241:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22232:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1065,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1064,
														"name": "Rounding",
														"nameLocations": [
															"22232:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "22232:8:0"
													},
													"referencedDeclaration": 528,
													"src": "22232:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22220:30:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "22274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22273:9:0"
									},
									"scope": 1571,
									"src": "22207:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "22638:922:0",
										"statements": [
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "22656:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1226,
														"src": "22648:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22648:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"hexValue": "30",
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22665:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22648:18:0"
											},
											{
												"id": 1223,
												"nodeType": "UncheckedBlock",
												"src": "22676:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1107,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22713:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "22704:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22719:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22704:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1121,
														"nodeType": "IfStatement",
														"src": "22700:99:0",
														"trueBody": {
															"id": 1120,
															"nodeType": "Block",
															"src": "22722:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1112,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22740:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22750:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "22740:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1115,
																	"nodeType": "ExpressionStatement",
																	"src": "22740:13:0"
																},
																{
																	"expression": {
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1116,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22771:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1117,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22781:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "22771:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1119,
																	"nodeType": "ExpressionStatement",
																	"src": "22771:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1122,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22816:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1123,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22825:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "22816:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22830:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22816:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1136,
														"nodeType": "IfStatement",
														"src": "22812:96:0",
														"trueBody": {
															"id": 1135,
															"nodeType": "Block",
															"src": "22833:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1127,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22851:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22861:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22851:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1130,
																	"nodeType": "ExpressionStatement",
																	"src": "22851:12:0"
																},
																{
																	"expression": {
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1131,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22881:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22891:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "22881:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1134,
																	"nodeType": "ExpressionStatement",
																	"src": "22881:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1137,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "22925:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22934:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "22925:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22939:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "22925:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1151,
														"nodeType": "IfStatement",
														"src": "22921:96:0",
														"trueBody": {
															"id": 1150,
															"nodeType": "Block",
															"src": "22942:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1144,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1142,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "22960:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22970:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22960:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1145,
																	"nodeType": "ExpressionStatement",
																	"src": "22960:12:0"
																},
																{
																	"expression": {
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1146,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "22990:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23000:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22990:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1149,
																	"nodeType": "ExpressionStatement",
																	"src": "22990:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1152,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23034:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23043:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "23034:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23048:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23034:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1166,
														"nodeType": "IfStatement",
														"src": "23030:96:0",
														"trueBody": {
															"id": 1165,
															"nodeType": "Block",
															"src": "23051:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1157,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23069:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23079:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23069:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1160,
																	"nodeType": "ExpressionStatement",
																	"src": "23069:12:0"
																},
																{
																	"expression": {
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1161,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23099:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23109:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23099:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1164,
																	"nodeType": "ExpressionStatement",
																	"src": "23099:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23143:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23152:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23143:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23156:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23143:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1181,
														"nodeType": "IfStatement",
														"src": "23139:93:0",
														"trueBody": {
															"id": 1180,
															"nodeType": "Block",
															"src": "23159:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1172,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23177:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23187:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23177:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1175,
																	"nodeType": "ExpressionStatement",
																	"src": "23177:11:0"
																},
																{
																	"expression": {
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1176,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23206:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23216:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23206:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1179,
																	"nodeType": "ExpressionStatement",
																	"src": "23206:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1182,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23249:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23258:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "23249:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23262:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23249:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1196,
														"nodeType": "IfStatement",
														"src": "23245:93:0",
														"trueBody": {
															"id": 1195,
															"nodeType": "Block",
															"src": "23265:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1187,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23283:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23293:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23283:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1190,
																	"nodeType": "ExpressionStatement",
																	"src": "23283:11:0"
																},
																{
																	"expression": {
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1191,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23312:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23322:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23312:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1194,
																	"nodeType": "ExpressionStatement",
																	"src": "23312:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1197,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23355:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23364:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "23355:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23355:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1211,
														"nodeType": "IfStatement",
														"src": "23351:93:0",
														"trueBody": {
															"id": 1210,
															"nodeType": "Block",
															"src": "23371:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1202,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1098,
																			"src": "23389:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23399:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23389:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"nodeType": "ExpressionStatement",
																	"src": "23389:11:0"
																},
																{
																	"expression": {
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1206,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23418:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23428:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23418:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1209,
																	"nodeType": "ExpressionStatement",
																	"src": "23418:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1212,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "23461:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23470:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "23461:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23474:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23461:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1222,
														"nodeType": "IfStatement",
														"src": "23457:64:0",
														"trueBody": {
															"id": 1221,
															"nodeType": "Block",
															"src": "23477:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1104,
																			"src": "23495:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23505:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23495:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1220,
																	"nodeType": "ExpressionStatement",
																	"src": "23495:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1224,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1104,
													"src": "23547:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1225,
												"nodeType": "Return",
												"src": "23540:13:0"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "22453:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "22586:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22599:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "22591:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22590:15:0"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "22629:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22628:9:0"
									},
									"scope": 1571,
									"src": "22577:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1261,
										"nodeType": "Block",
										"src": "23793:168:0",
										"statements": [
											{
												"id": 1260,
												"nodeType": "UncheckedBlock",
												"src": "23803:152:0",
												"statements": [
													{
														"assignments": [
															1239
														],
														"declarations": [
															{
																"constant": false,
																"id": 1239,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "23835:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1260,
																"src": "23827:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1238,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23827:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1243,
														"initialValue": {
															"arguments": [
																{
																	"id": 1241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "23849:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1240,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1227,
																	1262
																],
																"referencedDeclaration": 1227,
																"src": "23844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23844:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23827:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1244,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "23876:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1246,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1233,
																						"src": "23903:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1245,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "23886:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23886:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1250,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1248,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "23916:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1249,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1239,
																						"src": "23921:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "23916:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1251,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1230,
																					"src": "23930:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "23916:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "23886:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23942:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "23886:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23938:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1257,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23885:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "23876:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1237,
														"id": 1259,
														"nodeType": "Return",
														"src": "23869:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "23566:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "23722:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23735:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23727:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23751:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23742:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1231,
														"name": "Rounding",
														"nameLocations": [
															"23742:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "23742:8:0"
													},
													"referencedDeclaration": 528,
													"src": "23742:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23726:34:0"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "23784:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23784:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23783:9:0"
									},
									"scope": 1571,
									"src": "23713:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "24154:854:0",
										"statements": [
											{
												"assignments": [
													1271
												],
												"declarations": [
													{
														"constant": false,
														"id": 1271,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "24172:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1390,
														"src": "24164:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1270,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"hexValue": "30",
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24181:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24164:18:0"
											},
											{
												"id": 1387,
												"nodeType": "UncheckedBlock",
												"src": "24192:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1274,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24220:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24229:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24235:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "24229:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "24220:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1290,
														"nodeType": "IfStatement",
														"src": "24216:103:0",
														"trueBody": {
															"id": 1289,
															"nodeType": "Block",
															"src": "24239:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24257:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24266:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24272:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "24266:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "24257:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1284,
																	"nodeType": "ExpressionStatement",
																	"src": "24257:17:0"
																},
																{
																	"expression": {
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1285,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24292:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24302:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "24292:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1288,
																	"nodeType": "ExpressionStatement",
																	"src": "24292:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24336:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24345:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24351:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "24345:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "24336:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1307,
														"nodeType": "IfStatement",
														"src": "24332:103:0",
														"trueBody": {
															"id": 1306,
															"nodeType": "Block",
															"src": "24355:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24373:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24382:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24388:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "24382:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "24373:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "24373:17:0"
																},
																{
																	"expression": {
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1302,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24408:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24418:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "24408:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1305,
																	"nodeType": "ExpressionStatement",
																	"src": "24408:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24452:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24461:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24467:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "24461:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "24452:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"nodeType": "IfStatement",
														"src": "24448:103:0",
														"trueBody": {
															"id": 1323,
															"nodeType": "Block",
															"src": "24471:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24489:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24498:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24504:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "24498:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "24489:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1318,
																	"nodeType": "ExpressionStatement",
																	"src": "24489:17:0"
																},
																{
																	"expression": {
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1319,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24524:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24534:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "24524:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "24524:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24568:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24577:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24583:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "24577:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "24568:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1341,
														"nodeType": "IfStatement",
														"src": "24564:100:0",
														"trueBody": {
															"id": 1340,
															"nodeType": "Block",
															"src": "24586:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1330,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24604:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1331,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24613:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1332,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24619:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "24613:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "24604:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "24604:16:0"
																},
																{
																	"expression": {
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1336,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24638:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24648:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "24638:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1339,
																	"nodeType": "ExpressionStatement",
																	"src": "24638:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1342,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24681:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24690:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24696:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "24690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "24681:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1358,
														"nodeType": "IfStatement",
														"src": "24677:100:0",
														"trueBody": {
															"id": 1357,
															"nodeType": "Block",
															"src": "24699:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1347,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24717:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24726:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24732:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "24726:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "24717:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1352,
																	"nodeType": "ExpressionStatement",
																	"src": "24717:16:0"
																},
																{
																	"expression": {
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1353,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24751:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24761:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "24751:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"nodeType": "ExpressionStatement",
																	"src": "24751:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1359,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24794:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24803:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24809:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "24803:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "24794:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1375,
														"nodeType": "IfStatement",
														"src": "24790:100:0",
														"trueBody": {
															"id": 1374,
															"nodeType": "Block",
															"src": "24812:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1364,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "24830:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1365,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24839:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1366,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24845:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "24839:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "24830:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1369,
																	"nodeType": "ExpressionStatement",
																	"src": "24830:16:0"
																},
																{
																	"expression": {
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1370,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24864:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24874:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "24864:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1373,
																	"nodeType": "ExpressionStatement",
																	"src": "24864:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1376,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "24907:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24916:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24916:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "24907:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1386,
														"nodeType": "IfStatement",
														"src": "24903:66:0",
														"trueBody": {
															"id": 1385,
															"nodeType": "Block",
															"src": "24925:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1381,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1271,
																			"src": "24943:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1382,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24953:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24943:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1384,
																	"nodeType": "ExpressionStatement",
																	"src": "24943:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1388,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1271,
													"src": "24995:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1389,
												"nodeType": "Return",
												"src": "24988:13:0"
											}
										]
									},
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "23967:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "24101:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24115:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "24107:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24106:15:0"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "24145:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24144:9:0"
									},
									"scope": 1571,
									"src": "24092:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "25243:170:0",
										"statements": [
											{
												"id": 1424,
												"nodeType": "UncheckedBlock",
												"src": "25253:154:0",
												"statements": [
													{
														"assignments": [
															1403
														],
														"declarations": [
															{
																"constant": false,
																"id": 1403,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25285:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1424,
																"src": "25277:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1402,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25277:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1407,
														"initialValue": {
															"arguments": [
																{
																	"id": 1405,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "25300:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1404,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1391,
																	1426
																],
																"referencedDeclaration": 1391,
																"src": "25294:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25294:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25277:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1408,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "25327:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1410,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1397,
																						"src": "25354:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1409,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "25337:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1411,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "25337:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1414,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1412,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "25367:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1413,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1403,
																						"src": "25373:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "25367:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1415,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1394,
																					"src": "25382:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25367:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "25337:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25394:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "25337:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1418,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25390:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25336:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "25327:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1401,
														"id": 1423,
														"nodeType": "Return",
														"src": "25320:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "25014:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "25171:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25185:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25177:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25177:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25201:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25192:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1395,
														"name": "Rounding",
														"nameLocations": [
															"25192:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "25192:8:0"
													},
													"referencedDeclaration": 528,
													"src": "25192:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25176:34:0"
									},
									"returnParameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "25234:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25233:9:0"
									},
									"scope": 1571,
									"src": "25162:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "25733:600:0",
										"statements": [
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "25751:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1512,
														"src": "25743:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "25743:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1437,
												"initialValue": {
													"hexValue": "30",
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25760:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25743:18:0"
											},
											{
												"id": 1509,
												"nodeType": "UncheckedBlock",
												"src": "25771:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1438,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "25799:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25808:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "25799:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25814:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25799:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1452,
														"nodeType": "IfStatement",
														"src": "25795:98:0",
														"trueBody": {
															"id": 1451,
															"nodeType": "Block",
															"src": "25817:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1443,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "25835:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25845:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "25835:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1446,
																	"nodeType": "ExpressionStatement",
																	"src": "25835:13:0"
																},
																{
																	"expression": {
																		"id": 1449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1447,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "25866:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25876:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "25866:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1450,
																	"nodeType": "ExpressionStatement",
																	"src": "25866:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1453,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "25910:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25919:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "25910:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25924:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25910:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1467,
														"nodeType": "IfStatement",
														"src": "25906:95:0",
														"trueBody": {
															"id": 1466,
															"nodeType": "Block",
															"src": "25927:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1458,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "25945:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1459,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25955:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "25945:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1461,
																	"nodeType": "ExpressionStatement",
																	"src": "25945:12:0"
																},
																{
																	"expression": {
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1462,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "25975:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25985:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "25975:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1465,
																	"nodeType": "ExpressionStatement",
																	"src": "25975:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1468,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "26018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26027:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "26018:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26032:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26018:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1482,
														"nodeType": "IfStatement",
														"src": "26014:95:0",
														"trueBody": {
															"id": 1481,
															"nodeType": "Block",
															"src": "26035:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1473,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "26053:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26063:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "26053:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1476,
																	"nodeType": "ExpressionStatement",
																	"src": "26053:12:0"
																},
																{
																	"expression": {
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1477,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26083:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26093:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "26083:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1480,
																	"nodeType": "ExpressionStatement",
																	"src": "26083:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "26126:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26135:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "26126:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26140:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26126:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1497,
														"nodeType": "IfStatement",
														"src": "26122:95:0",
														"trueBody": {
															"id": 1496,
															"nodeType": "Block",
															"src": "26143:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1488,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "26161:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26171:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "26161:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1491,
																	"nodeType": "ExpressionStatement",
																	"src": "26161:12:0"
																},
																{
																	"expression": {
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1492,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26191:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26201:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "26191:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1495,
																	"nodeType": "ExpressionStatement",
																	"src": "26191:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "26234:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26243:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "26234:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26247:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "26234:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1508,
														"nodeType": "IfStatement",
														"src": "26230:64:0",
														"trueBody": {
															"id": 1507,
															"nodeType": "Block",
															"src": "26250:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1503,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1435,
																			"src": "26268:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26278:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "26268:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1506,
																	"nodeType": "ExpressionStatement",
																	"src": "26268:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1510,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1435,
													"src": "26320:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1511,
												"nodeType": "Return",
												"src": "26313:13:0"
											}
										]
									},
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "25419:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "25679:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25694:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "25686:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25685:15:0"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1513,
												"src": "25724:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25723:9:0"
									},
									"scope": 1571,
									"src": "25670:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "26570:177:0",
										"statements": [
											{
												"id": 1549,
												"nodeType": "UncheckedBlock",
												"src": "26580:161:0",
												"statements": [
													{
														"assignments": [
															1525
														],
														"declarations": [
															{
																"constant": false,
																"id": 1525,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "26612:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1549,
																"src": "26604:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "26604:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1529,
														"initialValue": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "26628:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1526,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1513,
																	1551
																],
																"referencedDeclaration": 1513,
																"src": "26621:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26621:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "26604:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1530,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "26655:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1542,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1532,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1519,
																						"src": "26682:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$528",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1531,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1570,
																					"src": "26665:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$528_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "26665:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1539,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1534,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "26695:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1537,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1535,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1525,
																									"src": "26701:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1536,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "26711:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "26701:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1538,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "26700:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "26695:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1540,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1516,
																					"src": "26716:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26695:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "26665:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26728:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "26665:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26724:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1546,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "26664:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "26655:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1523,
														"id": 1548,
														"nodeType": "Return",
														"src": "26648:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1514,
										"nodeType": "StructuredDocumentation",
										"src": "26339:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "26497:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26512:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26504:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26528:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26519:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1518,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1517,
														"name": "Rounding",
														"nameLocations": [
															"26519:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "26519:8:0"
													},
													"referencedDeclaration": 528,
													"src": "26519:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26503:34:0"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "26561:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26561:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26560:9:0"
									},
									"scope": 1571,
									"src": "26488:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "26945:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1562,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "26968:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$528",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$528",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "26962:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1560,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "26962:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26962:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26980:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26962:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26985:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26962:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1568,
												"nodeType": "Return",
												"src": "26955:31:0"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "26753:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "26880:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "26906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "26897:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$528",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1554,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1553,
														"name": "Rounding",
														"nameLocations": [
															"26897:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 528,
														"src": "26897:8:0"
													},
													"referencedDeclaration": 528,
													"src": "26897:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$528",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26896:19:0"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "26939:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26939:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26938:6:0"
									},
									"scope": 1571,
									"src": "26871:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "12081:14914:0",
							"usedErrors": [
								523
							],
							"usedEvents": []
						},
						{
							"id": 1572,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27125:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1573,
								"nodeType": "StructuredDocumentation",
								"src": "27153:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1821,
							"linearizedBaseContracts": [
								1821
							],
							"name": "Strings",
							"nameLocation": "27196:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1576,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "27235:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "27210:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1574,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "27210:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1575,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27248:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1579,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "27295:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1821,
									"src": "27272:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1577,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "27272:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1578,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "27312:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1580,
										"nodeType": "StructuredDocumentation",
										"src": "27321:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1586,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "27413:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27450:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "27442:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "27465:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "27457:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27441:31:0"
									},
									"src": "27407:66:0"
								},
								{
									"body": {
										"id": 1633,
										"nodeType": "Block",
										"src": "27645:627:0",
										"statements": [
											{
												"id": 1632,
												"nodeType": "UncheckedBlock",
												"src": "27655:611:0",
												"statements": [
													{
														"assignments": [
															1595
														],
														"declarations": [
															{
																"constant": false,
																"id": 1595,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "27687:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27679:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1594,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27679:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1602,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1598,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1589,
																		"src": "27707:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1596,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1571,
																		"src": "27696:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1571_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "27701:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1391,
																	"src": "27696:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27696:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "27716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "27696:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27679:38:0"
													},
													{
														"assignments": [
															1604
														],
														"declarations": [
															{
																"constant": false,
																"id": 1604,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "27745:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27731:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1603,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "27731:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1609,
														"initialValue": {
															"arguments": [
																{
																	"id": 1607,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "27765:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "27754:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1605,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "27758:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27754:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "27731:41:0"
													},
													{
														"assignments": [
															1611
														],
														"declarations": [
															{
																"constant": false,
																"id": 1611,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "27794:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1632,
																"src": "27786:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1610,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27786:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1612,
														"nodeType": "VariableDeclarationStatement",
														"src": "27786:11:0"
													},
													{
														"AST": {
															"nativeSrc": "27867:67:0",
															"nodeType": "YulBlock",
															"src": "27867:67:0",
															"statements": [
																{
																	"nativeSrc": "27885:35:0",
																	"nodeType": "YulAssignment",
																	"src": "27885:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "27896:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "27896:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "27908:2:0",
																						"nodeType": "YulLiteral",
																						"src": "27908:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "27912:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "27912:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "27904:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "27904:3:0"
																				},
																				"nativeSrc": "27904:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "27904:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27892:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "27892:3:0"
																		},
																		"nativeSrc": "27892:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "27892:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "27885:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "27885:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1604,
																"isOffset": false,
																"isSlot": false,
																"src": "27896:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1595,
																"isOffset": false,
																"isSlot": false,
																"src": "27912:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1611,
																"isOffset": false,
																"isSlot": false,
																"src": "27885:3:0",
																"valueSize": 1
															}
														],
														"id": 1613,
														"nodeType": "InlineAssembly",
														"src": "27858:76:0"
													},
													{
														"body": {
															"id": 1628,
															"nodeType": "Block",
															"src": "27960:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "27978:5:0",
																		"subExpression": {
																			"id": 1615,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1611,
																			"src": "27978:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1617,
																	"nodeType": "ExpressionStatement",
																	"src": "27978:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "28061:86:0",
																		"nodeType": "YulBlock",
																		"src": "28061:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "28091:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "28091:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "28105:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "28105:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "28112:2:0",
																											"nodeType": "YulLiteral",
																											"src": "28112:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "28101:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "28101:3:0"
																									},
																									"nativeSrc": "28101:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "28101:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "28117:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "28117:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "28096:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "28096:4:0"
																							},
																							"nativeSrc": "28096:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "28096:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "28083:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "28083:7:0"
																					},
																					"nativeSrc": "28083:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "28083:46:0"
																				},
																				"nativeSrc": "28083:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "28083:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1576,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28117:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1611,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28091:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1589,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "28105:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1618,
																	"nodeType": "InlineAssembly",
																	"src": "28052:95:0"
																},
																{
																	"expression": {
																		"id": 1621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1619,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "28164:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28173:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "28164:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1622,
																	"nodeType": "ExpressionStatement",
																	"src": "28164:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1623,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1589,
																			"src": "28197:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "28206:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "28197:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1627,
																	"nodeType": "IfStatement",
																	"src": "28193:21:0",
																	"trueBody": {
																		"id": 1626,
																		"nodeType": "Break",
																		"src": "28209:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1629,
														"nodeType": "WhileStatement",
														"src": "27947:282:0"
													},
													{
														"expression": {
															"id": 1630,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "28249:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1593,
														"id": 1631,
														"nodeType": "Return",
														"src": "28242:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "27479:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "27583:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27600:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "27592:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27591:15:0"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "27630:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1591,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27629:15:0"
									},
									"scope": 1821,
									"src": "27574:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "28448:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1637,
																	"src": "28479:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "28487:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "28479:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28497:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "28479:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28491:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1637,
																			"src": "28525:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1652,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 518,
																			"src": "28510:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$518_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "28521:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 517,
																		"src": "28510:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28510:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1651,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "28501:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28501:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28465:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1642,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "28465:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28472:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "28465:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28465:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1641,
												"id": 1658,
												"nodeType": "Return",
												"src": "28458:75:0"
											}
										]
									},
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "28278:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "28381:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28403:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "28396:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1636,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28396:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28395:14:0"
									},
									"returnParameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "28433:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28433:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28432:15:0"
									},
									"scope": 1821,
									"src": "28372:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1679,
										"nodeType": "Block",
										"src": "28719:100:0",
										"statements": [
											{
												"id": 1678,
												"nodeType": "UncheckedBlock",
												"src": "28729:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1669,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1663,
																	"src": "28772:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1672,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1663,
																				"src": "28791:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1670,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1571,
																				"src": "28779:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1571_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "28784:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1513,
																			"src": "28779:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28779:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28800:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "28779:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1668,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1680,
																	1763,
																	1783
																],
																"referencedDeclaration": 1763,
																"src": "28760:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28760:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1667,
														"id": 1677,
														"nodeType": "Return",
														"src": "28753:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "28546:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "28654:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1663,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28674:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "28666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28665:15:0"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "28704:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1665,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28704:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28703:15:0"
									},
									"scope": 1821,
									"src": "28645:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1762,
										"nodeType": "Block",
										"src": "29032:435:0",
										"statements": [
											{
												"assignments": [
													1691
												],
												"declarations": [
													{
														"constant": false,
														"id": 1691,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "29050:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "29042:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"id": 1692,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1683,
													"src": "29063:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29042:26:0"
											},
											{
												"assignments": [
													1695
												],
												"declarations": [
													{
														"constant": false,
														"id": 1695,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "29091:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1762,
														"src": "29078:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1694,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "29078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1704,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29110:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1699,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "29114:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29110:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29123:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "29110:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "29100:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1696,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "29104:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29100:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29078:47:0"
											},
											{
												"expression": {
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1705,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29135:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1707,
														"indexExpression": {
															"hexValue": "30",
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29142:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29135:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29147:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "29135:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1710,
												"nodeType": "ExpressionStatement",
												"src": "29135:15:0"
											},
											{
												"expression": {
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1711,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29160:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1713,
														"indexExpression": {
															"hexValue": "31",
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29167:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29160:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29172:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "29160:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "29160:15:0"
											},
											{
												"body": {
													"id": 1745,
													"nodeType": "Block",
													"src": "29230:95:0",
													"statements": [
														{
															"expression": {
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1731,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "29244:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1733,
																	"indexExpression": {
																		"id": 1732,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "29251:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "29244:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1734,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1576,
																		"src": "29256:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1738,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1735,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "29267:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29280:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "29267:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "29256:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "29244:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1740,
															"nodeType": "ExpressionStatement",
															"src": "29244:40:0"
														},
														{
															"expression": {
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1741,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "29298:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29313:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29298:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1744,
															"nodeType": "ExpressionStatement",
															"src": "29298:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1725,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "29218:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29222:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "29218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1746,
												"initializationExpression": {
													"assignments": [
														1718
													],
													"declarations": [
														{
															"constant": false,
															"id": 1718,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "29198:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1746,
															"src": "29190:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1717,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "29190:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1724,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29202:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1720,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "29206:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29202:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29215:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "29202:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "29190:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "29225:3:0",
														"subExpression": {
															"id": 1728,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "29227:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1730,
													"nodeType": "ExpressionStatement",
													"src": "29225:3:0"
												},
												"nodeType": "ForStatement",
												"src": "29185:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1747,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "29338:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29352:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29338:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1756,
												"nodeType": "IfStatement",
												"src": "29334:96:0",
												"trueBody": {
													"id": 1755,
													"nodeType": "Block",
													"src": "29355:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1751,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "29405:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1752,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1685,
																		"src": "29412:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1750,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1586,
																	"src": "29376:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29376:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1754,
															"nodeType": "RevertStatement",
															"src": "29369:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1759,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "29453:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "29446:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1757,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "29446:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29446:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1689,
												"id": 1761,
												"nodeType": "Return",
												"src": "29439:21:0"
											}
										]
									},
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "28825:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "28951:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28971:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "28963:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28963:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "28986:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "28978:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28962:31:0"
									},
									"returnParameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1763,
												"src": "29017:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29017:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29016:15:0"
									},
									"scope": 1821,
									"src": "28942:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "29699:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1776,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1766,
																			"src": "29744:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29736:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1774,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "29736:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29736:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29728:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1772,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "29728:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29728:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1779,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1579,
															"src": "29752:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1771,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1680,
															1763,
															1783
														],
														"referencedDeclaration": 1763,
														"src": "29716:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29716:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1781,
												"nodeType": "Return",
												"src": "29709:58:0"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "29473:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "29635:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "29655:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "29647:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29646:14:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "29684:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29684:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29683:15:0"
									},
									"scope": 1821,
									"src": "29626:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "29929:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1795,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1786,
																		"src": "29952:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29946:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1793,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29946:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29946:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29955:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "29946:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1800,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "29971:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29965:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1798,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "29965:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29965:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29974:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "29965:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "29946:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1807,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1786,
																			"src": "30000:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "29994:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1805,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "29994:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29994:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1804,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "29984:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29984:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1813,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1788,
																			"src": "30023:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "30017:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1811,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "30017:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "30017:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1810,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "30007:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30007:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "29984:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "29946:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1792,
												"id": 1818,
												"nodeType": "Return",
												"src": "29939:87:0"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "29780:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "29860:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29880:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29866:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1785,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29866:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "29897:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29883:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1787,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29883:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29865:34:0"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "29923:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "29923:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29922:6:0"
									},
									"scope": 1821,
									"src": "29851:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "27188:2847:0",
							"usedErrors": [
								1586
							],
							"usedEvents": []
						},
						{
							"id": 1822,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30209:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MessageHashUtils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1823,
								"nodeType": "StructuredDocumentation",
								"src": "30236:330:0",
								"text": " @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."
							},
							"fullyImplemented": true,
							"id": 1892,
							"linearizedBaseContracts": [
								1892
							],
							"name": "MessageHashUtils",
							"nameLocation": "30575:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "31360:368:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "31422:300:0",
													"nodeType": "YulBlock",
													"src": "31422:300:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31443:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31443:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																		"kind": "string",
																		"nativeSrc": "31449:34:0",
																		"nodeType": "YulLiteral",
																		"src": "31449:34:0",
																		"type": "",
																		"value": "\u0019Ethereum Signed Message:\n32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31436:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31436:6:0"
																},
																"nativeSrc": "31436:48:0",
																"nodeType": "YulFunctionCall",
																"src": "31436:48:0"
															},
															"nativeSrc": "31436:48:0",
															"nodeType": "YulExpressionStatement",
															"src": "31436:48:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31545:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31545:4:0",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"name": "messageHash",
																		"nativeSrc": "31551:11:0",
																		"nodeType": "YulIdentifier",
																		"src": "31551:11:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31538:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31538:6:0"
																},
																"nativeSrc": "31538:25:0",
																"nodeType": "YulFunctionCall",
																"src": "31538:25:0"
															},
															"nativeSrc": "31538:25:0",
															"nodeType": "YulExpressionStatement",
															"src": "31538:25:0"
														},
														{
															"nativeSrc": "31617:31:0",
															"nodeType": "YulAssignment",
															"src": "31617:31:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "31637:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31637:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31643:4:0",
																		"nodeType": "YulLiteral",
																		"src": "31643:4:0",
																		"type": "",
																		"value": "0x3c"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "31627:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "31627:9:0"
																},
																"nativeSrc": "31627:21:0",
																"nodeType": "YulFunctionCall",
																"src": "31627:21:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "31617:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "31617:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1829,
														"isOffset": false,
														"isSlot": false,
														"src": "31617:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1826,
														"isOffset": false,
														"isSlot": false,
														"src": "31551:11:0",
														"valueSize": 1
													}
												],
												"id": 1831,
												"nodeType": "InlineAssembly",
												"src": "31413:309:0"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "30598:665:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."
									},
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "31277:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "messageHash",
												"nameLocation": "31308:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "31300:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31299:21:0"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "31352:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "31344:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31343:16:0"
									},
									"scope": 1892,
									"src": "31268:460:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "32280:143:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 1845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32332:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1850,
																						"name": "message",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1836,
																						"src": "32389:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1851,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "32397:6:0",
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "32389:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1848,
																					"name": "Strings",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1821,
																					"src": "32372:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Strings_$1821_$",
																						"typeString": "type(library Strings)"
																					}
																				},
																				"id": 1849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "32380:8:0",
																				"memberName": "toString",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1634,
																				"src": "32372:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																					"typeString": "function (uint256) pure returns (string memory)"
																				}
																			},
																			"id": 1852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "32372:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "32366:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1846,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "32366:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "32366:39:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"id": 1854,
																	"name": "message",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1836,
																	"src": "32407:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32319:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1842,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "32319:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32325:6:0",
																"memberName": "concat",
																"nodeType": "MemberAccess",
																"src": "32319:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32319:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1841,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "32309:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32309:107:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1840,
												"id": 1857,
												"nodeType": "Return",
												"src": "32290:126:0"
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "31734:455:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "32203:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "message",
												"nameLocation": "32239:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "32226:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32226:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32225:22:0"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "32271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32270:9:0"
									},
									"scope": 1892,
									"src": "32194:229:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "32877:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1900",
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "hexString",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32921:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	"value": "\u0019\u0000"
																},
																{
																	"id": 1873,
																	"name": "validator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "32933:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1874,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "32944:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a",
																		"typeString": "literal_string hex\"1900\""
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1870,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "32904:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "32908:12:0",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "32904:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32904:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1869,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "32894:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32894:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1877,
												"nodeType": "Return",
												"src": "32887:63:0"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "32429:332:0",
										"text": " @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."
									},
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toDataWithIntendedValidatorHash",
									"nameLocation": "32775:31:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "validator",
												"nameLocation": "32815:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32807:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "32839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32826:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32806:38:0"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "32868:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1866,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32867:9:0"
									},
									"scope": 1892,
									"src": "32766:191:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "33508:292:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "33570:224:0",
													"nodeType": "YulBlock",
													"src": "33570:224:0",
													"statements": [
														{
															"nativeSrc": "33584:22:0",
															"nodeType": "YulVariableDeclaration",
															"src": "33584:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "33601:4:0",
																		"nodeType": "YulLiteral",
																		"src": "33601:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "33595:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "33595:5:0"
																},
																"nativeSrc": "33595:11:0",
																"nodeType": "YulFunctionCall",
																"src": "33595:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "33588:3:0",
																	"nodeType": "YulTypedName",
																	"src": "33588:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "33626:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33626:3:0"
																	},
																	{
																		"hexValue": "1901",
																		"kind": "string",
																		"nativeSrc": "33631:10:0",
																		"nodeType": "YulLiteral",
																		"src": "33631:10:0",
																		"type": "",
																		"value": "\u0019\u0001"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33619:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33619:6:0"
																},
																"nativeSrc": "33619:23:0",
																"nodeType": "YulFunctionCall",
																"src": "33619:23:0"
															},
															"nativeSrc": "33619:23:0",
															"nodeType": "YulExpressionStatement",
															"src": "33619:23:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "33666:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "33666:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33671:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33671:4:0",
																				"type": "",
																				"value": "0x02"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33662:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "33662:3:0"
																		},
																		"nativeSrc": "33662:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33662:14:0"
																	},
																	{
																		"name": "domainSeparator",
																		"nativeSrc": "33678:15:0",
																		"nodeType": "YulIdentifier",
																		"src": "33678:15:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33655:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33655:6:0"
																},
																"nativeSrc": "33655:39:0",
																"nodeType": "YulFunctionCall",
																"src": "33655:39:0"
															},
															"nativeSrc": "33655:39:0",
															"nodeType": "YulExpressionStatement",
															"src": "33655:39:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "33718:3:0",
																				"nodeType": "YulIdentifier",
																				"src": "33718:3:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33723:4:0",
																				"nodeType": "YulLiteral",
																				"src": "33723:4:0",
																				"type": "",
																				"value": "0x22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33714:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "33714:3:0"
																		},
																		"nativeSrc": "33714:14:0",
																		"nodeType": "YulFunctionCall",
																		"src": "33714:14:0"
																	},
																	{
																		"name": "structHash",
																		"nativeSrc": "33730:10:0",
																		"nodeType": "YulIdentifier",
																		"src": "33730:10:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33707:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33707:6:0"
																},
																"nativeSrc": "33707:34:0",
																"nodeType": "YulFunctionCall",
																"src": "33707:34:0"
															},
															"nativeSrc": "33707:34:0",
															"nodeType": "YulExpressionStatement",
															"src": "33707:34:0"
														},
														{
															"nativeSrc": "33754:30:0",
															"nodeType": "YulAssignment",
															"src": "33754:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "33774:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "33774:3:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33779:4:0",
																		"nodeType": "YulLiteral",
																		"src": "33779:4:0",
																		"type": "",
																		"value": "0x42"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "33764:9:0",
																	"nodeType": "YulIdentifier",
																	"src": "33764:9:0"
																},
																"nativeSrc": "33764:20:0",
																"nodeType": "YulFunctionCall",
																"src": "33764:20:0"
															},
															"variableNames": [
																{
																	"name": "digest",
																	"nativeSrc": "33754:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "33754:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1887,
														"isOffset": false,
														"isSlot": false,
														"src": "33754:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1882,
														"isOffset": false,
														"isSlot": false,
														"src": "33678:15:0",
														"valueSize": 1
													},
													{
														"declaration": 1884,
														"isOffset": false,
														"isSlot": false,
														"src": "33730:10:0",
														"valueSize": 1
													}
												],
												"id": 1889,
												"nodeType": "InlineAssembly",
												"src": "33561:233:0"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "32963:431:0",
										"text": " @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "33408:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "33432:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33424:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1881,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "33457:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33449:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1883,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33423:45:0"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "digest",
												"nameLocation": "33500:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "33492:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33491:16:0"
									},
									"scope": 1892,
									"src": "33399:401:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "30567:3235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1893,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33956:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1895,
										"name": "IERC5267",
										"nameLocations": [
											"35657:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 91,
										"src": "35657:8:0"
									},
									"id": 1896,
									"nodeType": "InheritanceSpecifier",
									"src": "35657:8:0"
								}
							],
							"canonicalName": "EIP712",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1894,
								"nodeType": "StructuredDocumentation",
								"src": "33985:1643:0",
								"text": " @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"
							},
							"fullyImplemented": true,
							"id": 2111,
							"linearizedBaseContracts": [
								2111,
								91
							],
							"name": "EIP712",
							"nameLocation": "35647:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1898,
									"libraryName": {
										"id": 1897,
										"name": "ShortStrings",
										"nameLocations": [
											"35678:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 414,
										"src": "35678:12:0"
									},
									"nodeType": "UsingForDirective",
									"src": "35672:25:0"
								},
								{
									"constant": true,
									"id": 1903,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nameLocation": "35728:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "35703:140:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1899,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "35703:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
												"id": 1901,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "35758:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												},
												"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
													"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
												}
											],
											"id": 1900,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "35748:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1902,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "35748:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1905,
									"mutability": "immutable",
									"name": "_cachedDomainSeparator",
									"nameLocation": "36068:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36042:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1904,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "36042:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1907,
									"mutability": "immutable",
									"name": "_cachedChainId",
									"nameLocation": "36122:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36096:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "36096:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1909,
									"mutability": "immutable",
									"name": "_cachedThis",
									"nameLocation": "36168:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36142:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1908,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "36142:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1911,
									"mutability": "immutable",
									"name": "_hashedName",
									"nameLocation": "36212:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36186:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1910,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "36186:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1913,
									"mutability": "immutable",
									"name": "_hashedVersion",
									"nameLocation": "36255:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36229:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1912,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "36229:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1916,
									"mutability": "immutable",
									"name": "_name",
									"nameLocation": "36306:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36276:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1915,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1914,
											"name": "ShortString",
											"nameLocations": [
												"36276:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 203,
											"src": "36276:11:0"
										},
										"referencedDeclaration": 203,
										"src": "36276:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1919,
									"mutability": "immutable",
									"name": "_version",
									"nameLocation": "36347:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36317:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
										"typeString": "ShortString"
									},
									"typeName": {
										"id": 1918,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1917,
											"name": "ShortString",
											"nameLocations": [
												"36317:11:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 203,
											"src": "36317:11:0"
										},
										"referencedDeclaration": 203,
										"src": "36317:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
											"typeString": "ShortString"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1921,
									"mutability": "mutable",
									"name": "_nameFallback",
									"nameLocation": "36376:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36361:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1920,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36361:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1923,
									"mutability": "mutable",
									"name": "_versionFallback",
									"nameLocation": "36410:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 2111,
									"src": "36395:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1922,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "36395:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1980,
										"nodeType": "Block",
										"src": "37052:376:0",
										"statements": [
											{
												"expression": {
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1931,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "37062:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1934,
																"name": "_nameFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1921,
																"src": "37101:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1932,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "37070:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37075:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 355,
															"src": "37070:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37070:45:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"src": "37062:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"id": 1937,
												"nodeType": "ExpressionStatement",
												"src": "37062:53:0"
											},
											{
												"expression": {
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1938,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1919,
														"src": "37125:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1941,
																"name": "_versionFallback",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1923,
																"src": "37170:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															],
															"expression": {
																"id": 1939,
																"name": "version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "37136:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37144:25:0",
															"memberName": "toShortStringWithFallback",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 355,
															"src": "37136:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$203_$attached_to$_t_string_memory_ptr_$",
																"typeString": "function (string memory,string storage pointer) returns (ShortString)"
															}
														},
														"id": 1942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37136:51:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
															"typeString": "ShortString"
														}
													},
													"src": "37125:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
														"typeString": "ShortString"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "37125:62:0"
											},
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1945,
														"name": "_hashedName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "37197:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1949,
																		"name": "name",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1926,
																		"src": "37227:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37221:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1947,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "37221:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37221:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1946,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "37211:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37211:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37197:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "37197:36:0"
											},
											{
												"expression": {
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "_hashedVersion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1913,
														"src": "37243:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1958,
																		"name": "version",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1928,
																		"src": "37276:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "37270:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1956,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "37270:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37270:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1955,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "37260:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37260:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37243:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1962,
												"nodeType": "ExpressionStatement",
												"src": "37243:42:0"
											},
											{
												"expression": {
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1963,
														"name": "_cachedChainId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "37296:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1964,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "37313:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1965,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "37319:7:0",
														"memberName": "chainid",
														"nodeType": "MemberAccess",
														"src": "37313:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37296:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1967,
												"nodeType": "ExpressionStatement",
												"src": "37296:30:0"
											},
											{
												"expression": {
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1968,
														"name": "_cachedDomainSeparator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "37336:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1969,
															"name": "_buildDomainSeparator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2028,
															"src": "37361:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																"typeString": "function () view returns (bytes32)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37361:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "37336:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1972,
												"nodeType": "ExpressionStatement",
												"src": "37336:48:0"
											},
											{
												"expression": {
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1973,
														"name": "_cachedThis",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1909,
														"src": "37394:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1976,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "37416:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EIP712_$2111",
																	"typeString": "contract EIP712"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EIP712_$2111",
																	"typeString": "contract EIP712"
																}
															],
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37408:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1974,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "37408:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37408:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37394:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1979,
												"nodeType": "ExpressionStatement",
												"src": "37394:27:0"
											}
										]
									},
									"documentation": {
										"id": 1924,
										"nodeType": "StructuredDocumentation",
										"src": "36433:559:0",
										"text": " @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."
									},
									"id": 1981,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "37023:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "37009:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1925,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37009:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "37043:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "37029:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37008:43:0"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37052:0:0"
									},
									"scope": 2111,
									"src": "36997:431:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2006,
										"nodeType": "Block",
										"src": "37576:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1989,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "37598:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37590:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1987,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "37590:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37590:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1991,
															"name": "_cachedThis",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "37607:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "37590:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1996,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1993,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "37622:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "37628:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "37622:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1995,
															"name": "_cachedChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "37639:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "37622:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "37590:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2004,
													"nodeType": "Block",
													"src": "37715:55:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2001,
																	"name": "_buildDomainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "37736:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view returns (bytes32)"
																	}
																},
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37736:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1986,
															"id": 2003,
															"nodeType": "Return",
															"src": "37729:30:0"
														}
													]
												},
												"id": 2005,
												"nodeType": "IfStatement",
												"src": "37586:184:0",
												"trueBody": {
													"id": 2000,
													"nodeType": "Block",
													"src": "37655:54:0",
													"statements": [
														{
															"expression": {
																"id": 1998,
																"name": "_cachedDomainSeparator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "37676:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"functionReturnParameters": 1986,
															"id": 1999,
															"nodeType": "Return",
															"src": "37669:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1982,
										"nodeType": "StructuredDocumentation",
										"src": "37434:75:0",
										"text": " @dev Returns the domain separator for the current chain."
									},
									"id": 2007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_domainSeparatorV4",
									"nameLocation": "37523:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37541:2:0"
									},
									"returnParameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "37567:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37566:9:0"
									},
									"scope": 2111,
									"src": "37514:262:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "37846:115:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2015,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1903,
																	"src": "37884:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2016,
																	"name": "_hashedName",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1911,
																	"src": "37895:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2017,
																	"name": "_hashedVersion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "37908:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2018,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "37924:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "37930:7:0",
																	"memberName": "chainid",
																	"nodeType": "MemberAccess",
																	"src": "37924:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2022,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "37947:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_EIP712_$2111",
																				"typeString": "contract EIP712"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_EIP712_$2111",
																				"typeString": "contract EIP712"
																			}
																		],
																		"id": 2021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37939:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2020,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "37939:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37939:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2013,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "37873:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "37877:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "37873:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37873:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2012,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "37863:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37863:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2011,
												"id": 2026,
												"nodeType": "Return",
												"src": "37856:98:0"
											}
										]
									},
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_buildDomainSeparator",
									"nameLocation": "37791:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37812:2:0"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "37837:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2009,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37836:9:0"
									},
									"scope": 2111,
									"src": "37782:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "38672:90:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2038,
																"name": "_domainSeparatorV4",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2007,
																"src": "38722:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
																	"typeString": "function () view returns (bytes32)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38722:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2040,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "38744:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 2036,
															"name": "MessageHashUtils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "38689:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MessageHashUtils_$1892_$",
																"typeString": "type(library MessageHashUtils)"
															}
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38706:15:0",
														"memberName": "toTypedDataHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1891,
														"src": "38689:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32) pure returns (bytes32)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38689:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2035,
												"id": 2042,
												"nodeType": "Return",
												"src": "38682:73:0"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "37967:614:0",
										"text": " @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_hashTypedDataV4",
									"nameLocation": "38595:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "38620:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "38612:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2030,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38611:20:0"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "38663:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "38663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38662:9:0"
									},
									"scope": 2111,
									"src": "38586:176:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										90
									],
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "39141:229:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"hexValue": "0f",
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "hexString",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "39172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c",
																"typeString": "literal_string hex\"0f\""
															},
															"value": "\u000f"
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2064,
																"name": "_EIP712Name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2098,
																"src": "39202:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39202:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2066,
																"name": "_EIP712Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2110,
																"src": "39229:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
																	"typeString": "function () view returns (string memory)"
																}
															},
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39229:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 2068,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "39259:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "39265:7:0",
															"memberName": "chainid",
															"nodeType": "MemberAccess",
															"src": "39259:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 2072,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "39294:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_EIP712_$2111",
																		"typeString": "contract EIP712"
																	}
																],
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39286:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "39286:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39286:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39321:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39313:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2074,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "39313:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39313:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "39351:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "39337:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (uint256[] memory)"
																},
																"typeName": {
																	"baseType": {
																		"id": 2078,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "39341:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2079,
																	"nodeType": "ArrayTypeName",
																	"src": "39341:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[]"
																	}
																}
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39337:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 2083,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "39158:205:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"
													}
												},
												"functionReturnParameters": 2062,
												"id": 2084,
												"nodeType": "Return",
												"src": "39151:212:0"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "38768:40:0",
										"text": " @dev See {IERC-5267}."
									},
									"functionSelector": "84b0196e",
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "eip712Domain",
									"nameLocation": "38822:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38834:2:0"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "fields",
												"nameLocation": "38918:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38911:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes1",
													"typeString": "bytes1"
												},
												"typeName": {
													"id": 2047,
													"name": "bytes1",
													"nodeType": "ElementaryTypeName",
													"src": "38911:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "38952:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38938:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2049,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38938:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "38984:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "38970:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2051,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38970:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "chainId",
												"nameLocation": "39013:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39005:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "verifyingContract",
												"nameLocation": "39042:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39034:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39034:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "salt",
												"nameLocation": "39081:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39073:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2057,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "39073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "extensions",
												"nameLocation": "39116:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "39099:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2059,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2060,
													"nodeType": "ArrayTypeName",
													"src": "39099:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38897:239:0"
									},
									"scope": 2111,
									"src": "38813:557:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "39751:65:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2094,
															"name": "_nameFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1921,
															"src": "39795:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2092,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "39768:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39774:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 382,
														"src": "39768:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39768:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2091,
												"id": 2096,
												"nodeType": "Return",
												"src": "39761:48:0"
											}
										]
									},
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "39376:256:0",
										"text": " @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Name",
									"nameLocation": "39699:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39710:2:0"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2098,
												"src": "39736:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2089,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39736:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39735:15:0"
									},
									"scope": 2111,
									"src": "39690:126:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "40206:71:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "_versionFallback",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "40253:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														],
														"expression": {
															"id": 2104,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1919,
															"src": "40223:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_userDefinedValueType$_ShortString_$203",
																"typeString": "ShortString"
															}
														},
														"id": 2105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40232:20:0",
														"memberName": "toStringWithFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 382,
														"src": "40223:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_ShortString_$203_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$203_$",
															"typeString": "function (ShortString,string storage pointer) pure returns (string memory)"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40223:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2103,
												"id": 2108,
												"nodeType": "Return",
												"src": "40216:54:0"
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "39822:262:0",
										"text": " @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_EIP712Version",
									"nameLocation": "40151:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40165:2:0"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "40191:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2101,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40191:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40190:15:0"
									},
									"scope": 2111,
									"src": "40142:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "35629:4650:0",
							"usedErrors": [
								211,
								213
							],
							"usedEvents": [
								71
							]
						},
						{
							"id": 2112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "40431:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2113,
								"nodeType": "StructuredDocumentation",
								"src": "40457:205:0",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2458,
							"linearizedBaseContracts": [
								2458
							],
							"name": "ECDSA",
							"nameLocation": "40671:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 2118,
									"members": [
										{
											"id": 2114,
											"name": "NoError",
											"nameLocation": "40711:7:0",
											"nodeType": "EnumValue",
											"src": "40711:7:0"
										},
										{
											"id": 2115,
											"name": "InvalidSignature",
											"nameLocation": "40728:16:0",
											"nodeType": "EnumValue",
											"src": "40728:16:0"
										},
										{
											"id": 2116,
											"name": "InvalidSignatureLength",
											"nameLocation": "40754:22:0",
											"nodeType": "EnumValue",
											"src": "40754:22:0"
										},
										{
											"id": 2117,
											"name": "InvalidSignatureS",
											"nameLocation": "40786:17:0",
											"nodeType": "EnumValue",
											"src": "40786:17:0"
										}
									],
									"name": "RecoverError",
									"nameLocation": "40688:12:0",
									"nodeType": "EnumDefinition",
									"src": "40683:126:0"
								},
								{
									"documentation": {
										"id": 2119,
										"nodeType": "StructuredDocumentation",
										"src": "40815:63:0",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 2121,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "40889:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40910:2:0"
									},
									"src": "40883:30:0"
								},
								{
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "40919:60:0",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 2126,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "40990:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2124,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "41026:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2126,
												"src": "41018:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41017:16:0"
									},
									"src": "40984:50:0"
								},
								{
									"documentation": {
										"id": 2127,
										"nodeType": "StructuredDocumentation",
										"src": "41040:85:0",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 2131,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "41136:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "41167:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "41159:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "41159:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41158:11:0"
									},
									"src": "41130:40:0"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "42561:653:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2146,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "42575:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "42585:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "42575:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 2148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42595:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "42575:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2181,
													"nodeType": "Block",
													"src": "43100:108:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43130:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43122:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2168,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "43122:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43122:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2172,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "43134:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "43147:22:0",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2116,
																		"src": "43134:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 2176,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2136,
																					"src": "43179:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 2177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "43189:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "43179:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "43171:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2174,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "43171:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "43171:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43121:76:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2145,
															"id": 2180,
															"nodeType": "Return",
															"src": "43114:83:0"
														}
													]
												},
												"id": 2182,
												"nodeType": "IfStatement",
												"src": "42571:637:0",
												"trueBody": {
													"id": 2167,
													"nodeType": "Block",
													"src": "42599:495:0",
													"statements": [
														{
															"assignments": [
																2151
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2151,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "42621:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42613:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2150,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "42613:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2152,
															"nodeType": "VariableDeclarationStatement",
															"src": "42613:9:0"
														},
														{
															"assignments": [
																2154
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2154,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "42644:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42636:9:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2153,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "42636:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2155,
															"nodeType": "VariableDeclarationStatement",
															"src": "42636:9:0"
														},
														{
															"assignments": [
																2157
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2157,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "42665:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2167,
																	"src": "42659:7:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2156,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "42659:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2158,
															"nodeType": "VariableDeclarationStatement",
															"src": "42659:7:0"
														},
														{
															"AST": {
																"nativeSrc": "42867:171:0",
																"nodeType": "YulBlock",
																"src": "42867:171:0",
																"statements": [
																	{
																		"nativeSrc": "42885:32:0",
																		"nodeType": "YulAssignment",
																		"src": "42885:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "42900:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "42900:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "42911:4:0",
																							"nodeType": "YulLiteral",
																							"src": "42911:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "42896:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "42896:3:0"
																					},
																					"nativeSrc": "42896:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42896:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "42890:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42890:5:0"
																			},
																			"nativeSrc": "42890:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42890:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "42885:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42885:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "42934:32:0",
																		"nodeType": "YulAssignment",
																		"src": "42934:32:0",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "42949:9:0",
																							"nodeType": "YulIdentifier",
																							"src": "42949:9:0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "42960:4:0",
																							"nodeType": "YulLiteral",
																							"src": "42960:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "42945:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "42945:3:0"
																					},
																					"nativeSrc": "42945:20:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42945:20:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "42939:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "42939:5:0"
																			},
																			"nativeSrc": "42939:27:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42939:27:0"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "42934:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42934:1:0"
																			}
																		]
																	},
																	{
																		"nativeSrc": "42983:41:0",
																		"nodeType": "YulAssignment",
																		"src": "42983:41:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "42993:1:0",
																					"nodeType": "YulLiteral",
																					"src": "42993:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "43006:9:0",
																									"nodeType": "YulIdentifier",
																									"src": "43006:9:0"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "43017:4:0",
																									"nodeType": "YulLiteral",
																									"src": "43017:4:0",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "43002:3:0",
																								"nodeType": "YulIdentifier",
																								"src": "43002:3:0"
																							},
																							"nativeSrc": "43002:20:0",
																							"nodeType": "YulFunctionCall",
																							"src": "43002:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "42996:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "42996:5:0"
																					},
																					"nativeSrc": "42996:27:0",
																					"nodeType": "YulFunctionCall",
																					"src": "42996:27:0"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "42988:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "42988:4:0"
																			},
																			"nativeSrc": "42988:36:0",
																			"nodeType": "YulFunctionCall",
																			"src": "42988:36:0"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "42983:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "42983:1:0"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2151,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42885:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2154,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42934:1:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42900:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42949:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2136,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "43006:9:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2157,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "42983:1:0",
																	"valueSize": 1
																}
															],
															"id": 2159,
															"nodeType": "InlineAssembly",
															"src": "42858:180:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2161,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2134,
																		"src": "43069:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2162,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "43075:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2163,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "43078:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2164,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "43081:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2160,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2184,
																		2264,
																		2372
																	],
																	"referencedDeclaration": 2372,
																	"src": "43058:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "43058:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2145,
															"id": 2166,
															"nodeType": "Return",
															"src": "43051:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "41176:1267:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "42457:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "42476:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42468:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "42495:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42482:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2135,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42482:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42467:38:0"
									},
									"returnParameters": {
										"id": 2145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42529:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42538:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2141,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2140,
														"name": "RecoverError",
														"nameLocations": [
															"42538:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "42538:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "42538:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "42552:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42552:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42528:32:0"
									},
									"scope": 2458,
									"src": "42448:766:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2213,
										"nodeType": "Block",
										"src": "44108:168:0",
										"statements": [
											{
												"assignments": [
													2195,
													2198,
													2200
												],
												"declarations": [
													{
														"constant": false,
														"id": 2195,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "44127:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44119:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2194,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44119:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "44151:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44138:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2197,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2196,
																"name": "RecoverError",
																"nameLocations": [
																	"44138:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "44138:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "44138:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2200,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "44166:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2213,
														"src": "44158:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2199,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "44158:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2205,
												"initialValue": {
													"arguments": [
														{
															"id": 2202,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "44189:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2203,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2189,
															"src": "44195:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2201,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2184,
														"src": "44178:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44178:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44118:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2207,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "44227:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2208,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2200,
															"src": "44234:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2206,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "44215:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44215:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "44215:28:0"
											},
											{
												"expression": {
													"id": 2211,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2195,
													"src": "44260:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2212,
												"nodeType": "Return",
												"src": "44253:16:0"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "43220:796:0",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 2214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "44030:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "44046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "44065:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44052:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2188,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "44052:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44037:38:0"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2214,
												"src": "44099:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44098:9:0"
									},
									"scope": 2458,
									"src": "44021:255:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "44604:342:0",
										"statements": [
											{
												"id": 2262,
												"nodeType": "UncheckedBlock",
												"src": "44614:326:0",
												"statements": [
													{
														"assignments": [
															2232
														],
														"declarations": [
															{
																"constant": false,
																"id": 2232,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "44646:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "44638:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 2231,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "44638:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2239,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2233,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2221,
																"src": "44650:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44663:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44655:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 2234,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "44655:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44655:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "44650:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "44638:92:0"
													},
													{
														"assignments": [
															2241
														],
														"declarations": [
															{
																"constant": false,
																"id": 2241,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "44847:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 2262,
																"src": "44841:7:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 2240,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "44841:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2254,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 2246,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2221,
																							"src": "44866:2:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 2245,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "44858:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 2244,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "44858:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2247,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "44858:11:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 2248,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "44873:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "44858:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2250,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "44857:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 2251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44880:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "44857:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44851:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2242,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "44851:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44851:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "44841:42:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2256,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2217,
																	"src": "44915:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2257,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "44921:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 2258,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2219,
																	"src": "44924:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2259,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "44927:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2255,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2184,
																	2264,
																	2372
																],
																"referencedDeclaration": 2372,
																"src": "44904:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44904:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 2230,
														"id": 2261,
														"nodeType": "Return",
														"src": "44897:32:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2215,
										"nodeType": "StructuredDocumentation",
										"src": "44282:205:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 2264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "44501:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "44520:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44512:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "44534:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44526:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2218,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "44545:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44537:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44511:37:0"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2225,
														"name": "RecoverError",
														"nameLocations": [
															"44581:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "44581:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "44581:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "44595:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2228,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "44595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44571:32:0"
									},
									"scope": 2458,
									"src": "44492:454:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2296,
										"nodeType": "Block",
										"src": "45159:164:0",
										"statements": [
											{
												"assignments": [
													2277,
													2280,
													2282
												],
												"declarations": [
													{
														"constant": false,
														"id": 2277,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "45178:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45170:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2276,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45170:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2280,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "45202:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45189:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2278,
																"name": "RecoverError",
																"nameLocations": [
																	"45189:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "45189:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "45189:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2282,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "45217:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2296,
														"src": "45209:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2281,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "45209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2288,
												"initialValue": {
													"arguments": [
														{
															"id": 2284,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2267,
															"src": "45240:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2285,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "45246:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2286,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "45249:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2283,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2264,
														"src": "45229:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45229:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45169:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2290,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2280,
															"src": "45274:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2291,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "45281:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2289,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "45262:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45262:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "45262:28:0"
											},
											{
												"expression": {
													"id": 2294,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2277,
													"src": "45307:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2275,
												"id": 2295,
												"nodeType": "Return",
												"src": "45300:16:0"
											}
										]
									},
									"documentation": {
										"id": 2265,
										"nodeType": "StructuredDocumentation",
										"src": "44952:116:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 2297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "45082:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "45098:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45090:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "45112:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45104:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "45123:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45115:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45089:37:0"
									},
									"returnParameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2297,
												"src": "45150:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45149:9:0"
									},
									"scope": 2458,
									"src": "45073:250:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2371,
										"nodeType": "Block",
										"src": "45617:1372:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2318,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "46513:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2316,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46505:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46505:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46518:66:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "46505:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2332,
												"nodeType": "IfStatement",
												"src": "46501:164:0",
												"trueBody": {
													"id": 2331,
													"nodeType": "Block",
													"src": "46586:79:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46616:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46608:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2322,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46608:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46608:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2326,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "46620:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "46633:17:0",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2117,
																		"src": "46620:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 2328,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2306,
																		"src": "46652:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2329,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46607:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2315,
															"id": 2330,
															"nodeType": "Return",
															"src": "46600:54:0"
														}
													]
												}
											},
											{
												"assignments": [
													2334
												],
												"declarations": [
													{
														"constant": false,
														"id": 2334,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "46767:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2371,
														"src": "46759:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2333,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46759:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2341,
												"initialValue": {
													"arguments": [
														{
															"id": 2336,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2300,
															"src": "46786:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2337,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2302,
															"src": "46792:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2338,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "46795:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2339,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "46798:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2335,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "46776:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46776:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46759:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2342,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "46814:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46832:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46824:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2343,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46824:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46824:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46814:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2361,
												"nodeType": "IfStatement",
												"src": "46810:113:0",
												"trueBody": {
													"id": 2360,
													"nodeType": "Block",
													"src": "46836:87:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46866:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46858:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2348,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "46858:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46858:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2352,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2118,
																			"src": "46870:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "46883:16:0",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2115,
																		"src": "46870:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2118",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "46909:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "46901:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2354,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "46901:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46901:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2358,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46857:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 2315,
															"id": 2359,
															"nodeType": "Return",
															"src": "46850:62:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2362,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "46941:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2363,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "46949:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "46962:7:0",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2114,
															"src": "46949:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46979:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46971:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 2365,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "46971:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46971:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2369,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "46940:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 2315,
												"id": 2370,
												"nodeType": "Return",
												"src": "46933:49:0"
											}
										]
									},
									"documentation": {
										"id": 2298,
										"nodeType": "StructuredDocumentation",
										"src": "45329:125:0",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "45468:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "45496:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45488:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2302,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "45516:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45510:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2301,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "45510:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "45535:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45527:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "45554:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45546:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45478:83:0"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45594:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2311,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2310,
														"name": "RecoverError",
														"nameLocations": [
															"45594:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "45594:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "45594:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2372,
												"src": "45608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "45608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45584:32:0"
									},
									"scope": 2458,
									"src": "45459:1530:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2407,
										"nodeType": "Block",
										"src": "47216:166:0",
										"statements": [
											{
												"assignments": [
													2387,
													2390,
													2392
												],
												"declarations": [
													{
														"constant": false,
														"id": 2387,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "47235:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47227:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2386,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47227:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2390,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "47259:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47246:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 2389,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2388,
																"name": "RecoverError",
																"nameLocations": [
																	"47246:12:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2118,
																"src": "47246:12:0"
															},
															"referencedDeclaration": 2118,
															"src": "47246:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2392,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "47274:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2407,
														"src": "47266:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2391,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "47266:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2399,
												"initialValue": {
													"arguments": [
														{
															"id": 2394,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "47297:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2395,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2377,
															"src": "47303:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2396,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "47306:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2397,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "47309:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2393,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2184,
															2264,
															2372
														],
														"referencedDeclaration": 2372,
														"src": "47286:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47286:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2118_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47226:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2401,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2390,
															"src": "47333:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 2402,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2392,
															"src": "47340:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2400,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2457,
														"src": "47321:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2118_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47321:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2404,
												"nodeType": "ExpressionStatement",
												"src": "47321:28:0"
											},
											{
												"expression": {
													"id": 2405,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2387,
													"src": "47366:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2385,
												"id": 2406,
												"nodeType": "Return",
												"src": "47359:16:0"
											}
										]
									},
									"documentation": {
										"id": 2373,
										"nodeType": "StructuredDocumentation",
										"src": "46995:122:0",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "47131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "47147:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47139:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "47159:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47153:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2376,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "47153:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "47170:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47162:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "47181:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47173:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47138:45:0"
									},
									"returnParameters": {
										"id": 2385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2408,
												"src": "47207:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47206:9:0"
									},
									"scope": 2458,
									"src": "47122:260:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "47587:460:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2417,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2412,
														"src": "47601:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2418,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "47610:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "47623:7:0",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2114,
														"src": "47610:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "47601:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$2118",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 2426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2423,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "47697:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2424,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "47706:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 2425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "47719:16:0",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2115,
															"src": "47706:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "47697:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$2118",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 2434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2431,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "47802:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2432,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2118,
																	"src": "47811:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "47824:22:0",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2116,
																"src": "47811:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "47802:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$2118",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2443,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "47936:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2118",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2444,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "47945:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$2118_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "47958:17:0",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2117,
																	"src": "47945:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2118",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "47936:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2452,
															"nodeType": "IfStatement",
															"src": "47932:109:0",
															"trueBody": {
																"id": 2451,
																"nodeType": "Block",
																"src": "47977:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2448,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2414,
																					"src": "48021:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2447,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2131,
																				"src": "47998:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "47998:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2450,
																		"nodeType": "RevertStatement",
																		"src": "47991:39:0"
																	}
																]
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "47798:243:0",
														"trueBody": {
															"id": 2442,
															"nodeType": "Block",
															"src": "47848:78:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2438,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2414,
																						"src": "47905:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 2437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "47897:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2436,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "47897:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2439,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "47897:17:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2435,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2126,
																			"src": "47869:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 2440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47869:46:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2441,
																	"nodeType": "RevertStatement",
																	"src": "47862:53:0"
																}
															]
														}
													},
													"id": 2454,
													"nodeType": "IfStatement",
													"src": "47693:348:0",
													"trueBody": {
														"id": 2430,
														"nodeType": "Block",
														"src": "47737:55:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2427,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "47758:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47758:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2429,
																"nodeType": "RevertStatement",
																"src": "47751:30:0"
															}
														]
													}
												},
												"id": 2455,
												"nodeType": "IfStatement",
												"src": "47597:444:0",
												"trueBody": {
													"id": 2422,
													"nodeType": "Block",
													"src": "47632:55:0",
													"statements": [
														{
															"functionReturnParameters": 2416,
															"id": 2421,
															"nodeType": "Return",
															"src": "47646:7:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2409,
										"nodeType": "StructuredDocumentation",
										"src": "47388:122:0",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "47524:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "47549:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "47536:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2118",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 2411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2410,
														"name": "RecoverError",
														"nameLocations": [
															"47536:12:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2118,
														"src": "47536:12:0"
													},
													"referencedDeclaration": 2118,
													"src": "47536:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2118",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "47564:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2457,
												"src": "47556:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2413,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "47556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47535:38:0"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47587:0:0"
									},
									"scope": 2458,
									"src": "47515:532:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3588,
							"src": "40663:7386:0",
							"usedErrors": [
								2121,
								2126,
								2131
							],
							"usedEvents": []
						},
						{
							"id": 2459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "48223:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2460,
								"nodeType": "StructuredDocumentation",
								"src": "48249:1963:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 2493,
							"linearizedBaseContracts": [
								2493
							],
							"name": "IERC20Permit",
							"nameLocation": "50223:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2461,
										"nodeType": "StructuredDocumentation",
										"src": "50242:850:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 2478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "51106:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2463,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "51130:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51122:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "51153:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51145:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "51178:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51170:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "51201:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51193:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "51225:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51219:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2470,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "51219:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "51244:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51236:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2472,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "51263:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "51255:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2474,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51112:158:0"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51279:0:0"
									},
									"scope": 2493,
									"src": "51097:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2479,
										"nodeType": "StructuredDocumentation",
										"src": "51286:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 2486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "51594:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "51609:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "51601:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51601:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51600:15:0"
									},
									"returnParameters": {
										"id": 2485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2484,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "51639:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51638:9:0"
									},
									"scope": 2493,
									"src": "51585:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "51654:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 2492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "51849:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51865:2:0"
									},
									"returnParameters": {
										"id": 2491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2492,
												"src": "51891:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2489,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "51891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51890:9:0"
									},
									"scope": 2493,
									"src": "51840:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3588,
							"src": "50213:1689:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2494,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "52055:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2495,
								"nodeType": "StructuredDocumentation",
								"src": "52081:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 2534,
							"linearizedBaseContracts": [
								2534
							],
							"name": "IERC20Errors",
							"nameLocation": "52231:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "52250:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 2504,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "52570:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "52603:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "52619:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "52636:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "52628:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52594:49:0"
									},
									"src": "52564:80:0"
								},
								{
									"documentation": {
										"id": 2505,
										"nodeType": "StructuredDocumentation",
										"src": "52650:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 2509,
									"name": "ERC20InvalidSender",
									"nameLocation": "52813:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "52840:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "52832:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52831:16:0"
									},
									"src": "52807:41:0"
								},
								{
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "52854:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 2514,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "53024:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "53053:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "53045:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53044:18:0"
									},
									"src": "53018:45:0"
								},
								{
									"documentation": {
										"id": 2515,
										"nodeType": "StructuredDocumentation",
										"src": "53069:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 2523,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "53425:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "53460:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "53477:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53469:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53469:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "53496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2523,
												"src": "53488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53451:52:0"
									},
									"src": "53419:85:0"
								},
								{
									"documentation": {
										"id": 2524,
										"nodeType": "StructuredDocumentation",
										"src": "53510:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 2528,
									"name": "ERC20InvalidApprover",
									"nameLocation": "53695:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "53724:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "53716:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53715:18:0"
									},
									"src": "53689:45:0"
								},
								{
									"documentation": {
										"id": 2529,
										"nodeType": "StructuredDocumentation",
										"src": "53740:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 2533,
									"name": "ERC20InvalidSpender",
									"nameLocation": "53946:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "53974:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "53966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53965:17:0"
									},
									"src": "53940:43:0"
								}
							],
							"scope": 3588,
							"src": "52221:1764:0",
							"usedErrors": [
								2504,
								2509,
								2514,
								2523,
								2528,
								2533
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2535,
								"nodeType": "StructuredDocumentation",
								"src": "53987:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 2582,
							"linearizedBaseContracts": [
								2582
							],
							"name": "IERC721Errors",
							"nameLocation": "54139:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2536,
										"nodeType": "StructuredDocumentation",
										"src": "54159:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 2540,
									"name": "ERC721InvalidOwner",
									"nameLocation": "54389:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "54408:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54407:15:0"
									},
									"src": "54383:40:0"
								},
								{
									"documentation": {
										"id": 2541,
										"nodeType": "StructuredDocumentation",
										"src": "54429:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 2545,
									"name": "ERC721NonexistentToken",
									"nameLocation": "54572:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54603:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2545,
												"src": "54595:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54594:17:0"
									},
									"src": "54566:46:0"
								},
								{
									"documentation": {
										"id": 2546,
										"nodeType": "StructuredDocumentation",
										"src": "54618:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 2554,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "54918:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2548,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "54947:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54939:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2552,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "54980:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2554,
												"src": "54972:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54938:48:0"
									},
									"src": "54912:75:0"
								},
								{
									"documentation": {
										"id": 2555,
										"nodeType": "StructuredDocumentation",
										"src": "54993:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 2559,
									"name": "ERC721InvalidSender",
									"nameLocation": "55156:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2557,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "55184:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "55176:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55175:16:0"
									},
									"src": "55150:42:0"
								},
								{
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "55198:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 2564,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "55368:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "55398:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "55390:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55389:18:0"
									},
									"src": "55362:46:0"
								},
								{
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "55414:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 2571,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "55672:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "55707:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "55699:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "55725:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "55717:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55698:35:0"
									},
									"src": "55666:68:0"
								},
								{
									"documentation": {
										"id": 2572,
										"nodeType": "StructuredDocumentation",
										"src": "55740:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 2576,
									"name": "ERC721InvalidApprover",
									"nameLocation": "55925:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "55955:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "55947:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55946:18:0"
									},
									"src": "55919:46:0"
								},
								{
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "55971:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 2581,
									"name": "ERC721InvalidOperator",
									"nameLocation": "56179:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "56209:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2581,
												"src": "56201:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56200:18:0"
									},
									"src": "56173:46:0"
								}
							],
							"scope": 3588,
							"src": "54129:2092:0",
							"usedErrors": [
								2540,
								2545,
								2554,
								2559,
								2564,
								2571,
								2576,
								2581
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2583,
								"nodeType": "StructuredDocumentation",
								"src": "56223:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 2629,
							"linearizedBaseContracts": [
								2629
							],
							"name": "IERC1155Errors",
							"nameLocation": "56377:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "56398:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 2594,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "56770:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "56805:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56797:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "56821:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56813:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "56838:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56830:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "56854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "56846:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56796:66:0"
									},
									"src": "56764:99:0"
								},
								{
									"documentation": {
										"id": 2595,
										"nodeType": "StructuredDocumentation",
										"src": "56869:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 2599,
									"name": "ERC1155InvalidSender",
									"nameLocation": "57032:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "57061:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2599,
												"src": "57053:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57052:16:0"
									},
									"src": "57026:43:0"
								},
								{
									"documentation": {
										"id": 2600,
										"nodeType": "StructuredDocumentation",
										"src": "57075:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 2604,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "57245:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "57276:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2604,
												"src": "57268:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57267:18:0"
									},
									"src": "57239:47:0"
								},
								{
									"documentation": {
										"id": 2605,
										"nodeType": "StructuredDocumentation",
										"src": "57292:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 2611,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "57559:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "57596:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "57588:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "57614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2611,
												"src": "57606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57587:33:0"
									},
									"src": "57553:68:0"
								},
								{
									"documentation": {
										"id": 2612,
										"nodeType": "StructuredDocumentation",
										"src": "57627:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 2616,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "57812:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "57843:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "57835:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57834:18:0"
									},
									"src": "57806:47:0"
								},
								{
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "57859:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 2621,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "58067:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "58098:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2621,
												"src": "58090:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58090:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58089:18:0"
									},
									"src": "58061:47:0"
								},
								{
									"documentation": {
										"id": 2622,
										"nodeType": "StructuredDocumentation",
										"src": "58114:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 2628,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "58405:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2624,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "58439:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "58431:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "58458:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "58450:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58430:41:0"
									},
									"src": "58399:73:0"
								}
							],
							"scope": 3588,
							"src": "56367:2107:0",
							"usedErrors": [
								2594,
								2599,
								2604,
								2611,
								2616,
								2621,
								2628
							],
							"usedEvents": []
						},
						{
							"id": 2630,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "58604:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2631,
								"nodeType": "StructuredDocumentation",
								"src": "58630:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2658,
							"linearizedBaseContracts": [
								2658
							],
							"name": "Context",
							"nameLocation": "59145:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2639,
										"nodeType": "Block",
										"src": "59221:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2636,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "59238:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59242:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "59238:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2635,
												"id": 2638,
												"nodeType": "Return",
												"src": "59231:17:0"
											}
										]
									},
									"id": 2640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "59168:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59178:2:0"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2640,
												"src": "59212:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59211:9:0"
									},
									"scope": 2658,
									"src": "59159:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2648,
										"nodeType": "Block",
										"src": "59328:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2645,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "59345:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "59349:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "59345:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2644,
												"id": 2647,
												"nodeType": "Return",
												"src": "59338:15:0"
											}
										]
									},
									"id": 2649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "59270:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59278:2:0"
									},
									"returnParameters": {
										"id": 2644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "59312:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "59312:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59311:16:0"
									},
									"scope": 2658,
									"src": "59261:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "59438:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "59455:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 2653,
												"id": 2655,
												"nodeType": "Return",
												"src": "59448:8:0"
											}
										]
									},
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "59375:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59395:2:0"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "59429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59428:9:0"
									},
									"scope": 2658,
									"src": "59366:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "59127:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 2659,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "59597:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2661,
										"name": "Context",
										"nameLocations": [
											"60141:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2658,
										"src": "60141:7:0"
									},
									"id": 2662,
									"nodeType": "InheritanceSpecifier",
									"src": "60141:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2660,
								"nodeType": "StructuredDocumentation",
								"src": "59624:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2803,
							"linearizedBaseContracts": [
								2803,
								2658
							],
							"name": "Ownable",
							"nameLocation": "60130:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2664,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "60171:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2803,
									"src": "60155:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2663,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "60155:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 2665,
										"nodeType": "StructuredDocumentation",
										"src": "60184:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 2669,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "60280:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "60315:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2669,
												"src": "60307:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60306:17:0"
									},
									"src": "60274:50:0"
								},
								{
									"documentation": {
										"id": 2670,
										"nodeType": "StructuredDocumentation",
										"src": "60330:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 2674,
									"name": "OwnableInvalidOwner",
									"nameLocation": "60423:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "60451:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2674,
												"src": "60443:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60443:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60442:15:0"
									},
									"src": "60417:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 2680,
									"name": "OwnershipTransferred",
									"nameLocation": "60470:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "60507:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "60491:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2678,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "60538:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2680,
												"src": "60522:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60490:57:0"
									},
									"src": "60464:84:0"
								},
								{
									"body": {
										"id": 2705,
										"nodeType": "Block",
										"src": "60708:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2686,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2683,
														"src": "60722:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "60746:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "60738:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2687,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "60738:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "60738:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "60722:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2700,
												"nodeType": "IfStatement",
												"src": "60718:95:0",
												"trueBody": {
													"id": 2699,
													"nodeType": "Block",
													"src": "60750:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "60799:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "60791:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2693,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "60791:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "60791:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2692,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2674,
																	"src": "60771:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "60771:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2698,
															"nodeType": "RevertStatement",
															"src": "60764:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2702,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2683,
															"src": "60841:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2701,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "60822:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60822:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2704,
												"nodeType": "ExpressionStatement",
												"src": "60822:32:0"
											}
										]
									},
									"documentation": {
										"id": 2681,
										"nodeType": "StructuredDocumentation",
										"src": "60554:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 2706,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2683,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "60694:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2706,
												"src": "60686:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60685:22:0"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60708:0:0"
									},
									"scope": 2803,
									"src": "60674:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2713,
										"nodeType": "Block",
										"src": "60970:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2709,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2740,
														"src": "60980:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "60980:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2711,
												"nodeType": "ExpressionStatement",
												"src": "60980:13:0"
											},
											{
												"id": 2712,
												"nodeType": "PlaceholderStatement",
												"src": "61003:1:0"
											}
										]
									},
									"documentation": {
										"id": 2707,
										"nodeType": "StructuredDocumentation",
										"src": "60867:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2714,
									"name": "onlyOwner",
									"nameLocation": "60958:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60967:2:0"
									},
									"src": "60949:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2722,
										"nodeType": "Block",
										"src": "61142:30:0",
										"statements": [
											{
												"expression": {
													"id": 2720,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2664,
													"src": "61159:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2719,
												"id": 2721,
												"nodeType": "Return",
												"src": "61152:13:0"
											}
										]
									},
									"documentation": {
										"id": 2715,
										"nodeType": "StructuredDocumentation",
										"src": "61017:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "61096:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61101:2:0"
									},
									"returnParameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2723,
												"src": "61133:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61133:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61132:9:0"
									},
									"scope": 2803,
									"src": "61087:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2739,
										"nodeType": "Block",
										"src": "61290:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2727,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "61304:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61304:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2729,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "61315:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "61315:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "61304:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2738,
												"nodeType": "IfStatement",
												"src": "61300:101:0",
												"trueBody": {
													"id": 2737,
													"nodeType": "Block",
													"src": "61329:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2733,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2640,
																			"src": "61377:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "61377:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2732,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2669,
																	"src": "61350:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "61350:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2736,
															"nodeType": "RevertStatement",
															"src": "61343:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2724,
										"nodeType": "StructuredDocumentation",
										"src": "61178:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 2740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "61254:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61265:2:0"
									},
									"returnParameters": {
										"id": 2726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61290:0:0"
									},
									"scope": 2803,
									"src": "61245:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2753,
										"nodeType": "Block",
										"src": "61796:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "61833:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "61825:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "61825:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "61825:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2746,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "61806:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61806:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2752,
												"nodeType": "ExpressionStatement",
												"src": "61806:30:0"
											}
										]
									},
									"documentation": {
										"id": 2741,
										"nodeType": "StructuredDocumentation",
										"src": "61413:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2754,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2744,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2743,
												"name": "onlyOwner",
												"nameLocations": [
													"61786:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "61786:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61786:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "61751:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61768:2:0"
									},
									"returnParameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61796:0:0"
									},
									"scope": 2803,
									"src": "61742:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "62062:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2762,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2757,
														"src": "62076:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "62096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "62088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2763,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "62088:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "62088:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "62076:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2776,
												"nodeType": "IfStatement",
												"src": "62072:91:0",
												"trueBody": {
													"id": 2775,
													"nodeType": "Block",
													"src": "62100:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "62149:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "62141:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2769,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "62141:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "62141:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2768,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2674,
																	"src": "62121:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "62121:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2774,
															"nodeType": "RevertStatement",
															"src": "62114:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2778,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "62191:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2777,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "62172:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62172:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2780,
												"nodeType": "ExpressionStatement",
												"src": "62172:28:0"
											}
										]
									},
									"documentation": {
										"id": 2755,
										"nodeType": "StructuredDocumentation",
										"src": "61849:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2760,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2759,
												"name": "onlyOwner",
												"nameLocations": [
													"62052:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2714,
												"src": "62052:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "62052:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "62001:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2757,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "62027:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "62019:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62018:18:0"
									},
									"returnParameters": {
										"id": 2761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62062:0:0"
									},
									"scope": 2803,
									"src": "61992:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "62424:124:0",
										"statements": [
											{
												"assignments": [
													2789
												],
												"declarations": [
													{
														"constant": false,
														"id": 2789,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "62442:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2801,
														"src": "62434:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2788,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "62434:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2791,
												"initialValue": {
													"id": 2790,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2664,
													"src": "62453:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62434:25:0"
											},
											{
												"expression": {
													"id": 2794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2792,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2664,
														"src": "62469:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2793,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2785,
														"src": "62478:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "62469:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2795,
												"nodeType": "ExpressionStatement",
												"src": "62469:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2797,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2789,
															"src": "62522:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2798,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2785,
															"src": "62532:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2796,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "62501:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62501:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2800,
												"nodeType": "EmitStatement",
												"src": "62496:45:0"
											}
										]
									},
									"documentation": {
										"id": 2783,
										"nodeType": "StructuredDocumentation",
										"src": "62213:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "62370:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "62397:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "62389:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62388:18:0"
									},
									"returnParameters": {
										"id": 2787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62424:0:0"
									},
									"scope": 2803,
									"src": "62361:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "60112:2438:0",
							"usedErrors": [
								2669,
								2674
							],
							"usedEvents": [
								2680
							]
						},
						{
							"id": 2804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "62690:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2805,
								"nodeType": "StructuredDocumentation",
								"src": "62716:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2880,
							"linearizedBaseContracts": [
								2880
							],
							"name": "IERC20",
							"nameLocation": "62797:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2806,
										"nodeType": "StructuredDocumentation",
										"src": "62810:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2814,
									"name": "Transfer",
									"nameLocation": "62979:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "63004:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "62988:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "62988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2810,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "63026:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "63010:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "63038:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "63030:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62987:57:0"
									},
									"src": "62973:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2815,
										"nodeType": "StructuredDocumentation",
										"src": "63051:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2823,
									"name": "Approval",
									"nameLocation": "63210:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "63235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "63219:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2819,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "63258:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "63242:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2821,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "63275:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "63267:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63218:63:0"
									},
									"src": "63204:78:0"
								},
								{
									"documentation": {
										"id": 2824,
										"nodeType": "StructuredDocumentation",
										"src": "63288:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "63367:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "63378:2:0"
									},
									"returnParameters": {
										"id": 2828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "63404:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63403:9:0"
									},
									"scope": 2880,
									"src": "63358:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "63419:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "63504:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "63522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "63514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63513:17:0"
									},
									"returnParameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "63554:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63553:9:0"
									},
									"scope": 2880,
									"src": "63495:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2838,
										"nodeType": "StructuredDocumentation",
										"src": "63569:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "63796:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "63813:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "63805:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "63825:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "63817:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63804:27:0"
									},
									"returnParameters": {
										"id": 2846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "63850:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2844,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "63850:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63849:6:0"
									},
									"scope": 2880,
									"src": "63787:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2848,
										"nodeType": "StructuredDocumentation",
										"src": "63862:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "64140:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "64158:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "64150:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "64173:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "64165:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64149:32:0"
									},
									"returnParameters": {
										"id": 2856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2857,
												"src": "64205:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64204:9:0"
									},
									"scope": 2880,
									"src": "64131:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2858,
										"nodeType": "StructuredDocumentation",
										"src": "64220:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2867,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "64901:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "64917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "64909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "64934:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "64926:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "64926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64908:32:0"
									},
									"returnParameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2867,
												"src": "64959:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "64959:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64958:6:0"
									},
									"scope": 2880,
									"src": "64892:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2868,
										"nodeType": "StructuredDocumentation",
										"src": "64971:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2879,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "65282:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "65303:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "65295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65295:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2872,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "65317:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "65309:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "65329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "65321:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65294:41:0"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2879,
												"src": "65354:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2876,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "65354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65353:6:0"
									},
									"scope": 2880,
									"src": "65273:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3588,
							"src": "62787:2575:0",
							"usedErrors": [],
							"usedEvents": [
								2814,
								2823
							]
						},
						{
							"id": 2881,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "65540:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2883,
										"name": "IERC20",
										"nameLocations": [
											"65682:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2880,
										"src": "65682:6:0"
									},
									"id": 2884,
									"nodeType": "InheritanceSpecifier",
									"src": "65682:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2882,
								"nodeType": "StructuredDocumentation",
								"src": "65567:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 2903,
							"linearizedBaseContracts": [
								2903,
								2880
							],
							"name": "IERC20Metadata",
							"nameLocation": "65664:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2885,
										"nodeType": "StructuredDocumentation",
										"src": "65695:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "65763:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65767:2:0"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2890,
												"src": "65793:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65793:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65792:15:0"
									},
									"scope": 2903,
									"src": "65754:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2891,
										"nodeType": "StructuredDocumentation",
										"src": "65814:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "65884:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65890:2:0"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2896,
												"src": "65916:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "65916:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65915:15:0"
									},
									"scope": 2903,
									"src": "65875:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2897,
										"nodeType": "StructuredDocumentation",
										"src": "65937:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "66016:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "66024:2:0"
									},
									"returnParameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "66050:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "66050:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66049:7:0"
									},
									"scope": 2903,
									"src": "66007:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3588,
							"src": "65654:405:0",
							"usedErrors": [],
							"usedEvents": [
								2814,
								2823
							]
						},
						{
							"id": 2904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "66197:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2906,
										"name": "Context",
										"nameLocations": [
											"67307:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2658,
										"src": "67307:7:0"
									},
									"id": 2907,
									"nodeType": "InheritanceSpecifier",
									"src": "67307:7:0"
								},
								{
									"baseName": {
										"id": 2908,
										"name": "IERC20",
										"nameLocations": [
											"67316:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2880,
										"src": "67316:6:0"
									},
									"id": 2909,
									"nodeType": "InheritanceSpecifier",
									"src": "67316:6:0"
								},
								{
									"baseName": {
										"id": 2910,
										"name": "IERC20Metadata",
										"nameLocations": [
											"67324:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2903,
										"src": "67324:14:0"
									},
									"id": 2911,
									"nodeType": "InheritanceSpecifier",
									"src": "67324:14:0"
								},
								{
									"baseName": {
										"id": 2912,
										"name": "IERC20Errors",
										"nameLocations": [
											"67340:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2534,
										"src": "67340:12:0"
									},
									"id": 2913,
									"nodeType": "InheritanceSpecifier",
									"src": "67340:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2905,
								"nodeType": "StructuredDocumentation",
								"src": "66227:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 3409,
							"linearizedBaseContracts": [
								3409,
								2534,
								2903,
								2880,
								2658
							],
							"name": "ERC20",
							"nameLocation": "67298:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2917,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "67403:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67359:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2916,
										"keyName": "account",
										"keyNameLocation": "67375:7:0",
										"keyType": {
											"id": 2914,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "67367:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "67359:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2915,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "67386:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2923,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "67491:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67419:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2922,
										"keyName": "account",
										"keyNameLocation": "67435:7:0",
										"keyType": {
											"id": 2918,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "67427:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "67419:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2921,
											"keyName": "spender",
											"keyNameLocation": "67462:7:0",
											"keyType": {
												"id": 2919,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "67454:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "67446:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2920,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "67473:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2925,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "67525:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67509:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2924,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "67509:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2927,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "67559:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67544:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2926,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "67544:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2929,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "67585:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3409,
									"src": "67570:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2928,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "67570:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "67831:57:0",
										"statements": [
											{
												"expression": {
													"id": 2939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2937,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2927,
														"src": "67841:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2938,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2932,
														"src": "67849:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "67841:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2940,
												"nodeType": "ExpressionStatement",
												"src": "67841:13:0"
											},
											{
												"expression": {
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2941,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2929,
														"src": "67864:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2942,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2934,
														"src": "67874:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "67864:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2944,
												"nodeType": "ExpressionStatement",
												"src": "67864:17:0"
											}
										]
									},
									"documentation": {
										"id": 2930,
										"nodeType": "StructuredDocumentation",
										"src": "67599:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 2946,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "67801:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "67787:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67787:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "67822:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "67808:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2933,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67808:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67786:44:0"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67831:0:0"
									},
									"scope": 3409,
									"src": "67775:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2890
									],
									"body": {
										"id": 2954,
										"nodeType": "Block",
										"src": "68013:29:0",
										"statements": [
											{
												"expression": {
													"id": 2952,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2927,
													"src": "68030:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2951,
												"id": 2953,
												"nodeType": "Return",
												"src": "68023:12:0"
											}
										]
									},
									"documentation": {
										"id": 2947,
										"nodeType": "StructuredDocumentation",
										"src": "67894:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "67962:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67966:2:0"
									},
									"returnParameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2955,
												"src": "67998:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "67998:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67997:15:0"
									},
									"scope": 3409,
									"src": "67953:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2896
									],
									"body": {
										"id": 2963,
										"nodeType": "Block",
										"src": "68217:31:0",
										"statements": [
											{
												"expression": {
													"id": 2961,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2929,
													"src": "68234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2960,
												"id": 2962,
												"nodeType": "Return",
												"src": "68227:14:0"
											}
										]
									},
									"documentation": {
										"id": 2956,
										"nodeType": "StructuredDocumentation",
										"src": "68048:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "68164:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68170:2:0"
									},
									"returnParameters": {
										"id": 2960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2964,
												"src": "68202:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "68202:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68201:15:0"
									},
									"scope": 3409,
									"src": "68155:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2902
									],
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "68937:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "68954:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 2969,
												"id": 2971,
												"nodeType": "Return",
												"src": "68947:9:0"
											}
										]
									},
									"documentation": {
										"id": 2965,
										"nodeType": "StructuredDocumentation",
										"src": "68254:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "68890:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68898:2:0"
									},
									"returnParameters": {
										"id": 2969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "68930:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2967,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "68930:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68929:7:0"
									},
									"scope": 3409,
									"src": "68881:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2829
									],
									"body": {
										"id": 2981,
										"nodeType": "Block",
										"src": "69084:36:0",
										"statements": [
											{
												"expression": {
													"id": 2979,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2925,
													"src": "69101:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2978,
												"id": 2980,
												"nodeType": "Return",
												"src": "69094:19:0"
											}
										]
									},
									"documentation": {
										"id": 2974,
										"nodeType": "StructuredDocumentation",
										"src": "68969:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "69032:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69043:2:0"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2982,
												"src": "69075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69074:9:0"
									},
									"scope": 3409,
									"src": "69023:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2837
									],
									"body": {
										"id": 2994,
										"nodeType": "Block",
										"src": "69252:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2990,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2917,
														"src": "69269:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2992,
													"indexExpression": {
														"id": 2991,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2985,
														"src": "69279:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "69269:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2989,
												"id": 2993,
												"nodeType": "Return",
												"src": "69262:25:0"
											}
										]
									},
									"documentation": {
										"id": 2983,
										"nodeType": "StructuredDocumentation",
										"src": "69126:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 2995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "69187:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "69205:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "69197:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69196:17:0"
									},
									"returnParameters": {
										"id": 2989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "69243:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69242:9:0"
									},
									"scope": 3409,
									"src": "69178:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2847
									],
									"body": {
										"id": 3018,
										"nodeType": "Block",
										"src": "69564:103:0",
										"statements": [
											{
												"assignments": [
													3006
												],
												"declarations": [
													{
														"constant": false,
														"id": 3006,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "69582:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3018,
														"src": "69574:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3005,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "69574:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3009,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3007,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "69590:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69590:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "69574:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3011,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3006,
															"src": "69622:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3012,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "69629:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3013,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3000,
															"src": "69633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3010,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "69612:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69612:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3015,
												"nodeType": "ExpressionStatement",
												"src": "69612:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "69656:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3004,
												"id": 3017,
												"nodeType": "Return",
												"src": "69649:11:0"
											}
										]
									},
									"documentation": {
										"id": 2996,
										"nodeType": "StructuredDocumentation",
										"src": "69300:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 3019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "69498:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "69515:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "69507:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "69527:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "69519:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69506:27:0"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3019,
												"src": "69558:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3002,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "69558:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69557:6:0"
									},
									"scope": 3409,
									"src": "69489:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2857
									],
									"body": {
										"id": 3035,
										"nodeType": "Block",
										"src": "69814:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3029,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2923,
															"src": "69831:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 3031,
														"indexExpression": {
															"id": 3030,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3022,
															"src": "69843:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "69831:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3033,
													"indexExpression": {
														"id": 3032,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "69850:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "69831:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3028,
												"id": 3034,
												"nodeType": "Return",
												"src": "69824:34:0"
											}
										]
									},
									"documentation": {
										"id": 3020,
										"nodeType": "StructuredDocumentation",
										"src": "69673:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 3036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "69734:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "69752:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "69744:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "69767:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "69759:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69759:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69743:32:0"
									},
									"returnParameters": {
										"id": 3028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3027,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "69805:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69804:9:0"
									},
									"scope": 3409,
									"src": "69725:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2867
									],
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "70251:107:0",
										"statements": [
											{
												"assignments": [
													3047
												],
												"declarations": [
													{
														"constant": false,
														"id": 3047,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "70269:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3059,
														"src": "70261:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3046,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "70261:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3050,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3048,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "70277:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70277:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70261:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3052,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3047,
															"src": "70308:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3053,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3039,
															"src": "70315:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3054,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3041,
															"src": "70324:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3051,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3300,
															3360
														],
														"referencedDeclaration": 3300,
														"src": "70299:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70299:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3056,
												"nodeType": "ExpressionStatement",
												"src": "70299:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "70347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3045,
												"id": 3058,
												"nodeType": "Return",
												"src": "70340:11:0"
											}
										]
									},
									"documentation": {
										"id": 3037,
										"nodeType": "StructuredDocumentation",
										"src": "69871:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 3060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "70181:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "70197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "70189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70214:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "70206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70188:32:0"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "70245:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70245:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70244:6:0"
									},
									"scope": 3409,
									"src": "70172:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2879
									],
									"body": {
										"id": 3091,
										"nodeType": "Block",
										"src": "71011:151:0",
										"statements": [
											{
												"assignments": [
													3073
												],
												"declarations": [
													{
														"constant": false,
														"id": 3073,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "71029:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3091,
														"src": "71021:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3072,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "71021:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3076,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3074,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2640,
														"src": "71039:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71039:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "71021:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3063,
															"src": "71077:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3079,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "71083:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3080,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "71092:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3077,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3408,
														"src": "71061:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71061:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3082,
												"nodeType": "ExpressionStatement",
												"src": "71061:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3084,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3063,
															"src": "71118:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3085,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3065,
															"src": "71124:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3067,
															"src": "71128:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3083,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "71108:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71108:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3088,
												"nodeType": "ExpressionStatement",
												"src": "71108:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "71151:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3071,
												"id": 3090,
												"nodeType": "Return",
												"src": "71144:11:0"
											}
										]
									},
									"documentation": {
										"id": 3061,
										"nodeType": "StructuredDocumentation",
										"src": "70364:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 3092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "70927:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3063,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "70948:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "70940:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "70962:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "70954:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "70966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70939:41:0"
									},
									"returnParameters": {
										"id": 3071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3092,
												"src": "71005:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3069,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "71005:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71004:6:0"
									},
									"scope": 3409,
									"src": "70918:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3138,
										"nodeType": "Block",
										"src": "71604:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3102,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3095,
														"src": "71618:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "71634:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "71626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3103,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "71626:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71626:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "71618:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3116,
												"nodeType": "IfStatement",
												"src": "71614:86:0",
												"trueBody": {
													"id": 3115,
													"nodeType": "Block",
													"src": "71638:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "71686:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "71678:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3109,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "71678:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71678:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3108,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "71659:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71659:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3114,
															"nodeType": "RevertStatement",
															"src": "71652:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3117,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3097,
														"src": "71713:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "71727:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "71719:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3118,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "71719:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71719:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "71713:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3131,
												"nodeType": "IfStatement",
												"src": "71709:86:0",
												"trueBody": {
													"id": 3130,
													"nodeType": "Block",
													"src": "71731:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "71781:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "71773:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3124,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "71773:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71773:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3123,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "71752:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71752:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3129,
															"nodeType": "RevertStatement",
															"src": "71745:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3133,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3095,
															"src": "71812:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3134,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3097,
															"src": "71818:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3135,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3099,
															"src": "71822:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3132,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3216,
														"src": "71804:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71804:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3137,
												"nodeType": "ExpressionStatement",
												"src": "71804:24:0"
											}
										]
									},
									"documentation": {
										"id": 3093,
										"nodeType": "StructuredDocumentation",
										"src": "71168:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 3139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "71544:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "71562:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "71554:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71554:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "71576:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "71568:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71568:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "71588:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "71580:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71553:41:0"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71604:0:0"
									},
									"scope": 3409,
									"src": "71535:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3215,
										"nodeType": "Block",
										"src": "72225:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3149,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "72239:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72255:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72247:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3150,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72247:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72247:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72239:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3186,
													"nodeType": "Block",
													"src": "72413:362:0",
													"statements": [
														{
															"assignments": [
																3161
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3161,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "72435:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3186,
																	"src": "72427:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3160,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "72427:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3165,
															"initialValue": {
																"baseExpression": {
																	"id": 3162,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2917,
																	"src": "72449:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3164,
																"indexExpression": {
																	"id": 3163,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3142,
																	"src": "72459:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "72449:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "72427:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3166,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3161,
																	"src": "72482:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "72496:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "72482:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3176,
															"nodeType": "IfStatement",
															"src": "72478:115:0",
															"trueBody": {
																"id": 3175,
																"nodeType": "Block",
																"src": "72503:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3170,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3142,
																					"src": "72553:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3171,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3161,
																					"src": "72559:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3172,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3146,
																					"src": "72572:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3169,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2504,
																				"src": "72528:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 3173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "72528:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3174,
																		"nodeType": "RevertStatement",
																		"src": "72521:57:0"
																	}
																]
															}
														},
														{
															"id": 3185,
															"nodeType": "UncheckedBlock",
															"src": "72606:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3177,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2917,
																				"src": "72713:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3179,
																			"indexExpression": {
																				"id": 3178,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3142,
																				"src": "72723:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "72713:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3180,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3161,
																				"src": "72731:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3181,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3146,
																				"src": "72745:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "72731:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "72713:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3184,
																	"nodeType": "ExpressionStatement",
																	"src": "72713:37:0"
																}
															]
														}
													]
												},
												"id": 3187,
												"nodeType": "IfStatement",
												"src": "72235:540:0",
												"trueBody": {
													"id": 3159,
													"nodeType": "Block",
													"src": "72259:148:0",
													"statements": [
														{
															"expression": {
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3155,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2925,
																	"src": "72375:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3156,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "72391:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "72375:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3158,
															"nodeType": "ExpressionStatement",
															"src": "72375:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3188,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3144,
														"src": "72789:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72803:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72795:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3189,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72795:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72795:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72789:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3207,
													"nodeType": "Block",
													"src": "73004:206:0",
													"statements": [
														{
															"id": 3206,
															"nodeType": "UncheckedBlock",
															"src": "73018:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3200,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2917,
																				"src": "73163:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3202,
																			"indexExpression": {
																				"id": 3201,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3144,
																				"src": "73173:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "73163:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 3203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "73180:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "73163:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3205,
																	"nodeType": "ExpressionStatement",
																	"src": "73163:22:0"
																}
															]
														}
													]
												},
												"id": 3208,
												"nodeType": "IfStatement",
												"src": "72785:425:0",
												"trueBody": {
													"id": 3199,
													"nodeType": "Block",
													"src": "72807:191:0",
													"statements": [
														{
															"id": 3198,
															"nodeType": "UncheckedBlock",
															"src": "72821:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 3196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3194,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2925,
																			"src": "72952:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 3195,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3146,
																			"src": "72968:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "72952:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3197,
																	"nodeType": "ExpressionStatement",
																	"src": "72952:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3210,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "73234:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3211,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3144,
															"src": "73240:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3212,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3146,
															"src": "73244:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3209,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2814,
														"src": "73225:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73225:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3214,
												"nodeType": "EmitStatement",
												"src": "73220:30:0"
											}
										]
									},
									"documentation": {
										"id": 3140,
										"nodeType": "StructuredDocumentation",
										"src": "71841:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 3216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "72159:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "72175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "72167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3144,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "72189:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "72181:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "72201:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3216,
												"src": "72193:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "72193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72166:41:0"
									},
									"returnParameters": {
										"id": 3148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72225:0:0"
									},
									"scope": 3409,
									"src": "72150:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3248,
										"nodeType": "Block",
										"src": "73656:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3224,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3219,
														"src": "73670:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "73689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "73681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3225,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "73681:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "73681:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "73670:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3238,
												"nodeType": "IfStatement",
												"src": "73666:91:0",
												"trueBody": {
													"id": 3237,
													"nodeType": "Block",
													"src": "73693:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "73743:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "73735:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3231,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "73735:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "73735:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3230,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "73714:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "73714:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3236,
															"nodeType": "RevertStatement",
															"src": "73707:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "73782:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "73774:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3240,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "73774:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "73774:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3244,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3219,
															"src": "73786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3245,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3221,
															"src": "73795:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3239,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3216,
														"src": "73766:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73766:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3247,
												"nodeType": "ExpressionStatement",
												"src": "73766:35:0"
											}
										]
									},
									"documentation": {
										"id": 3217,
										"nodeType": "StructuredDocumentation",
										"src": "73263:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 3249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "73609:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3219,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "73623:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "73615:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "73640:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3249,
												"src": "73632:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73614:32:0"
									},
									"returnParameters": {
										"id": 3223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73656:0:0"
									},
									"scope": 3409,
									"src": "73600:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3281,
										"nodeType": "Block",
										"src": "74182:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3257,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3252,
														"src": "74196:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "74215:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "74207:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3258,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "74207:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3261,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "74207:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "74196:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3271,
												"nodeType": "IfStatement",
												"src": "74192:89:0",
												"trueBody": {
													"id": 3270,
													"nodeType": "Block",
													"src": "74219:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3266,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "74267:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "74259:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3264,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "74259:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "74259:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3263,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2509,
																	"src": "74240:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "74240:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3269,
															"nodeType": "RevertStatement",
															"src": "74233:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3273,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3252,
															"src": "74298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "74315:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "74307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3274,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "74307:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3277,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "74307:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3278,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3254,
															"src": "74319:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3272,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3216,
														"src": "74290:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74290:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3280,
												"nodeType": "ExpressionStatement",
												"src": "74290:35:0"
											}
										]
									},
									"documentation": {
										"id": 3250,
										"nodeType": "StructuredDocumentation",
										"src": "73814:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 3282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "74135:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3252,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "74149:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "74141:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "74166:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3282,
												"src": "74158:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74158:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74140:32:0"
									},
									"returnParameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74182:0:0"
									},
									"scope": 3409,
									"src": "74126:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3299,
										"nodeType": "Block",
										"src": "74942:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3293,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3285,
															"src": "74961:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3294,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3287,
															"src": "74968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3289,
															"src": "74977:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "74984:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3292,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3300,
															3360
														],
														"referencedDeclaration": 3360,
														"src": "74952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74952:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3298,
												"nodeType": "ExpressionStatement",
												"src": "74952:37:0"
											}
										]
									},
									"documentation": {
										"id": 3283,
										"nodeType": "StructuredDocumentation",
										"src": "74338:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 3300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "74877:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "74894:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "74886:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "74909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "74901:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "74926:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "74918:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74885:47:0"
									},
									"returnParameters": {
										"id": 3291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74942:0:0"
									},
									"scope": 3409,
									"src": "74868:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3359,
										"nodeType": "Block",
										"src": "75926:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3312,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3303,
														"src": "75940:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "75957:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "75949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3313,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "75949:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3316,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75949:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "75940:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3326,
												"nodeType": "IfStatement",
												"src": "75936:89:0",
												"trueBody": {
													"id": 3325,
													"nodeType": "Block",
													"src": "75961:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "76011:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "76003:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3319,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "76003:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "76003:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3318,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "75982:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75982:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3324,
															"nodeType": "RevertStatement",
															"src": "75975:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3327,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3305,
														"src": "76038:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "76057:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "76049:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "76049:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "76049:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "76038:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3341,
												"nodeType": "IfStatement",
												"src": "76034:90:0",
												"trueBody": {
													"id": 3340,
													"nodeType": "Block",
													"src": "76061:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "76110:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "76102:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3334,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "76102:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "76102:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3333,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2533,
																	"src": "76082:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76082:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3339,
															"nodeType": "RevertStatement",
															"src": "76075:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3342,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2923,
																"src": "76133:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 3345,
															"indexExpression": {
																"id": 3343,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3303,
																"src": "76145:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "76133:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3346,
														"indexExpression": {
															"id": 3344,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3305,
															"src": "76152:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "76133:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3347,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3307,
														"src": "76163:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76133:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3349,
												"nodeType": "ExpressionStatement",
												"src": "76133:35:0"
											},
											{
												"condition": {
													"id": 3350,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3309,
													"src": "76182:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3358,
												"nodeType": "IfStatement",
												"src": "76178:76:0",
												"trueBody": {
													"id": 3357,
													"nodeType": "Block",
													"src": "76193:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3352,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3303,
																		"src": "76221:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3353,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3305,
																		"src": "76228:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3354,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3307,
																		"src": "76237:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3351,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2823,
																	"src": "76212:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 3355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76212:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3356,
															"nodeType": "EmitStatement",
															"src": "76207:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3301,
										"nodeType": "StructuredDocumentation",
										"src": "75002:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 3360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "75837:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3303,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "75854:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "75846:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "75869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "75861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "75886:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "75878:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "75878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3309,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "75898:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3360,
												"src": "75893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "75893:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75845:63:0"
									},
									"returnParameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75926:0:0"
									},
									"scope": 3409,
									"src": "75828:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3407,
										"nodeType": "Block",
										"src": "76631:388:0",
										"statements": [
											{
												"assignments": [
													3371
												],
												"declarations": [
													{
														"constant": false,
														"id": 3371,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "76649:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 3407,
														"src": "76641:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "76641:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3376,
												"initialValue": {
													"arguments": [
														{
															"id": 3373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3363,
															"src": "76678:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3374,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3365,
															"src": "76685:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3372,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3036,
														"src": "76668:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 3375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76668:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76641:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3377,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3371,
														"src": "76707:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "76732:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 3379,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "76732:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 3378,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "76727:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "76727:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 3382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "76741:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "76727:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76707:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3406,
												"nodeType": "IfStatement",
												"src": "76703:310:0",
												"trueBody": {
													"id": 3405,
													"nodeType": "Block",
													"src": "76746:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3384,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3371,
																	"src": "76764:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3385,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3367,
																	"src": "76783:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "76764:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3394,
															"nodeType": "IfStatement",
															"src": "76760:130:0",
															"trueBody": {
																"id": 3393,
																"nodeType": "Block",
																"src": "76790:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3388,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3365,
																					"src": "76842:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3389,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3371,
																					"src": "76851:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3390,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3367,
																					"src": "76869:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3387,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2523,
																				"src": "76815:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 3391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "76815:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3392,
																		"nodeType": "RevertStatement",
																		"src": "76808:67:0"
																	}
																]
															}
														},
														{
															"id": 3404,
															"nodeType": "UncheckedBlock",
															"src": "76903:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 3396,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3363,
																				"src": "76940:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3397,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3365,
																				"src": "76947:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3398,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3371,
																					"src": "76956:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 3399,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3367,
																					"src": "76975:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "76956:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 3401,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "76982:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 3395,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				3300,
																				3360
																			],
																			"referencedDeclaration": 3360,
																			"src": "76931:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 3402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "76931:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3403,
																	"nodeType": "ExpressionStatement",
																	"src": "76931:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3361,
										"nodeType": "StructuredDocumentation",
										"src": "76266:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 3408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "76551:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3363,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "76575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "76590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "76607:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "76599:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76566:47:0"
									},
									"returnParameters": {
										"id": 3369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76631:0:0"
									},
									"scope": 3409,
									"src": "76542:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3588,
							"src": "67280:9741:0",
							"usedErrors": [
								2504,
								2509,
								2514,
								2523,
								2528,
								2533
							],
							"usedEvents": [
								2814,
								2823
							]
						},
						{
							"id": 3410,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "77193:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3412,
										"name": "ERC20",
										"nameLocations": [
											"77745:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3409,
										"src": "77745:5:0"
									},
									"id": 3413,
									"nodeType": "InheritanceSpecifier",
									"src": "77745:5:0"
								},
								{
									"baseName": {
										"id": 3414,
										"name": "IERC20Permit",
										"nameLocations": [
											"77752:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2493,
										"src": "77752:12:0"
									},
									"id": 3415,
									"nodeType": "InheritanceSpecifier",
									"src": "77752:12:0"
								},
								{
									"baseName": {
										"id": 3416,
										"name": "EIP712",
										"nameLocations": [
											"77766:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2111,
										"src": "77766:6:0"
									},
									"id": 3417,
									"nodeType": "InheritanceSpecifier",
									"src": "77766:6:0"
								},
								{
									"baseName": {
										"id": 3418,
										"name": "Nonces",
										"nameLocations": [
											"77774:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 67,
										"src": "77774:6:0"
									},
									"id": 3419,
									"nodeType": "InheritanceSpecifier",
									"src": "77774:6:0"
								}
							],
							"canonicalName": "ERC20Permit",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3411,
								"nodeType": "StructuredDocumentation",
								"src": "77224:487:0",
								"text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": true,
							"id": 3552,
							"linearizedBaseContracts": [
								3552,
								67,
								2111,
								91,
								2493,
								3409,
								2534,
								2903,
								2880,
								2658
							],
							"name": "ERC20Permit",
							"nameLocation": "77730:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 3424,
									"mutability": "constant",
									"name": "PERMIT_TYPEHASH",
									"nameLocation": "77812:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3552,
									"src": "77787:146:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3420,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "77787:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
												"id": 3422,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "77848:84:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												},
												"value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
													"typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
												}
											],
											"id": 3421,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "77838:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 3423,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "77838:95:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 3425,
										"nodeType": "StructuredDocumentation",
										"src": "77940:52:0",
										"text": " @dev Permit deadline has expired."
									},
									"errorSelector": "62791302",
									"id": 3429,
									"name": "ERC2612ExpiredSignature",
									"nameLocation": "78003:23:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3427,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "78035:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3429,
												"src": "78027:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78026:18:0"
									},
									"src": "77997:48:0"
								},
								{
									"documentation": {
										"id": 3430,
										"nodeType": "StructuredDocumentation",
										"src": "78051:45:0",
										"text": " @dev Mismatched signature."
									},
									"errorSelector": "4b800e46",
									"id": 3436,
									"name": "ERC2612InvalidSigner",
									"nameLocation": "78107:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 3435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3432,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "78136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "78128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78152:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3436,
												"src": "78144:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78127:31:0"
									},
									"src": "78101:58:0"
								},
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "78440:2:0",
										"statements": []
									},
									"documentation": {
										"id": 3437,
										"nodeType": "StructuredDocumentation",
										"src": "78165:220:0",
										"text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
									},
									"id": 3447,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3442,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3439,
													"src": "78429:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"hexValue": "31",
													"id": 3443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "78435:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
														"typeString": "literal_string \"1\""
													},
													"value": "1"
												}
											],
											"id": 3444,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3441,
												"name": "EIP712",
												"nameLocations": [
													"78422:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2111,
												"src": "78422:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "78422:17:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3439,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "78416:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "78402:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "78402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78401:20:0"
									},
									"returnParameters": {
										"id": 3445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78440:0:0"
									},
									"scope": 3552,
									"src": "78390:52:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2478
									],
									"body": {
										"id": 3523,
										"nodeType": "Block",
										"src": "78685:483:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3465,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "78699:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "78705:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "78699:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 3467,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3456,
														"src": "78717:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "78699:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3474,
												"nodeType": "IfStatement",
												"src": "78695:97:0",
												"trueBody": {
													"id": 3473,
													"nodeType": "Block",
													"src": "78727:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3470,
																		"name": "deadline",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3456,
																		"src": "78772:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3469,
																	"name": "ERC2612ExpiredSignature",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3429,
																	"src": "78748:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 3471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78748:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3472,
															"nodeType": "RevertStatement",
															"src": "78741:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													3476
												],
												"declarations": [
													{
														"constant": false,
														"id": 3476,
														"mutability": "mutable",
														"name": "structHash",
														"nameLocation": "78810:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78802:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3475,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3490,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3480,
																	"name": "PERMIT_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3424,
																	"src": "78844:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 3481,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3450,
																	"src": "78861:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3482,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3452,
																	"src": "78868:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3483,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3454,
																	"src": "78877:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3485,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3450,
																			"src": "78894:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3484,
																		"name": "_useNonce",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "78884:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) returns (uint256)"
																		}
																	},
																	"id": 3486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "78884:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3487,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3456,
																	"src": "78902:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3478,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "78833:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 3479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "78837:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "78833:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 3488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "78833:78:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3477,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "78823:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78823:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78802:110:0"
											},
											{
												"assignments": [
													3492
												],
												"declarations": [
													{
														"constant": false,
														"id": 3492,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "78931:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78923:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3491,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "78923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3496,
												"initialValue": {
													"arguments": [
														{
															"id": 3494,
															"name": "structHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3476,
															"src": "78955:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3493,
														"name": "_hashTypedDataV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "78938:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 3495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78938:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78923:43:0"
											},
											{
												"assignments": [
													3498
												],
												"declarations": [
													{
														"constant": false,
														"id": 3498,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "78985:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3523,
														"src": "78977:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3497,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "78977:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3506,
												"initialValue": {
													"arguments": [
														{
															"id": 3501,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3492,
															"src": "79008:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3502,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3458,
															"src": "79014:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 3503,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3460,
															"src": "79017:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 3504,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3462,
															"src": "79020:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 3499,
															"name": "ECDSA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2458,
															"src": "78994:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ECDSA_$2458_$",
																"typeString": "type(library ECDSA)"
															}
														},
														"id": 3500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "79000:7:0",
														"memberName": "recover",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2408,
														"src": "78994:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78994:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78977:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3507,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3498,
														"src": "79036:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3508,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "79046:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "79036:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3516,
												"nodeType": "IfStatement",
												"src": "79032:88:0",
												"trueBody": {
													"id": 3515,
													"nodeType": "Block",
													"src": "79053:67:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3511,
																		"name": "signer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3498,
																		"src": "79095:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3512,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3450,
																		"src": "79103:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3510,
																	"name": "ERC2612InvalidSigner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3436,
																	"src": "79074:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 3513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "79074:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3514,
															"nodeType": "RevertStatement",
															"src": "79067:42:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "79139:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3452,
															"src": "79146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "79155:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3300,
															3360
														],
														"referencedDeclaration": 3300,
														"src": "79130:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79130:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3522,
												"nodeType": "ExpressionStatement",
												"src": "79130:31:0"
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "78448:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "d505accf",
									"id": 3524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "78505:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "78529:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78521:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "78552:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78544:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "78577:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78569:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3456,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "78600:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78592:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3458,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "78624:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78618:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3457,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "78618:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "78643:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78635:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3459,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "78662:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 3524,
												"src": "78654:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3461,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "78654:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78511:158:0"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78685:0:0"
									},
									"scope": 3552,
									"src": "78496:672:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26,
										2486
									],
									"body": {
										"id": 3540,
										"nodeType": "Block",
										"src": "79322:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3537,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3527,
															"src": "79352:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 3535,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "79339:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Permit_$3552_$",
																"typeString": "type(contract super ERC20Permit)"
															}
														},
														"id": 3536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "79345:6:0",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 26,
														"src": "79339:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 3538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79339:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3534,
												"id": 3539,
												"nodeType": "Return",
												"src": "79332:26:0"
											}
										]
									},
									"documentation": {
										"id": 3525,
										"nodeType": "StructuredDocumentation",
										"src": "79174:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "7ecebe00",
									"id": 3541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "79231:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3531,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3529,
												"name": "IERC20Permit",
												"nameLocations": [
													"79282:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2493,
												"src": "79282:12:0"
											},
											{
												"id": 3530,
												"name": "Nonces",
												"nameLocations": [
													"79296:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "79296:6:0"
											}
										],
										"src": "79273:30:0"
									},
									"parameters": {
										"id": 3528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "79246:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "79238:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79237:15:0"
									},
									"returnParameters": {
										"id": 3534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3541,
												"src": "79313:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "79313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79312:9:0"
									},
									"scope": 3552,
									"src": "79222:143:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2492
									],
									"body": {
										"id": 3550,
										"nodeType": "Block",
										"src": "79540:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3547,
														"name": "_domainSeparatorV4",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2007,
														"src": "79557:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
															"typeString": "function () view returns (bytes32)"
														}
													},
													"id": 3548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79557:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 3546,
												"id": 3549,
												"nodeType": "Return",
												"src": "79550:27:0"
											}
										]
									},
									"documentation": {
										"id": 3542,
										"nodeType": "StructuredDocumentation",
										"src": "79371:43:0",
										"text": " @inheritdoc IERC20Permit"
									},
									"functionSelector": "3644e515",
									"id": 3551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "79481:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79497:2:0"
									},
									"returnParameters": {
										"id": 3546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3551,
												"src": "79531:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3544,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "79531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79530:9:0"
									},
									"scope": 3552,
									"src": "79472:112:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 3588,
							"src": "77712:1874:0",
							"usedErrors": [
								9,
								211,
								213,
								2121,
								2126,
								2131,
								2504,
								2509,
								2514,
								2523,
								2528,
								2533,
								3429,
								3436
							],
							"usedEvents": [
								71,
								2814,
								2823
							]
						},
						{
							"id": 3553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "79623:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3554,
										"name": "ERC20",
										"nameLocations": [
											"79672:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3409,
										"src": "79672:5:0"
									},
									"id": 3555,
									"nodeType": "InheritanceSpecifier",
									"src": "79672:5:0"
								},
								{
									"baseName": {
										"id": 3556,
										"name": "ERC20Permit",
										"nameLocations": [
											"79679:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3552,
										"src": "79679:11:0"
									},
									"id": 3557,
									"nodeType": "InheritanceSpecifier",
									"src": "79679:11:0"
								},
								{
									"baseName": {
										"id": 3558,
										"name": "Ownable",
										"nameLocations": [
											"79692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2803,
										"src": "79692:7:0"
									},
									"id": 3559,
									"nodeType": "InheritanceSpecifier",
									"src": "79692:7:0"
								}
							],
							"canonicalName": "Pigment",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3587,
							"linearizedBaseContracts": [
								3587,
								2803,
								3552,
								67,
								2111,
								91,
								2493,
								3409,
								2534,
								2903,
								2880,
								2658
							],
							"name": "Pigment",
							"nameLocation": "79661:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3585,
										"nodeType": "Block",
										"src": "79838:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "79854:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "79858:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "79854:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "36323030303030303030303030",
																"id": 3577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "79866:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6200000000000_by_1",
																	"typeString": "int_const 6200000000000"
																},
																"value": "6200000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "79882:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3579,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2973,
																		"src": "79888:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 3580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "79888:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "79882:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "79866:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3574,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3249,
														"src": "79848:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79848:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3584,
												"nodeType": "ExpressionStatement",
												"src": "79848:51:0"
											}
										]
									},
									"id": 3586,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5069676d656e74",
													"id": 3564,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79754:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b5d84a157d704f19d1839dbe7e358643b81d4d8e9d7fd17005d9f84efcdb687f",
														"typeString": "literal_string \"Pigment\""
													},
													"value": "Pigment"
												},
												{
													"hexValue": "50474d54",
													"id": 3565,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_df98df96be17b79248f340636a551466af63e6b546b506dddc9eb8c518d576f6",
														"typeString": "literal_string \"PGMT\""
													},
													"value": "PGMT"
												}
											],
											"id": 3566,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3563,
												"name": "ERC20",
												"nameLocations": [
													"79748:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3409,
												"src": "79748:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79748:24:0"
										},
										{
											"arguments": [
												{
													"hexValue": "5069676d656e74",
													"id": 3568,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "79793:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b5d84a157d704f19d1839dbe7e358643b81d4d8e9d7fd17005d9f84efcdb687f",
														"typeString": "literal_string \"Pigment\""
													},
													"value": "Pigment"
												}
											],
											"id": 3569,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3567,
												"name": "ERC20Permit",
												"nameLocations": [
													"79781:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3552,
												"src": "79781:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79781:22:0"
										},
										{
											"arguments": [
												{
													"id": 3571,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3561,
													"src": "79820:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3572,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3570,
												"name": "Ownable",
												"nameLocations": [
													"79812:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2803,
												"src": "79812:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "79812:21:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3561,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "79726:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3586,
												"src": "79718:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79717:22:0"
									},
									"returnParameters": {
										"id": 3573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "79838:0:0"
									},
									"scope": 3587,
									"src": "79706:200:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3588,
							"src": "79652:256:0",
							"usedErrors": [
								9,
								211,
								213,
								2121,
								2126,
								2131,
								2504,
								2509,
								2514,
								2523,
								2528,
								2533,
								2669,
								2674,
								3429,
								3436
							],
							"usedEvents": [
								71,
								2680,
								2814,
								2823
							]
						}
					],
					"src": "126:79783:0"
				},
				"id": 0
			}
		}
	}
}